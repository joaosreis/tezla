{ parameter
    (or (or (or (mutez %changeBet) (pair %changeOwner address bool))
            (or (int %closeGame) (int %participate)))
        (int %setUpGame)) ;
  storage
    (pair (pair (pair (address %addressToPay) (mutez %bet))
                (pair (int %count) (map %owners address bool)))
          (map %players address int)) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair address mutez) (pair int (map address bool))) (map address int)))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT OWNER" ; FAILWITH } {} ;
             PUSH string "Owner privilege Revoke" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH nat 10 ;
                     DUP 3 ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "No enougth players in game" ; FAILWITH } {} ;
                     NIL address ;
                     DUP 3 ;
                     CDR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CDR ;
                            DUP 4 ;
                            COMPARE ;
                            EQ ;
                            IF { SWAP ; CDR ; CAR ; CONS } { SWAP ; DROP } } ;
                     SWAP ;
                     DROP ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ;
                          DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                          BALANCE ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          DIG 2 ;
                          SWAP ;
                          CONS }
                        { DUP ;
                          SIZE ;
                          BALANCE ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIG 3 ;
                          DIG 2 ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 CONTRACT unit ;
                                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                                 DUP 3 ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 SWAP ;
                                 CAR ;
                                 SWAP ;
                                 CONS } ;
                          SWAP ;
                          DROP } ;
                     PAIR }
                   { DIG 2 ;
                     DIG 4 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     IF { DIG 2 ;
                          DROP 2 ;
                          PUSH string "Amount send not equal as bet price" ;
                          FAILWITH }
                        { PUSH string "Value to high" ;
                          PUSH int 50 ;
                          DUP 3 ;
                          COMPARE ;
                          GT ;
                          PAIR ;
                          DUP 4 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          PUSH string "Value to low" ;
                          PUSH int 0 ;
                          DUP 3 ;
                          COMPARE ;
                          LT ;
                          PAIR ;
                          DUP 4 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          PUSH string "Game full" ;
                          PUSH nat 10 ;
                          DUP 3 ;
                          SIZE ;
                          COMPARE ;
                          GE ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          DUP ;
                          SENDER ;
                          GET ;
                          IF_NONE
                            { SWAP ; SOME ; SENDER ; UPDATE }
                            { DIG 2 ; DROP 2 ; PUSH string "You are already registered" ; FAILWITH } ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH int 1 ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          ADD ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } } }
           { DIG 3 ;
             DROP 2 ;
             DUP ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             DROP ;
             EMPTY_MAP address int ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             PUSH int 0 ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }
