{ parameter
    (or (or (or (or (string :newName %setName) (string :newSymbol %setSymbol))
                (or (option :newMbSafelistAddress %setSafelistAddress address)
                    (address :newAdmin %transferAdminRights)))
            (or (or (unit %acceptAdminRights)
                    (pair %isAdmin (address %viewParam) (contract %viewCallbackTo bool)))
                (or (pair %transfer (address :from) (pair (address :to) (nat :value)))
                    (or (pair %seize (address :from) (pair (address :to) (nat :value)))
                        (pair %approve (address :spender) (nat :value))))))
        (or (or (or (pair %getAllowance
                       (pair %viewParam (address :owner) (address :spender))
                       (contract %viewCallbackTo nat))
                    (pair %getBalance (address :owner %viewParam) (contract %viewCallbackTo nat)))
                (or (pair %getTotalSupply (unit %viewParam) (contract %viewCallbackTo nat))
                    (pair %mint (address :to) (nat :value))))
            (or (or (pair %burn (address :from) (nat :value)) (unit %burnAll))
                (or (bool :value %setPause)
                    (or (bool :value %setTransferable)
                        (pair %getTokenMeta
                           (unit %viewParam)
                           (contract %viewCallbackTo
                              (pair (string %tmName) (pair (string %tmSymbol) (string %tmId)))))))))) ;
  storage
    (pair (big_map %sLedger address (nat :balance))
          (pair (big_map %sApprovals (pair (address :owner) (address :spender)) nat)
                (pair %sFields
                   (pair (pair (pair %sfTokenMeta (string %tmName) (pair (string %tmSymbol) (string %tmId)))
                               (option %sfMbSafelistAddress address))
                         (pair (address %sfOwner) (address %sfAdmin)))
                   (pair (pair (option %sfMbNewAdmin address) (bool %sfPaused))
                         (pair (bool %sfTransferable) (nat %sfTotalSupply)))))) ;
  code { CAST (pair (or (or (or (or string string) (or (option address) address))
                            (or (or unit (pair address (contract bool)))
                                (or (pair address (pair address nat))
                                    (or (pair address (pair address nat)) (pair address nat)))))
                        (or (or (or (pair (pair address address) (contract nat)) (pair address (contract nat)))
                                (or (pair unit (contract nat)) (pair address nat)))
                            (or (or (pair address nat) unit)
                                (or bool (or bool (pair unit (contract (pair string (pair string string)))))))))
                    (pair (big_map address nat)
                          (pair (big_map (pair address address) nat)
                                (pair (pair (pair (pair string (pair string string)) (option address)) (pair address address))
                                      (pair (pair (option address) bool) (pair bool nat)))))) ;
         NIL operation ;
         SWAP ;
         DUP ;
         CAR ;
         DIP { CDR ;
               DUP ;
               CAR ;
               DIP { CDR ; DUP ; CAR ; DIP { CDR } } ;
               DIP { DIP { DUP ;
                           CAR ;
                           DIP { CDR ;
                                 DUP ;
                                 CAR ;
                                 DIP { CDR ; DUP ; CAR ; DIP { CDR } } ;
                                 DUP ;
                                 CAR ;
                                 DIP { CDR } } ;
                           DUP ;
                           CAR ;
                           DIP { CDR ; DUP ; CAR ; DIP { CDR } } ;
                           DUP ;
                           CAR ;
                           DIP { CDR } ;
                           DUP ;
                           CAR ;
                           DIP { CDR ; DUP ; CAR ; DIP { CDR } } } } } ;
         DUP ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIP 9 { DUP } ;
                         DIG 9 ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } ;
                         DIP 12 { DUP } ;
                         DIG 12 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 7 { DROP } ;
                         DUG 6 ;
                         DROP 2 ;
                         DROP }
                       { DIP 9 { DUP } ;
                         DIG 9 ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } ;
                         DIP 12 { DUP } ;
                         DIG 12 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 8 { DROP } ;
                         DUG 7 ;
                         DROP 2 ;
                         DROP } }
                   { IF_LEFT
                       { DIP 8 { DUP } ;
                         DIG 8 ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; PUSH string "SenderIsNotOwner" ; PAIR ; FAILWITH } ;
                         DIP { DUP } ;
                         SWAP ;
                         DIP 9 { DROP } ;
                         DUG 8 ;
                         DIP { DUP } ;
                         SWAP ;
                         IF_NONE
                           {}
                           { DUP ;
                             CONTRACT %assertTransfer (pair address address) ;
                             IF_NONE
                               { PUSH string "assertTransfer" ;
                                 PUSH string "InvalidSafelistAddr" ;
                                 PAIR ;
                                 FAILWITH }
                               { DROP } ;
                             DUP ;
                             CONTRACT %assertReceiver address ;
                             IF_NONE
                               { PUSH string "assertReceiver" ;
                                 PUSH string "InvalidSafelistAddr" ;
                                 PAIR ;
                                 FAILWITH }
                               { DROP } ;
                             DUP ;
                             CONTRACT %assertReceivers (list address) ;
                             IF_NONE
                               { PUSH string "assertReceivers" ;
                                 PUSH string "InvalidSafelistAddr" ;
                                 PAIR ;
                                 FAILWITH }
                               { DROP } ;
                             DROP } ;
                         DROP 2 }
                       { DIP 8 { DUP } ;
                         DIG 8 ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; PUSH string "SenderIsNotOwner" ; PAIR ; FAILWITH } ;
                         DIP 12 { DUP } ;
                         DIG 12 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         SOME ;
                         DIP 13 { DROP } ;
                         DUG 12 ;
                         DROP 2 ;
                         DROP } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIP 10 { DUP } ;
                         DIG 10 ;
                         DUP ;
                         IF_NONE
                           { UNIT ; PUSH string "NotInTransferAdminRightsMode" ; PAIR ; FAILWITH }
                           { DUP ;
                             SENDER ;
                             SWAP ;
                             COMPARE ;
                             NEQ ;
                             IF { UNIT ; PUSH string "SenderIsNotNewAdmin" ; PAIR ; FAILWITH }
                                { DUP ;
                                  DIP 12 { DROP } ;
                                  DUG 11 ;
                                  NONE address ;
                                  DIP 13 { DROP } ;
                                  DUG 12 } ;
                             DROP } ;
                         DROP 2 }
                       { DIP 9 { DUP } ;
                         DIG 9 ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         AMOUNT ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         CAR ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         COMPARE ;
                         EQ ;
                         TRANSFER_TOKENS ;
                         DUG 15 ;
                         DIP 15 { CONS } ;
                         DROP 2 } }
                   { IF_LEFT
                       { DIP 12 { DUP } ;
                         DIG 12 ;
                         DUP ;
                         IF {} { UNIT ; PUSH string "NonTransferable" ; PAIR ; FAILWITH } ;
                         DIP 8 { DUP } ;
                         DIG 8 ;
                         DUP ;
                         IF_NONE
                           {}
                           { DUP ;
                             CONTRACT %assertTransfer (pair address address) ;
                             IF_NONE
                               { PUSH string "assertTransfer" ;
                                 PUSH string "InvalidSafelistAddr" ;
                                 PAIR ;
                                 FAILWITH }
                               { DUP ;
                                 PUSH mutez 0 ;
                                 DIP 6 { DUP } ;
                                 DIG 6 ;
                                 CDR ;
                                 CAR ;
                                 DIP 7 { DUP } ;
                                 DIG 7 ;
                                 CAR ;
                                 PAIR ;
                                 TRANSFER_TOKENS ;
                                 DUG 18 ;
                                 DIP 18 { CONS } ;
                                 DROP } ;
                             DROP } ;
                         DIP 13 { DUP } ;
                         DIG 13 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         CDR ;
                         CAR ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CAR ;
                         DIP 5 { DUP } ;
                         DIG 5 ;
                         CDR ;
                         CDR ;
                         DIP { DUP } ;
                         SWAP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DIP 6 { DUP } ;
                              DIG 6 ;
                              CAR ;
                              DIP 7 { DUP } ;
                              DIG 7 ;
                              CDR ;
                              CDR ;
                              DIP 11 { DUP } ;
                              DIG 11 ;
                              DUP ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { SENDER } ;
                              PAIR ;
                              GET ;
                              IF_NONE { PUSH nat 0 } {} ;
                              DUP ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              PAIR ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              SUB ;
                              ISNAT ;
                              IF_NONE
                                { DUP ; PUSH string "NotEnoughAllowance" ; PAIR ; FAILWITH }
                                { DIP 15 { DUP } ;
                                  DIG 15 ;
                                  DIP 6 { DUP } ;
                                  DIG 6 ;
                                  DIP { SENDER } ;
                                  PAIR ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  DIP 3 { DUP } ;
                                  DIG 3 ;
                                  DUP ;
                                  INT ;
                                  EQ ;
                                  IF { DROP ; NONE nat } { SOME } ;
                                  DIP 2 { DUP } ;
                                  DIG 2 ;
                                  UPDATE ;
                                  DIP 18 { DROP } ;
                                  DUG 17 ;
                                  DROP 2 ;
                                  DROP } ;
                              DROP 2 ;
                              DROP 2 ;
                              DROP }
                            {} ;
                         DIP 8 { DUP } ;
                         DIG 8 ;
                         DUP ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         GET ;
                         IF_NONE
                           { PUSH nat 0 ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             PAIR ;
                             PUSH string "NotEnoughBalance" ;
                             PAIR ;
                             FAILWITH }
                           { DUP ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             DIP { DUP } ;
                             SWAP ;
                             SUB ;
                             ISNAT ;
                             IF_NONE
                               { DUP ;
                                 DIP 4 { DUP } ;
                                 DIG 4 ;
                                 PAIR ;
                                 PUSH string "NotEnoughBalance" ;
                                 PAIR ;
                                 FAILWITH }
                               {} ;
                             DUP ;
                             PUSH nat 0 ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF { NONE nat } { DUP ; SOME } ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP 8 { DUP } ;
                             DIG 8 ;
                             UPDATE ;
                             DIP 14 { DROP } ;
                             DUG 13 ;
                             DIP 24 { DUP } ;
                             DIG 24 ;
                             DIP 6 { DUP } ;
                             DIG 6 ;
                             DIP { DUP } ;
                             SWAP ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH string "Unexpected: Negative total supply" ; FAILWITH } {} ;
                             DUP ;
                             DIP 27 { DROP } ;
                             DUG 26 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP 2 } ;
                         DIP 9 { DUP } ;
                         DIG 9 ;
                         PUSH nat 0 ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         COMPARE ;
                         NEQ ;
                         IF { DUP ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              GET ;
                              IF_NONE
                                { DIP 2 { DUP } ; DIG 2 }
                                { DUP ; DIP 4 { DUP } ; DIG 4 ; ADD ; SWAP ; DROP } ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP } ;
                              SWAP ;
                              SOME ;
                              DIP 7 { DUP } ;
                              DIG 7 ;
                              UPDATE ;
                              DIP 12 { DROP } ;
                              DUG 11 ;
                              DIP 22 { DUP } ;
                              DIG 22 ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              DIP { DUP } ;
                              ADD ;
                              DIP 24 { DROP } ;
                              DUG 23 ;
                              DROP 2 }
                            {} ;
                         DROP 2 ;
                         DROP 2 ;
                         DROP 2 ;
                         DROP 2 ;
                         DROP }
                       { IF_LEFT
                           { DIP 9 { DUP } ;
                             DIG 9 ;
                             DUP ;
                             SENDER ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF {} { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } ;
                             DIP 12 { DUP } ;
                             DIG 12 ;
                             DUP ;
                             IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                             DIP 14 { DUP } ;
                             DIG 14 ;
                             DUP ;
                             IF {} { UNIT ; PUSH string "NonTransferable" ; PAIR ; FAILWITH } ;
                             DIP 10 { DUP } ;
                             DIG 10 ;
                             DUP ;
                             IF_NONE
                               {}
                               { DUP ;
                                 CONTRACT %assertTransfer (pair address address) ;
                                 IF_NONE
                                   { PUSH string "assertTransfer" ;
                                     PUSH string "InvalidSafelistAddr" ;
                                     PAIR ;
                                     FAILWITH }
                                   { DUP ;
                                     PUSH mutez 0 ;
                                     DIP 8 { DUP } ;
                                     DIG 8 ;
                                     CDR ;
                                     CAR ;
                                     DIP 9 { DUP } ;
                                     DIG 9 ;
                                     CAR ;
                                     PAIR ;
                                     TRANSFER_TOKENS ;
                                     DUG 20 ;
                                     DIP 20 { CONS } ;
                                     DROP } ;
                                 DROP } ;
                             DIP 6 { DUP } ;
                             DIG 6 ;
                             DUP ;
                             DIP 6 { DUP } ;
                             DIG 6 ;
                             CAR ;
                             GET ;
                             IF_NONE
                               { PUSH nat 0 ;
                                 DIP 6 { DUP } ;
                                 DIG 6 ;
                                 CDR ;
                                 CDR ;
                                 PAIR ;
                                 PUSH string "NotEnoughBalance" ;
                                 PAIR ;
                                 FAILWITH }
                               { DUP ;
                                 DIP 7 { DUP } ;
                                 DIG 7 ;
                                 CDR ;
                                 CDR ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE
                                   { DUP ;
                                     DIP 8 { DUP } ;
                                     DIG 8 ;
                                     CDR ;
                                     CDR ;
                                     PAIR ;
                                     PUSH string "NotEnoughBalance" ;
                                     PAIR ;
                                     FAILWITH }
                                   {} ;
                                 DUP ;
                                 PUSH nat 0 ;
                                 SWAP ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE nat } { DUP ; SOME } ;
                                 DIP 4 { DUP } ;
                                 DIG 4 ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 DIP 11 { DUP } ;
                                 DIG 11 ;
                                 CAR ;
                                 UPDATE ;
                                 DIP 12 { DROP } ;
                                 DUG 11 ;
                                 DIP 22 { DUP } ;
                                 DIG 22 ;
                                 DIP 10 { DUP } ;
                                 DIG 10 ;
                                 CDR ;
                                 CDR ;
                                 DIP { DUP } ;
                                 SWAP ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH string "Unexpected: Negative total supply" ; FAILWITH } {} ;
                                 DUP ;
                                 DIP 25 { DROP } ;
                                 DUG 24 ;
                                 DROP 2 ;
                                 DROP 2 ;
                                 DROP 2 } ;
                             DIP 7 { DUP } ;
                             DIG 7 ;
                             PUSH nat 0 ;
                             DIP 7 { DUP } ;
                             DIG 7 ;
                             CDR ;
                             CDR ;
                             COMPARE ;
                             NEQ ;
                             IF { DUP ;
                                  DIP 7 { DUP } ;
                                  DIG 7 ;
                                  CDR ;
                                  CAR ;
                                  GET ;
                                  IF_NONE
                                    { DIP 6 { DUP } ; DIG 6 ; CDR ; CDR }
                                    { DUP ; DIP 8 { DUP } ; DIG 8 ; CDR ; CDR ; ADD ; SWAP ; DROP } ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  SOME ;
                                  DIP 9 { DUP } ;
                                  DIG 9 ;
                                  CDR ;
                                  CAR ;
                                  UPDATE ;
                                  DIP 10 { DROP } ;
                                  DUG 9 ;
                                  DIP 20 { DUP } ;
                                  DIG 20 ;
                                  DIP 8 { DUP } ;
                                  DIG 8 ;
                                  CDR ;
                                  CDR ;
                                  DIP { DUP } ;
                                  ADD ;
                                  DIP 22 { DROP } ;
                                  DUG 21 ;
                                  DROP 2 }
                                {} ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP }
                           { DIP 7 { DUP } ;
                             DIG 7 ;
                             DUP ;
                             IF_NONE
                               {}
                               { DUP ;
                                 CONTRACT %assertReceivers (list address) ;
                                 IF_NONE
                                   { PUSH string "assertReceivers" ;
                                     PUSH string "InvalidSafelistAddr" ;
                                     PAIR ;
                                     FAILWITH }
                                   { DUP ;
                                     PUSH mutez 0 ;
                                     NIL address ;
                                     SENDER ;
                                     CONS ;
                                     DIP 6 { DUP } ;
                                     DIG 6 ;
                                     CAR ;
                                     CONS ;
                                     TRANSFER_TOKENS ;
                                     DUG 17 ;
                                     DIP 17 { CONS } ;
                                     DROP } ;
                                 DROP } ;
                             DIP 12 { DUP } ;
                             DIG 12 ;
                             DUP ;
                             IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             CAR ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             CDR ;
                             DIP 7 { DUP } ;
                             DIG 7 ;
                             DUP ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             SENDER ;
                             PAIR ;
                             GET ;
                             IF_NONE { PUSH nat 0 } {} ;
                             PUSH nat 0 ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             COMPARE ;
                             NEQ ;
                             PUSH nat 0 ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             COMPARE ;
                             NEQ ;
                             AND ;
                             IF { DUP ; PUSH string "UnsafeAllowanceChange" ; PAIR ; FAILWITH } {} ;
                             DIP 9 { DUP } ;
                             DIG 9 ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             SENDER ;
                             PAIR ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP 5 { DUP } ;
                             DIG 5 ;
                             DUP ;
                             INT ;
                             EQ ;
                             IF { DROP ; NONE nat } { SOME } ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             UPDATE ;
                             DIP 12 { DROP } ;
                             DUG 11 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP } } } } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIP 3 { DUP } ;
                         DIG 3 ;
                         DUP ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } {} ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         AMOUNT ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         DUG 16 ;
                         DIP 16 { CONS } ;
                         DROP 2 ;
                         DROP }
                       { DIP 2 { DUP } ;
                         DIG 2 ;
                         DUP ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } {} ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         AMOUNT ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         DUG 16 ;
                         DIP 16 { CONS } ;
                         DROP 2 ;
                         DROP } }
                   { IF_LEFT
                       { DIP 13 { DUP } ;
                         DIG 13 ;
                         DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         AMOUNT ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         DUG 15 ;
                         DIP 15 { CONS } ;
                         DROP 2 }
                       { DIP 11 { DUP } ;
                         DIG 11 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 8 { DUP } ;
                         DIG 8 ;
                         DUP ;
                         IF_NONE
                           {}
                           { DUP ;
                             CONTRACT %assertReceiver address ;
                             IF_NONE
                               { PUSH string "assertReceiver" ;
                                 PUSH string "InvalidSafelistAddr" ;
                                 PAIR ;
                                 FAILWITH }
                               { DUP ;
                                 PUSH mutez 0 ;
                                 DIP 6 { DUP } ;
                                 DIG 6 ;
                                 CAR ;
                                 TRANSFER_TOKENS ;
                                 DUG 18 ;
                                 DIP 18 { CONS } ;
                                 DROP } ;
                             DROP } ;
                         DIP 11 { DUP } ;
                         DIG 11 ;
                         DUP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } {} ;
                         DIP 5 { DUP } ;
                         DIG 5 ;
                         PUSH nat 0 ;
                         DIP 5 { DUP } ;
                         DIG 5 ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         IF { DUP ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              CAR ;
                              GET ;
                              IF_NONE
                                { DIP 4 { DUP } ; DIG 4 ; CDR }
                                { DUP ; DIP 6 { DUP } ; DIG 6 ; CDR ; ADD ; SWAP ; DROP } ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP } ;
                              SWAP ;
                              SOME ;
                              DIP 7 { DUP } ;
                              DIG 7 ;
                              CAR ;
                              UPDATE ;
                              DIP 8 { DROP } ;
                              DUG 7 ;
                              DIP 18 { DUP } ;
                              DIG 18 ;
                              DIP 6 { DUP } ;
                              DIG 6 ;
                              CDR ;
                              DIP { DUP } ;
                              ADD ;
                              DIP 20 { DROP } ;
                              DUG 19 ;
                              DROP 2 }
                            {} ;
                         DROP 2 ;
                         DROP 2 ;
                         DROP } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIP 11 { DUP } ;
                         DIG 11 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         DIP 10 { DUP } ;
                         DIG 10 ;
                         DUP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } {} ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         DUP ;
                         DIP 4 { DUP } ;
                         DIG 4 ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { PUSH nat 0 ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             CDR ;
                             PAIR ;
                             PUSH string "NotEnoughBalance" ;
                             PAIR ;
                             FAILWITH }
                           { DUP ;
                             DIP 5 { DUP } ;
                             DIG 5 ;
                             CDR ;
                             DIP { DUP } ;
                             SWAP ;
                             SUB ;
                             ISNAT ;
                             IF_NONE
                               { DUP ;
                                 DIP 6 { DUP } ;
                                 DIG 6 ;
                                 CDR ;
                                 PAIR ;
                                 PUSH string "NotEnoughBalance" ;
                                 PAIR ;
                                 FAILWITH }
                               {} ;
                             DUP ;
                             PUSH nat 0 ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF { NONE nat } { DUP ; SOME } ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP 9 { DUP } ;
                             DIG 9 ;
                             CAR ;
                             UPDATE ;
                             DIP 10 { DROP } ;
                             DUG 9 ;
                             DIP 20 { DUP } ;
                             DIG 20 ;
                             DIP 8 { DUP } ;
                             DIG 8 ;
                             CDR ;
                             DIP { DUP } ;
                             SWAP ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH string "Unexpected: Negative total supply" ; FAILWITH } {} ;
                             DUP ;
                             DIP 23 { DROP } ;
                             DUG 22 ;
                             DROP 2 ;
                             DROP 2 ;
                             DROP 2 } ;
                         DROP 2 ;
                         DROP 2 }
                       { DIP 9 { DUP } ;
                         DIG 9 ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } ;
                         DIP 12 { DUP } ;
                         DIG 12 ;
                         DUP ;
                         IF { UNIT ; PUSH string "TokenOperationsArePaused" ; PAIR ; FAILWITH } {} ;
                         EMPTY_BIG_MAP address nat ;
                         DIP 5 { DROP } ;
                         DUG 4 ;
                         EMPTY_BIG_MAP (pair address address) nat ;
                         DIP 6 { DROP } ;
                         DUG 5 ;
                         PUSH nat 0 ;
                         DIP 16 { DROP } ;
                         DUG 15 ;
                         DROP 2 ;
                         DROP } }
                   { IF_LEFT
                       { DIP 9 { DUP } ;
                         DIG 9 ;
                         DUP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } {} ;
                         DIP { DUP } ;
                         SWAP ;
                         DIP 13 { DROP } ;
                         DUG 12 ;
                         DROP 2 }
                       { IF_LEFT
                           { DIP 9 { DUP } ;
                             DIG 9 ;
                             DUP ;
                             SENDER ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF {} { UNIT ; PUSH string "SenderIsNotAdmin" ; PAIR ; FAILWITH } ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP 14 { DROP } ;
                             DUG 13 ;
                             DROP 2 }
                           { DIP 4 { DUP } ;
                             DIG 4 ;
                             DIP { DIP 5 { DUP } ; DIG 5 ; DIP { DIP 6 { DUP } ; DIG 6 } ; PAIR } ;
                             PAIR ;
                             DIP { DUP } ;
                             SWAP ;
                             CDR ;
                             AMOUNT ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             DUG 15 ;
                             DIP 15 { CONS } ;
                             DROP 2 } } } } } ;
         DROP ;
         DIP { DIP { DIP { PAIR } ;
                     PAIR ;
                     PAIR ;
                     DIP { PAIR } ;
                     PAIR ;
                     DIP { PAIR ; DIP { PAIR } ; PAIR } ;
                     PAIR } } ;
         DIP { PAIR } ;
         PAIR ;
         SWAP ;
         PAIR } }
