{ storage (pair (int %balance) (string %ownerAddress)) ;
  parameter
    (or (or (int %minimumAmountCheck)
            (pair %receiveTransaction (int %amount) (string %senderAddress)))
        (or (pair %sendTransaction (int %amount) (string %senderAddress))
            (pair %setTransaction (int %amount) (string %senderAddress)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { DUP ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.balance >= params.amount" ;
                          FAILWITH } } ;
                   DROP } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: params.senderAddress == self.data.ownerAddress" ;
                          FAILWITH } } ;
                   DUP ;
                   CAR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.balance >= params.amount" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   SUB ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: params.senderAddress == self.data.ownerAddress" ;
                          FAILWITH } } ;
                   DUP ;
                   CAR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.balance >= params.amount" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   SUB ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: params.senderAddress == self.data.ownerAddress" ;
                          FAILWITH } } ;
                   DUP ;
                   CAR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   COMPARE ;
                   GE ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.balance >= params.amount" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   SUB ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 } } } ;
         NIL operation ;
         PAIR } }
