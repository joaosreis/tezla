{ storage
    (pair (address %leader)
          (pair (int %leader_countdown_minutes) (timestamp %leadership_start_timestamp))) ;
  parameter
    (or (or (unit %default) (contract %get_leader address))
        (or (contract %get_leadership_start_timestamp timestamp) (unit %withdraw))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 PUSH mutez 200000 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.amount == sp.mutez(200000)" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 NOW ;
                 SWAP ;
                 PUSH int 60 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 MUL ;
                 ADD ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.add_seconds(self.data.leadership_start_timestamp, self.data.leader_countdown_minutes * 60) > sp.now" ;
                      FAILWITH } ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CAR ;
                 NOW ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation }
               { NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DROP ;
                 DUP ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.leader == sp.sender" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 NOW ;
                 SWAP ;
                 PUSH int 60 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 MUL ;
                 ADD ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.add_seconds(self.data.leadership_start_timestamp, self.data.leader_countdown_minutes * 60) < sp.now" ;
                      FAILWITH } ;
                 NIL operation ;
                 SENDER ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 26 ; FAILWITH } {} ;
                 BALANCE ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS } } ;
         PAIR } }
