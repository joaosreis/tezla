{ storage
    (pair (pair (pair (address %admin) (nat %all_auctions))
                (pair (big_map %auctions
                         nat
                         (pair (pair (pair (address %author) (nat %cut))
                                     (pair (timestamp %end_timestamp) (address %nft_address)))
                               (pair (pair (nat %number) (nat %price))
                                     (pair (timestamp %start_timestamp) (map %token_metadata string bytes)))))
                      (big_map %bidders nat (set bytes))))
          (pair (pair (nat %counter) (set %operators address))
                (pair (map %prices
                         nat
                         (list (pair (pair (address %bidder) (bytes %payment_data))
                                     (pair (string %payment_method) (nat %price)))))
                      (address %user_manager)))) ;
  parameter
    (or (or (pair %bid (nat %auction_id) (bytes %data))
            (or (pair %create_auction
                   (pair (pair (address %author) (nat %cut))
                         (pair (timestamp %end_timestamp) (address %nft_address)))
                   (pair (pair (nat %number) (nat %price))
                         (pair (timestamp %start_timestamp) (map %token_metadata string bytes))))
                (address %set_administrator)))
        (or (list %update_operator (pair (address %operator) (bool %valid)))
            (or (address %update_user_manager)
                (pair %withdraw
                   (nat %auction_id)
                   (list %bids
                      (pair (pair (address %bidder) (bytes %payment_data))
                            (pair (string %payment_method) (nat %price)))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 CDR ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1317 ; FAILWITH } {} ;
                 GET 5 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_NOT_START" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1317 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "AUC_AUCTION_IS_OVER" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF {}
                    { SWAP ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH (option (set bytes)) (Some {}) ;
                      DUP 6 ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 1323 ; FAILWITH } {} ;
                 PUSH bool True ;
                 DUP 8 ;
                 CDR ;
                 UPDATE ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PUSH int 300 ;
                 NOW ;
                 DUP 4 ;
                 CAR ;
                 GET 3 ;
                 DUP 4 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1317 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SUB ;
                 COMPARE ;
                 LT ;
                 IF { SWAP ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      DUP ;
                      DUP 6 ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 1326 ; FAILWITH } {} ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      CDR ;
                      NOW ;
                      PUSH int 300 ;
                      ADD ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 5 ;
                 CAR ;
                 GET 3 ;
                 DUP 6 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1317 ; FAILWITH } {} ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CDR ;
                     SENDER ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                          FAILWITH } ;
                     DUP ;
                     GET 5 ;
                     PUSH int 60 ;
                     DUP ;
                     PUSH int 0 ;
                     MUL ;
                     MUL ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                     NOW ;
                     PUSH int 60 ;
                     DUP ;
                     PUSH int 168 ;
                     MUL ;
                     MUL ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "AUC_END_DATE_TOO_LATE" ; FAILWITH } ;
                     DUP ;
                     GET 3 ;
                     CDR ;
                     PUSH nat 100 ;
                     SWAP ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 4 ;
                     DUP ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     GET 5 ;
                     PAIR %start_timestamp %token_metadata ;
                     DIG 5 ;
                     DUP ;
                     GET 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     GET 3 ;
                     CAR ;
                     PAIR %number %price ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     GET 3 ;
                     PAIR %end_timestamp %nft_address ;
                     DIG 6 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR %author %cut ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (set bytes)) (Some {}) ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH nat 1 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR } } ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 ITER { DUP ;
                        CDR ;
                        IF { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             PUSH bool True ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             PUSH bool False ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } ;
                 DROP ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_AUCTION_IS_ONGOING" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     ITER { DUP 3 ;
                            CAR ;
                            GET 4 ;
                            DUP 3 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 1342 ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            SHA256 ;
                            DUP 3 ;
                            GET 3 ;
                            PACK ;
                            SHA256 ;
                            DUP 4 ;
                            GET 4 ;
                            PACK ;
                            SHA256 ;
                            DUP 5 ;
                            CAR ;
                            CAR ;
                            PACK ;
                            SHA256 ;
                            CONCAT ;
                            CONCAT ;
                            CONCAT ;
                            MEM ;
                            IF {}
                               { PUSH string
                                      "WrongCondition: self.data.bidders[params.auction_id].contains(((sp.sha256(sp.pack(bid.bidder)) + sp.sha256(sp.pack(bid.price))) + sp.sha256(sp.pack(bid.payment_method))) + sp.sha256(bid.payment_data))" ;
                                 FAILWITH } ;
                            DIG 2 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            DUP ;
                            DUP 7 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 1343 ; FAILWITH } {} ;
                            PUSH bool False ;
                            DUP 8 ;
                            CAR ;
                            CDR ;
                            SHA256 ;
                            DUP 9 ;
                            GET 3 ;
                            PACK ;
                            SHA256 ;
                            DUP 10 ;
                            GET 4 ;
                            PACK ;
                            SHA256 ;
                            DUP 11 ;
                            CAR ;
                            CAR ;
                            PACK ;
                            SHA256 ;
                            CONCAT ;
                            CONCAT ;
                            CONCAT ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            DUP ;
                            DUG 3 ;
                            GET 5 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 4 ;
                            MEM ;
                            IF {}
                               { DIG 2 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 PUSH (option
                                         (list (pair (pair (address %bidder) (bytes %payment_data))
                                                     (pair (string %payment_method) (nat %price)))))
                                      (Some {}) ;
                                 DUP 6 ;
                                 GET 4 ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 2 } ;
                            DUP 3 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            DIG 6 ;
                            GET 5 ;
                            DUP 6 ;
                            GET 4 ;
                            GET ;
                            IF_NONE { PUSH int 1347 ; FAILWITH } {} ;
                            DUP 6 ;
                            CONS ;
                            SOME ;
                            DIG 5 ;
                            GET 4 ;
                            UPDATE ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP } ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     GET 4 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 1349 ; FAILWITH } {} ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.len(self.data.bidders[params.auction_id]) == 0" ;
                          FAILWITH } ;
                     NIL operation ;
                     NIL (list (pair (pair (address %bidder) (bytes %payment_data))
                                     (pair (string %payment_method) (nat %price)))) ;
                     DUP 4 ;
                     GET 5 ;
                     ITER { CDR ; CONS } ;
                     NIL (list (pair (pair (address %bidder) (bytes %payment_data))
                                     (pair (string %payment_method) (nat %price)))) ;
                     SWAP ;
                     ITER { CONS } ;
                     NIL (list (pair (pair (address %bidder) (bytes %payment_data))
                                     (pair (string %payment_method) (nat %price)))) ;
                     SWAP ;
                     ITER { CONS } ;
                     ITER { PUSH nat 0 ;
                            DUP 5 ;
                            CAR ;
                            GET 3 ;
                            DUP 5 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                            GET 3 ;
                            CAR ;
                            COMPARE ;
                            GT ;
                            IF { DUP 4 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DUP ;
                                 DUP 8 ;
                                 CAR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH int 1353 ; FAILWITH } {} ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 CDR ;
                                 PUSH int 0 ;
                                 DUP ;
                                 DUP 11 ;
                                 SIZE ;
                                 DIG 14 ;
                                 CAR ;
                                 GET 3 ;
                                 DUP 15 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                 GET 3 ;
                                 CAR ;
                                 SUB ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 LE ;
                                 IF { DROP } { SWAP ; DROP } ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 1353 ; FAILWITH } {} ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 3 ;
                                 DUP ;
                                 ITER { DUP 5 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 5 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                        GET 3 ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 4 ;
                                        COMPARE ;
                                        GE ;
                                        IF {}
                                           { PUSH string
                                                  "WrongCondition: bid.price >= self.data.auctions[params.auction_id].price" ;
                                             FAILWITH } ;
                                        DIG 2 ;
                                        DUP 5 ;
                                        GET 6 ;
                                        CONTRACT %pay
                                          (pair (pair (address %account) (nat %amount)) (pair (bytes %data) (string %method))) ;
                                        IF_NONE { PUSH int 1357 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 3 ;
                                        DUP ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        CDR ;
                                        PAIR %data %method ;
                                        DIG 4 ;
                                        DUP ;
                                        GET 4 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CAR ;
                                        PAIR %account %amount ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        DUP 5 ;
                                        GET 6 ;
                                        CONTRACT %update_balance
                                          (pair (address %account) (pair (nat %amount) (bool %increase))) ;
                                        IF_NONE { PUSH int 1361 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        PUSH bool True ;
                                        PUSH nat 100 ;
                                        DUP 9 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 9 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 7 ;
                                        GET 4 ;
                                        MUL ;
                                        EDIV ;
                                        IF_NONE { PUSH int 1360 ; FAILWITH } { CAR } ;
                                        PAIR %amount %increase ;
                                        DUP 8 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 8 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR %account ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        DUG 2 ;
                                        DIG 4 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        PUSH nat 1 ;
                                        ADD ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DUP ;
                                        DUG 5 ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DUP ;
                                        DUP 9 ;
                                        CAR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 1366 ; FAILWITH } {} ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DIG 13 ;
                                        GET 3 ;
                                        CAR ;
                                        PACK ;
                                        SOME ;
                                        PUSH string "edition" ;
                                        UPDATE ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        DUG 4 ;
                                        DIG 2 ;
                                        DUP 5 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 5 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                        CAR ;
                                        GET 4 ;
                                        CONTRACT %mint (pair (address %address) (map %metadata string bytes)) ;
                                        IF_NONE { PUSH int 1367 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DUP 7 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 7 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 1333 ; FAILWITH } {} ;
                                        GET 6 ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        PAIR %address %metadata ;
                                        TRANSFER_TOKENS ;
                                        CONS ;
                                        SWAP } ;
                                 DROP }
                               { DROP } } ;
                     DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     NONE (pair (pair (pair (address %author) (nat %cut))
                                      (pair (timestamp %end_timestamp) (address %nft_address)))
                                (pair (pair (nat %number) (nat %price))
                                      (pair (timestamp %start_timestamp) (map %token_metadata string bytes)))) ;
                     DIG 6 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     EMPTY_MAP
                       nat
                       (list (pair (pair (address %bidder) (bytes %payment_data))
                                   (pair (string %payment_method) (nat %price)))) ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
