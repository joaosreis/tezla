{ storage (option address) ;
  parameter (or (unit %create1) (or (unit %create2) (unit %create4))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
               PUSH mutez 0 ;
               NONE key_hash ;
               CREATE_CONTRACT
                 { parameter (pair (int %x) (nat %y)) ;
                   storage (pair (int %a) (nat %b)) ;
                   code { { DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            DIG 3 ;
                            CAR ;
                            ADD ;
                            PAIR ;
                            SWAP ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            SWAP ;
                            CDR ;
                            DIG 2 ;
                            CDR ;
                            ADD ;
                            SWAP ;
                            PAIR ;
                            NIL operation ;
                            PAIR } } } ;
               DIG 3 ;
               DROP ;
               DIG 2 ;
               DROP ;
               PAIR ;
               DUP ;
               CAR ;
               NIL operation ;
               SWAP ;
               CONS ;
               SWAP ;
               CDR ;
               SOME ;
               SWAP } }
           { IF_LEFT
               { { PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
                   PUSH mutez 12000000 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DIG 2 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                NIL operation ;
                                PAIR } } } ;
                   PAIR ;
                   DUP ;
                   CAR ;
                   NIL operation ;
                   SWAP ;
                   CONS ;
                   PUSH (pair (int %a) (nat %b)) (Pair 12 16) ;
                   PUSH mutez 12000000 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DIG 2 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                NIL operation ;
                                PAIR } } } ;
                   DIG 3 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   PAIR ;
                   CAR ;
                   CONS } }
               { { PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
                   PUSH mutez 0 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DIG 2 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                NIL operation ;
                                PAIR } } } ;
                   DIG 2 ;
                   DROP ;
                   PAIR ;
                   CAR ;
                   NIL operation ;
                   SWAP ;
                   CONS } } } ;
         PAIR } }
