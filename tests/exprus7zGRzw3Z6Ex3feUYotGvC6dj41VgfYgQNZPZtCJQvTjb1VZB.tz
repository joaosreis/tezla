{ parameter
    (or (list %check_ownership (pair (pair (address %owner) (nat %token_id)) (nat %balance)))
        (or (pair %upforsale (nat %id) (mutez %price)) (or (nat %bid) (nat %claim)))) ;
  storage
    (pair (address %nftoken)
          (pair (int %auction_dur)
                (pair (int %dur_incr)
                      (map %nft
                         nat
                         (pair (address %owner)
                               (pair (option %bestbidder address) (pair (mutez %best) (timestamp %endofbid)))))))) ;
  code { LAMBDA
           (pair address (pair address nat))
           (list (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             NIL (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
             PUSH nat 1 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             CONS ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             CONS ;
             SWAP ;
             DROP 1 ;
             DUG 3 ;
             DROP 3 } ;
         LAMBDA
           (pair address (pair address nat))
           (list (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                     (pair (address %owner) (pair (address %operator) (nat %token_id)))))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             NIL (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                     (pair (address %owner) (pair (address %operator) (nat %token_id)))) ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             RIGHT (pair address (pair address nat)) ;
             CONS ;
             SWAP ;
             DROP 1 ;
             DUG 3 ;
             DROP 3 } ;
         NIL operation ;
         DIG 3 ;
         UNPAIR ;
         DIP 1 { UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { DUP ;
             IF_CONS
               { PUSH nat 1 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "Caller Is Not Owner" ; FAILWITH } {} ;
                 DROP 2 }
               { PUSH string "Empty Response" ; FAILWITH } ;
             DROP 1 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { UNPAIR ;
                 SWAP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MEM ;
                 IF { NOW ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      GET ;
                      IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                      CDR ;
                      CDR ;
                      CDR ;
                      COMPARE ;
                      LT }
                    { PUSH bool True } ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: r1" ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 NOW ;
                 ADD ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 NONE address ;
                 PAIR ;
                 SENDER ;
                 PAIR ;
                 SOME ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 UPDATE ;
                 DIP 1 { DIG 2 ; DROP 1 } ;
                 DUG 2 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CONTRACT %balance_of
                   (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                 IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 SELF ;
                 ADDRESS ;
                 CONTRACT %check_ownership (list (pair (pair address nat) nat)) ;
                 IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                 NIL (pair (address %owner) (nat %token_id)) ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIP 1 { DIG 6 ; DROP 1 } ;
                 DUG 6 ;
                 DROP 2 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CDR ;
                     NOW ;
                     COMPARE ;
                     LT ;
                     NOT ;
                     IF { PUSH string "No Auction" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     IF_NONE { PUSH bool False } { PUSH bool True ; SWAP ; DROP 1 } ;
                     IF { DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                          CDR ;
                          CDR ;
                          CAR ;
                          AMOUNT ;
                          COMPARE ;
                          GT }
                        { DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                          CDR ;
                          CDR ;
                          CAR ;
                          AMOUNT ;
                          COMPARE ;
                          GE } ;
                     NOT ;
                     IF { PUSH string "Not Best Bid" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     IF_NONE
                       {}
                       { DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP 1 { DIG 6 ; DROP 1 } ;
                         DUG 6 ;
                         DROP 1 } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DROP 1 ;
                     SENDER ;
                     SOME ;
                     SWAP ;
                     UNPAIR ;
                     DROP 1 ;
                     AMOUNT ;
                     SWAP ;
                     DROP 1 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     UPDATE ;
                     DIP 1 { DIG 2 ; DROP 1 } ;
                     DUG 2 ;
                     DROP 2 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { NOW ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     LT ;
                     NOT ;
                     IF { PUSH string "Auction Is Still On" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     IF_NONE
                       {}
                       { DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         CAR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP 1 { DIG 6 ; DROP 1 } ;
                         DUG 6 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CONTRACT %update_operators
                           (list (or (pair address (pair address nat)) (pair address (pair address nat)))) ;
                         IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         PAIR ;
                         EXEC ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP 1 { DIG 6 ; DROP 1 } ;
                         DUG 6 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                         IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         CAR ;
                         PAIR ;
                         EXEC ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP 1 { DIG 6 ; DROP 1 } ;
                         DUG 6 ;
                         DROP 1 } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     NONE (pair address (pair (option address) (pair mutez timestamp))) ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     UPDATE ;
                     DIP 1 { DIG 1 ; DROP 1 } ;
                     DUG 1 ;
                     DROP 1 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR } } } ;
         DIP 1 { DROP 2 } } }
