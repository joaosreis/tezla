{ parameter
    (or (or (or (address %add_credits_contract)
                (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin)))
            (or (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
                (pair %create_cert_family
                   (pair %token_id (address %fa2) (nat %token_id))
                   (map %token_info string bytes))))
        (or (or (address %remove_credits_contract)
                (pair %token_metadata
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (map %token_info string bytes))))))
            (or (pair %token_owners
                   (list %token_ids nat)
                   (contract %callback (list (pair (address %owner) (nat %token_id)))))
                (pair %tokens_received
                   (list %batch
                      (pair (option %from_ address)
                            (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                   (address %operator))))) ;
  storage
    (pair (pair (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
                      (pair %assets
                         (big_map %ledger nat address)
                         (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                (pair (big_map %cert_family (pair (address %fa2) (nat %token_id)) (map string bytes))
                      (big_map %credits_contracts address unit)))
          (pair (big_map %metadata string bytes) (nat %next_token_id))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ; CDR ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     SOME ;
                     DIG 3 ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SOME ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     UNPAIR ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             MAP { DUP 3 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DROP ; DUP 5 ; FAILWITH }
                                     { SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       SWAP ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       SWAP ;
                                       PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DROP 2 ; SWAP ; DROP ; PUSH string "FA2_TX_DENIED" ; FAILWITH } }
                       { DROP 2 ; SWAP ; DROP ; PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH } ;
                     UNPAIR ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     NONE unit ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ; SWAP ; GET ; IF_NONE { DUP 4 ; FAILWITH } {} } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { DROP ; DUP 4 ; FAILWITH } { PAIR } } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     MEM ;
                     IF {} { PUSH string "FA2_RECEIVER_HOOK_FAILED" ; FAILWITH } ;
                     CAR ;
                     ITER { DUP ;
                            DUG 2 ;
                            CAR ;
                            IF_NONE
                              { SWAP ; DROP }
                              { SWAP ;
                                DIG 2 ;
                                CDR ;
                                ITER { DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       IF_NONE
                                         { SWAP ; DROP }
                                         { SELF_ADDRESS ;
                                           SWAP ;
                                           COMPARE ;
                                           EQ ;
                                           IF { SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                SWAP ;
                                                CDR ;
                                                CAR ;
                                                DUP 3 ;
                                                DIG 2 ;
                                                UNPAIR ;
                                                DIG 3 ;
                                                SENDER ;
                                                PAIR ;
                                                DUP 3 ;
                                                CAR ;
                                                CDR ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                GET ;
                                                IF_NONE
                                                  { DROP 3 ; PUSH string "UNKNOWN_CREDIT_TOKEN" ; FAILWITH }
                                                  { SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CAR ;
                                                    PACK ;
                                                    SOME ;
                                                    PUSH string "credits_contract" ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    CDR ;
                                                    PACK ;
                                                    SOME ;
                                                    PUSH string "credits_token_id" ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    PACK ;
                                                    SOME ;
                                                    PUSH string "amount" ;
                                                    UPDATE ;
                                                    NOW ;
                                                    PACK ;
                                                    SOME ;
                                                    PUSH string "timestamp" ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CDR ;
                                                    DUP 3 ;
                                                    CAR ;
                                                    CDR ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    DIG 3 ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    PAIR ;
                                                    DUP 5 ;
                                                    CDR ;
                                                    CDR ;
                                                    SWAP ;
                                                    SOME ;
                                                    SWAP ;
                                                    UPDATE ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    CAR ;
                                                    CDR ;
                                                    CAR ;
                                                    PAIR ;
                                                    DIG 3 ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    PAIR ;
                                                    PAIR ;
                                                    PAIR } ;
                                                PUSH nat 1 ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                ADD ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                PAIR ;
                                                DUP ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CDR ;
                                                PUSH nat 1 ;
                                                DUP 5 ;
                                                CDR ;
                                                CDR ;
                                                ADD ;
                                                DUP 5 ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                DUP 5 ;
                                                CAR ;
                                                PAIR ;
                                                CAR ;
                                                CAR ;
                                                CDR ;
                                                CDR ;
                                                DUP 5 ;
                                                CAR ;
                                                CAR ;
                                                CDR ;
                                                CAR ;
                                                DIG 6 ;
                                                DIG 6 ;
                                                CDR ;
                                                CDR ;
                                                SWAP ;
                                                SOME ;
                                                SWAP ;
                                                UPDATE ;
                                                PAIR ;
                                                DIG 3 ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                PAIR }
                                              { SWAP ; DROP } } } ;
                                SWAP ;
                                DROP } } ;
                     NIL operation ;
                     PAIR } } } } }
