{ parameter
    (or (or (or (or (pair %addExtra string string) (pair %approve address nat))
                (or (nat %burn) (nat %buy)))
            (or (or (pair %getAllowance
                       (pair (contract %callback nat) (address %owner))
                       (address %spender))
                    (pair %getBalance (contract %callback nat) (address %owner)))
                (or (contract %getTotalSupply nat) (nat %mint))))
        (or (or (or (unit %pause) (address %removeApproval))
                (or (mutez %setBuyPrice) (nat %supplyBuyPool)))
            (pair %transfer (pair address address) nat))) ;
  storage
    (pair (pair (pair (mutez %buyPrice)
                      (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                (pair (pair %metadata
                         (pair (pair (nat %decimals) (map %extras string string))
                               (pair (string %name) (string %symbol)))
                         (nat %token_id))
                      (address %owner)))
          (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply))) ;
  code { DUP ;
         CDR ;
         DUP ;
         CAR ;
         CDR ;
         CDR ;
         SOURCE ;
         COMPARE ;
         NEQ ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         AND ;
         IF { PUSH string "ContractIsPaused" ; FAILWITH }
            { DIG 1 ;
              DUP ;
              DUG 2 ;
              CAR ;
              IF_LEFT
                { DUP ;
                  IF_LEFT
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedOperation" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SOME ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CAR ;
                                   UPDATE ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              DUP ;
                              LAMBDA
                                (pair address nat)
                                (lambda
                                   (pair (pair (pair (mutez %buyPrice)
                                                     (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                               (pair (pair %metadata
                                                        (pair (pair (nat %decimals) (map %extras string string))
                                                              (pair (string %name) (string %symbol)))
                                                        (nat %token_id))
                                                     (address %owner)))
                                         (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))
                                   (pair (pair (pair (mutez %buyPrice)
                                                     (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                               (pair (pair %metadata
                                                        (pair (pair (nat %decimals) (map %extras string string))
                                                              (pair (string %name) (string %symbol)))
                                                        (nat %token_id))
                                                     (address %owner)))
                                         (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply))))
                                { DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DIP { DUP } ;
                                  DUP ;
                                  DIP { PAIR } ;
                                  SWAP ;
                                  LAMBDA
                                    (pair (pair nat address)
                                          (pair (pair (pair (mutez %buyPrice)
                                                            (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                                      (pair (pair %metadata
                                                               (pair (pair (nat %decimals) (map %extras string string))
                                                                     (pair (string %name) (string %symbol)))
                                                               (nat %token_id))
                                                            (address %owner)))
                                                (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply))))
                                    (pair (pair (pair (mutez %buyPrice)
                                                      (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                                (pair (pair %metadata
                                                         (pair (pair (nat %decimals) (map %extras string string))
                                                               (pair (string %name) (string %symbol)))
                                                         (nat %token_id))
                                                      (address %owner)))
                                          (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))
                                    { DUP ;
                                      CAR ;
                                      SWAP ;
                                      CDR ;
                                      DIP { DUP ; CDR ; SWAP ; CAR } ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { PUSH string "The account owner and the spender address cannot be the same!" ;
                                           FAILWITH }
                                         { DUP ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           SENDER ;
                                           GET ;
                                           IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                                           DUP ;
                                           CAR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           GET ;
                                           IF_NONE
                                             { DUP ; CAR ; DIG 3 ; DUP ; DUG 4 ; SOME ; DIG 5 ; DUP ; DUG 6 ; UPDATE }
                                             { PUSH nat 0 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               COMPARE ;
                                               GT ;
                                               PUSH nat 0 ;
                                               DIG 2 ;
                                               DUP ;
                                               DUG 3 ;
                                               COMPARE ;
                                               GT ;
                                               AND ;
                                               IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH }
                                                  { DIG 1 ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CAR ;
                                                    DIG 4 ;
                                                    DUP ;
                                                    DUG 5 ;
                                                    SOME ;
                                                    DIG 6 ;
                                                    DUP ;
                                                    DUG 7 ;
                                                    UPDATE } ;
                                               DIP { DROP } } ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           SWAP ;
                                           CDR ;
                                           SWAP ;
                                           PAIR ;
                                           SOME ;
                                           SENDER ;
                                           UPDATE ;
                                           DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                           SWAP ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           DIP { DROP 2 } } ;
                                      DIP { DROP 3 } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIP { DROP 2 } } ;
                              SWAP ;
                              APPLY ;
                              DIP { DROP } ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              EXEC ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } }
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SENDER ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedAccess" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR }
                                     { DUP ; DIP { DROP } } ;
                                   DUP ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   COMPARE ;
                                   GT ;
                                   IF { PUSH string "Owner balance is too low" ; FAILWITH }
                                      { DUP ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        SUB ;
                                        ABS ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        DIG 7 ;
                                        DUP ;
                                        DUG 8 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        SOME ;
                                        DIG 9 ;
                                        DUP ;
                                        DUG 10 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        UPDATE ;
                                        DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        DIG 8 ;
                                        DUP ;
                                        DUG 9 ;
                                        CDR ;
                                        CDR ;
                                        SUB ;
                                        ABS ;
                                        DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIP { DROP } } ;
                                   DIP { DROP } } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } }
                            { PUSH mutez 0 ;
                              AMOUNT ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH string "NoAmount" ; FAILWITH }
                                 { DUP ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   COMPARE ;
                                   LT ;
                                   IF { PUSH string "InsufficientBuyPool" ; FAILWITH }
                                      { DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        MUL ;
                                        AMOUNT ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "IncorrectAmount" ; FAILWITH }
                                           { DUP ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             SUB ;
                                             ABS ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             SENDER ;
                                             GET ;
                                             IF_NONE
                                               { DIG 1 ; DUP ; DUG 2 ; EMPTY_MAP address nat ; PAIR }
                                               { DUP ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 CDR ;
                                                 ADD ;
                                                 SWAP ;
                                                 CAR ;
                                                 PAIR ;
                                                 DIP { DROP } } ;
                                             DIG 6 ;
                                             DUP ;
                                             DUG 7 ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             SOME ;
                                             SENDER ;
                                             UPDATE ;
                                             DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DIP { DROP 2 } } } } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } } ;
                      DIP { DROP } }
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                              DUP ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                              NIL operation ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              PUSH mutez 0 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIP { DROP 2 } ;
                              PAIR ;
                              DIP { DROP } }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                              NIL operation ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              PUSH mutez 0 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIP { DROP } ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } }
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              NIL operation ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              PUSH mutez 0 ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CDR ;
                              CDR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              PAIR ;
                              DIP { DROP } }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SENDER ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedAccess" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DUP ; EMPTY_MAP address nat ; PAIR }
                                     { DUP ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       CDR ;
                                       ADD ;
                                       SWAP ;
                                       CAR ;
                                       PAIR ;
                                       DIP { DROP } } ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SOME ;
                                   DIG 8 ;
                                   DUP ;
                                   DUG 9 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   UPDATE ;
                                   DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   CDR ;
                                   CDR ;
                                   ADD ;
                                   DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   DIP { DROP } } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } } ;
                      DIP { DROP } } ;
                  DIP { DROP } }
                { DUP ;
                  IF_LEFT
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedOperation" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   NOT ;
                                   DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } }
                            { DUP ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH string "The account owner and the spender address cannot be the same!" ;
                                   FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   SENDER ;
                                   GET ;
                                   IF_NONE
                                     { PUSH string "Account not found!" ; FAILWITH }
                                     { DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       DIG 6 ;
                                       DUP ;
                                       DUG 7 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       CAR ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       NONE nat ;
                                       SWAP ;
                                       UPDATE ;
                                       SWAP ;
                                       CDR ;
                                       SWAP ;
                                       PAIR ;
                                       SOME ;
                                       SENDER ;
                                       UPDATE ;
                                       DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       DIP { DROP } } } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } }
                        { DUP ;
                          IF_LEFT
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedOperation" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "UnauthorizedOperation" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   SOURCE ;
                                   GET ;
                                   IF_NONE
                                     { PUSH string "NoAccount" ; FAILWITH }
                                     { DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       COMPARE ;
                                       LT ;
                                       IF { PUSH string "InsufficientTokenBalance" ; FAILWITH }
                                          { DUP ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CDR ;
                                            SUB ;
                                            ABS ;
                                            SWAP ;
                                            CAR ;
                                            PAIR } ;
                                       DIP { DROP } } ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SOME ;
                                   SOURCE ;
                                   UPDATE ;
                                   DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   ADD ;
                                   DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   DIP { DROP } } ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } } ;
                          DIP { DROP } } ;
                      DIP { DROP } }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      DUP ;
                      LAMBDA
                        (pair address address)
                        (lambda
                           nat
                           (lambda
                              (pair (pair (pair (mutez %buyPrice)
                                                (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                          (pair (pair %metadata
                                                   (pair (pair (nat %decimals) (map %extras string string))
                                                         (pair (string %name) (string %symbol)))
                                                   (nat %token_id))
                                                (address %owner)))
                                    (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))
                              (pair (pair (pair (mutez %buyPrice)
                                                (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                          (pair (pair %metadata
                                                   (pair (pair (nat %decimals) (map %extras string string))
                                                         (pair (string %name) (string %symbol)))
                                                   (nat %token_id))
                                                (address %owner)))
                                    (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))))
                        { DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DIP { DUP } ;
                          DUP ;
                          DIP { PAIR } ;
                          SWAP ;
                          LAMBDA
                            (pair (pair address address) nat)
                            (lambda
                               (pair (pair (pair (mutez %buyPrice)
                                                 (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                           (pair (pair %metadata
                                                    (pair (pair (nat %decimals) (map %extras string string))
                                                          (pair (string %name) (string %symbol)))
                                                    (nat %token_id))
                                                 (address %owner)))
                                     (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))
                               (pair (pair (pair (mutez %buyPrice)
                                                 (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                           (pair (pair %metadata
                                                    (pair (pair (nat %decimals) (map %extras string string))
                                                          (pair (string %name) (string %symbol)))
                                                    (nat %token_id))
                                                 (address %owner)))
                                     (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply))))
                            { DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP } ; DUP ; DIP { PAIR } ; SWAP } ;
                              DUP ;
                              DIP { PAIR } ;
                              SWAP ;
                              LAMBDA
                                (pair (pair nat (pair address address))
                                      (pair (pair (pair (mutez %buyPrice)
                                                        (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                                  (pair (pair %metadata
                                                           (pair (pair (nat %decimals) (map %extras string string))
                                                                 (pair (string %name) (string %symbol)))
                                                           (nat %token_id))
                                                        (address %owner)))
                                            (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply))))
                                (pair (pair (pair (mutez %buyPrice)
                                                  (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                                            (pair (pair %metadata
                                                     (pair (pair (nat %decimals) (map %extras string string))
                                                           (pair (string %name) (string %symbol)))
                                                     (nat %token_id))
                                                  (address %owner)))
                                      (pair (pair (bool %paused) (nat %tokenBuyPool)) (nat %totalSupply)))
                                { DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP ; CDR ; SWAP ; CAR } } ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  DIG 4 ;
                                  DUP ;
                                  DUG 5 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH string "SameOriginAndDestination" ; FAILWITH }
                                     { DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       SENDER ;
                                       COMPARE ;
                                       NEQ ;
                                       IF { DUP ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            GET ;
                                            IF_NONE
                                              { PUSH bool False }
                                              { DUP ;
                                                CAR ;
                                                SENDER ;
                                                GET ;
                                                IF_NONE
                                                  { PUSH bool False }
                                                  { DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    DIG 1 ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    GE ;
                                                    DIP { DROP } } ;
                                                DIP { DROP } } }
                                          { PUSH bool True } ;
                                       NOT ;
                                       IF { PUSH string "NotEnoughAllowance" ; FAILWITH }
                                          { DUP ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            GET ;
                                            IF_NONE { PUSH string "NoAccount" ; FAILWITH } { DUP ; DIP { DROP } } ;
                                            DUP ;
                                            CDR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            COMPARE ;
                                            GT ;
                                            IF { PUSH string "NotEnoughBalance" ; FAILWITH }
                                               { DUP ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 CDR ;
                                                 SUB ;
                                                 ABS ;
                                                 SWAP ;
                                                 CAR ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 GET ;
                                                 IF_NONE
                                                   { DIG 3 ; DUP ; DUG 4 ; EMPTY_MAP address nat ; PAIR }
                                                   { DUP ;
                                                     DIG 5 ;
                                                     DUP ;
                                                     DUG 6 ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CDR ;
                                                     ADD ;
                                                     SWAP ;
                                                     CAR ;
                                                     PAIR ;
                                                     DIP { DROP } } ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 SENDER ;
                                                 GET ;
                                                 IF_NONE
                                                   { DIG 1 ; DUP ; DUG 2 ; CAR }
                                                   { DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     DIG 6 ;
                                                     DUP ;
                                                     DUG 7 ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     SUB ;
                                                     ABS ;
                                                     SOME ;
                                                     SENDER ;
                                                     UPDATE ;
                                                     DIP { DROP } } ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 SWAP ;
                                                 CDR ;
                                                 SWAP ;
                                                 PAIR ;
                                                 SOME ;
                                                 DIG 10 ;
                                                 DUP ;
                                                 DUG 11 ;
                                                 UPDATE ;
                                                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 SOME ;
                                                 DIG 10 ;
                                                 DUP ;
                                                 DUG 11 ;
                                                 UPDATE ;
                                                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIP { DROP 4 } } ;
                                            DIP { DROP } } } ;
                                  DIP { DROP 4 } } ;
                              SWAP ;
                              APPLY ;
                              DIP { DROP 3 } } ;
                          SWAP ;
                          APPLY ;
                          DIP { DROP 2 } } ;
                      SWAP ;
                      APPLY ;
                      DIP { DROP } ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      EXEC ;
                      NIL operation ;
                      PAIR ;
                      DIP { DROP } } ;
                  DIP { DROP } } } ;
         DIP { DROP 2 } } }
