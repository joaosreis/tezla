{ parameter
    (or (or (or (pair %gameEntryHook
                   (address %player)
                   (pair (list %guess_lists (list nat)) (pair (list %custom_price_list nat) (nat %price))))
                (bytes %prophecyCallback))
            (or (pair %resolveGame (list %sol_prophecy nat) (string %nonce_prophecy))
                (pair %setupAutoRenew (bool %auto_renew) (int %next_end))))
        (or (pair %setupContract
               (address %oracle)
               (pair (address %tezcas_contract) (pair (address %fa2_contract) (set %owners address))))
            (pair %setupGame
               (timestamp %date_end)
               (pair (nat %guess_min)
                     (pair (nat %guess_max)
                           (pair (nat %guess_length)
                                 (pair (nat %entry_price)
                                       (pair (nat %fees) (pair (bool %auto_renew) (pair (int %next_end) (nat %pot))))))))))) ;
  storage
    (pair (pair (pair %contract_infos
                   (pair (address %fa2_contract) (address %oracle))
                   (pair (set %owners address) (address %tezcas_contract)))
                (pair %game_infos
                   (pair (pair (pair (bool %auto_renew) (timestamp %date_end))
                               (pair (timestamp %date_now) (bool %ended)))
                         (pair (pair (nat %entry_price) (nat %fees)) (pair (nat %guess_length) (nat %guess_max))))
                   (pair (pair (pair (nat %guess_min) (nat %n_bets)) (pair (int %next_end) (nat %pot)))
                         (pair (bytes %prophecy) (bytes %released_prophecy)))))
          (map %games address (map nat (list nat)))) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; IF { FAILWITH } { DROP ; UNIT } } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { PUSH string "TZC_LOTO_CONTRACT_UNAUTHORIZED" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "TZC_LOTO_GAME_ENDED" ;
                     NOW ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     LT ;
                     PUSH bool True ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     OR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE { EMPTY_MAP nat (list nat) } {} ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     ITER { SWAP ;
                            DUP 3 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            DUP 3 ;
                            SIZE ;
                            COMPARE ;
                            NEQ ;
                            IF { PUSH string "TZC_LOTO_GUESS_LENGTH_NOT_MATCH" ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            ITER { DUP 4 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   GT ;
                                   DUP 5 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   DIG 2 ;
                                   COMPARE ;
                                   LT ;
                                   OR ;
                                   IF { PUSH string "TZC_LOTO_GUESS_NOT_IN_RANGE" ; FAILWITH } {} } ;
                            DUP ;
                            DUG 2 ;
                            SIZE ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     SIZE ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     DIG 2 ;
                     SOME ;
                     SOURCE ;
                     UPDATE ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { PUSH string "TZC_LOTO_NOT_OWNER" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     MEM ;
                     NOT ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "TZC_LOTO_ORACLE_NOT_AUTHORIZED" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     PUSH string "TZC_GAME_NOT_TIMEOUT" ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     NOW ;
                     COMPARE ;
                     LE ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "TZC_GAME_ALREADY_ENDED" ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     PACK ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     NIL nat ;
                     SWAP ;
                     ITER { CONS } ;
                     ITER { PACK ; CONCAT } ;
                     DUP ;
                     SHA256 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "TZC_LOTO_WRONG_RESOLVER" ; FAILWITH } {} ;
                     EMPTY_SET address ;
                     DUP 4 ;
                     CDR ;
                     ITER { SWAP ;
                            PUSH nat 0 ;
                            DUP 3 ;
                            CDR ;
                            ITER { SWAP ;
                                   DUP 6 ;
                                   CAR ;
                                   PUSH bool True ;
                                   PUSH nat 1 ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 8 ;
                                   DIG 3 ;
                                   PAIR ;
                                   LAMBDA
                                     (pair (pair (pair nat (list nat))
                                                 (pair (pair (pair (pair address address) (pair (set address) address))
                                                             (pair (pair (pair (pair bool timestamp) (pair timestamp bool))
                                                                         (pair (pair nat nat) (pair nat nat)))
                                                                   (pair (pair (pair nat nat) (pair int nat)) (pair bytes bytes))))
                                                       (map address (map nat (list nat)))))
                                           (pair (pair nat bool) (list nat)))
                                     (pair bool (pair (pair nat bool) (list nat)))
                                     { UNPAIR ;
                                       UNPAIR ;
                                       DIG 2 ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CAR ;
                                       DUP 5 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       COMPARE ;
                                       LE ;
                                       IF { PUSH nat 1 ;
                                            PUSH bool False ;
                                            DIG 5 ;
                                            CDR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP 5 ;
                                            DUP 4 ;
                                            PAIR ;
                                            LAMBDA
                                              (pair (pair (list nat)
                                                          (pair (pair (pair (pair address address) (pair (set address) address))
                                                                      (pair (pair (pair (pair bool timestamp) (pair timestamp bool))
                                                                                  (pair (pair nat nat) (pair nat nat)))
                                                                            (pair (pair (pair nat nat) (pair int nat)) (pair bytes bytes))))
                                                                (map address (map nat (list nat)))))
                                                    (pair (pair (list nat) bool) nat))
                                              (pair bool (pair (pair (list nat) bool) nat))
                                              { UNPAIR ;
                                                UNPAIR ;
                                                DIG 2 ;
                                                DUP ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CDR ;
                                                DUP 3 ;
                                                CAR ;
                                                CAR ;
                                                PUSH bool False ;
                                                DUP 3 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 7 ;
                                                CAR ;
                                                CDR ;
                                                CAR ;
                                                CDR ;
                                                CDR ;
                                                CAR ;
                                                DUP 5 ;
                                                COMPARE ;
                                                LE ;
                                                AND ;
                                                IF { DIG 3 ;
                                                     DROP ;
                                                     DIG 3 ;
                                                     IF_CONS { SWAP ; DROP ; SOME } { NONE nat } ;
                                                     IF_NONE { PUSH nat 0 } {} ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     IF_CONS { SWAP ; DROP ; SOME } { NONE nat } ;
                                                     IF_NONE { PUSH nat 0 } {} ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { SWAP ;
                                                          DROP ;
                                                          SWAP ;
                                                          DROP ;
                                                          PUSH nat 1 ;
                                                          DIG 2 ;
                                                          CAR ;
                                                          CDR ;
                                                          CAR ;
                                                          CDR ;
                                                          CDR ;
                                                          CAR ;
                                                          ADD ;
                                                          PUSH bool True ;
                                                          PAIR }
                                                        { DIG 3 ; DROP ; PUSH nat 1 ; DIG 3 ; ADD ; DIG 2 ; PAIR } ;
                                                     UNPAIR ;
                                                     DIG 2 ;
                                                     IF_CONS { DROP ; SOME } { NONE (list nat) } ;
                                                     IF_NONE { NIL nat } {} ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PUSH bool True ;
                                                     PAIR }
                                                   { DROP 3 ; SWAP ; DROP ; SWAP ; DROP ; PUSH bool False ; PAIR } } ;
                                            SWAP ;
                                            APPLY ;
                                            SWAP ;
                                            PUSH bool True ;
                                            LOOP { DIP { DUP } ; EXEC ; UNPAIR } ;
                                            SWAP ;
                                            DROP ;
                                            DUP 3 ;
                                            DUP 5 ;
                                            CAR ;
                                            CDR ;
                                            DUP 4 ;
                                            PAIR ;
                                            PAIR ;
                                            PUSH bool True ;
                                            DIG 2 ;
                                            CAR ;
                                            CDR ;
                                            COMPARE ;
                                            EQ ;
                                            IF { DIG 4 ;
                                                 DROP ;
                                                 DIG 2 ;
                                                 IF_CONS { DROP ; SOME } { NONE (list nat) } ;
                                                 IF_NONE { NIL nat } {} ;
                                                 SWAP ;
                                                 CAR ;
                                                 PAIR ;
                                                 PUSH nat 1 ;
                                                 DIG 2 ;
                                                 ADD ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PAIR }
                                               { SWAP ;
                                                 DROP ;
                                                 SWAP ;
                                                 DROP ;
                                                 DUP ;
                                                 CDR ;
                                                 PUSH bool False ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 CAR ;
                                                 PAIR ;
                                                 PAIR ;
                                                 PUSH nat 1 ;
                                                 DIG 3 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 CDR ;
                                                 CDR ;
                                                 CAR ;
                                                 ADD ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PAIR } ;
                                            DUP ;
                                            CDR ;
                                            DUP 3 ;
                                            CDR ;
                                            DIG 3 ;
                                            CAR ;
                                            CDR ;
                                            DUP 4 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP ;
                                            CDR ;
                                            DIG 3 ;
                                            CAR ;
                                            CDR ;
                                            DIG 2 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            CAR ;
                                            PAIR ;
                                            PUSH bool True ;
                                            PAIR }
                                          { DROP 2 ; SWAP ; DROP ; SWAP ; DROP ; PUSH bool False ; PAIR } } ;
                                   SWAP ;
                                   APPLY ;
                                   SWAP ;
                                   PUSH bool True ;
                                   LOOP { DIP { DUP } ; EXEC ; UNPAIR } ;
                                   SWAP ;
                                   DROP ;
                                   PUSH bool True ;
                                   SWAP ;
                                   CAR ;
                                   CDR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH nat 1 ; ADD } {} } ;
                            PUSH nat 0 ;
                            SWAP ;
                            COMPARE ;
                            GT ;
                            IF { SWAP ; CAR ; PUSH bool True ; SWAP ; UPDATE } { SWAP ; DROP } } ;
                     DIG 2 ;
                     DROP ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     ADD ;
                     PUSH nat 100 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP ;
                     DUP 3 ;
                     SUB ;
                     ABS ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 3 ;
                     DUP 3 ;
                     DUP 3 ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 0 ;
                     DUP 7 ;
                     SIZE ;
                     COMPARE ;
                     GT ;
                     IF { DIG 4 ;
                          DROP ;
                          DUP 5 ;
                          SIZE ;
                          DIG 3 ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIG 2 ;
                          DIG 4 ;
                          ITER { SWAP ; DUP 3 ; PUSH nat 0 ; PAIR ; DIG 2 ; PAIR ; CONS } ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          DUP 3 ;
                          PAIR ;
                          CDR ;
                          DIG 2 ;
                          DIG 3 ;
                          PUSH nat 0 ;
                          PAIR ;
                          DUP 6 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          CONS ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR }
                        { DIG 2 ;
                          DROP ;
                          DIG 4 ;
                          DROP ;
                          PUSH bool False ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          COMPARE ;
                          EQ ;
                          IF { DIG 2 ; DROP ; DIG 2 } { DIG 3 ; DROP ; DIG 2 } ;
                          DUP ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DIG 3 ;
                          PUSH nat 0 ;
                          PAIR ;
                          DUP 6 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          CONS ;
                          PAIR ;
                          PAIR } ;
                     DUP ;
                     CAR ;
                     CAR ;
                     DUP ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CDR ;
                     SWAP ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %transfer
                       (list (pair (address %from_)
                                   (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                     IF_NONE { PUSH string "TZC_LOTO_FA2_NOT_FOUND" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 3 ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     PUSH bool True ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DUP 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          ADD ;
                          SELF_ADDRESS ;
                          CONTRACT %setupGame
                            (pair (timestamp %date_end)
                                  (pair (nat %guess_min)
                                        (pair (nat %guess_max)
                                              (pair (nat %guess_length)
                                                    (pair (nat %entry_price)
                                                          (pair (nat %fees) (pair (bool %auto_renew) (pair (int %next_end) (nat %pot))))))))) ;
                          IF_NONE { PUSH string "TZC_LOTO_SELF_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          CAR ;
                          CDR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          DIG 3 ;
                          DUG 2 ;
                          CONS ;
                          PAIR }
                        { SWAP ;
                          DROP ;
                          PUSH bool False ;
                          PUSH bool False ;
                          DUP 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PUSH nat 0 ;
                          PUSH bool False ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SELF_ADDRESS ;
                          PAIR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CONTRACT %updateGames
                            (list (or (pair %add_game
                                         (address %game_address)
                                         (pair %game_instance
                                            (pair (pair (bool %enabled) (nat %max_entry_price))
                                                  (pair (nat %min_entry_price) (bool %multiple_bet)))
                                            (bool %staged)))
                                      (or (pair %remove_game
                                             (address %game_address)
                                             (pair %game_instance
                                                (pair (pair (bool %enabled) (nat %max_entry_price))
                                                      (pair (nat %min_entry_price) (bool %multiple_bet)))
                                                (bool %staged)))
                                          (pair %upd_game
                                             (address %game_address)
                                             (pair %game_instance
                                                (pair (pair (bool %enabled) (nat %max_entry_price))
                                                      (pair (nat %min_entry_price) (bool %multiple_bet)))
                                                (bool %staged)))))) ;
                          IF_NONE { PUSH string "TZC_LOTO_CASINO_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          NIL (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                                  (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                                      (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)))) ;
                          DIG 3 ;
                          RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                          RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                          CONS ;
                          TRANSFER_TOKENS ;
                          DUP 4 ;
                          CDR ;
                          DUP 5 ;
                          CAR ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          PUSH bool True ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIG 5 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DUG 2 ;
                          CONS ;
                          PAIR } ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR }
                   { PUSH string "TZC_LOTO_NOT_OWNER" ;
                     SELF_ADDRESS ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     NOT ;
                     AND ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     CDR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { PUSH string "TZC_LOTO_NOT_OWNER" ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 NOT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 DIG 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { DIG 3 ;
                 DROP ;
                 PUSH string "TZC_LOTO_NOT_OWNER" ;
                 SELF_ADDRESS ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 NOT ;
                 AND ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH bytes 0x0000 ;
                 PUSH bytes 0x0000 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PUSH bool False ;
                 NOW ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 DUP 5 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 SELF_ADDRESS ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 4 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CONTRACT %updateGames
                        (list (or (pair %add_game
                                     (address %game_address)
                                     (pair %game_instance
                                        (pair (pair (bool %enabled) (nat %max_entry_price))
                                              (pair (nat %min_entry_price) (bool %multiple_bet)))
                                        (bool %staged)))
                                  (or (pair %remove_game
                                         (address %game_address)
                                         (pair %game_instance
                                            (pair (pair (bool %enabled) (nat %max_entry_price))
                                                  (pair (nat %min_entry_price) (bool %multiple_bet)))
                                            (bool %staged)))
                                      (pair %upd_game
                                         (address %game_address)
                                         (pair %game_instance
                                            (pair (pair (bool %enabled) (nat %max_entry_price))
                                                  (pair (nat %min_entry_price) (bool %multiple_bet)))
                                            (bool %staged)))))) ;
                      IF_NONE { PUSH string "TZC_LOTO_CASINO_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                      PUSH bool False ;
                      PUSH bool False ;
                      DIG 5 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      PUSH nat 0 ;
                      PUSH bool True ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      SELF_ADDRESS ;
                      PAIR ;
                      SWAP ;
                      PUSH mutez 0 ;
                      NIL (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                              (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                                  (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)))) ;
                      DIG 3 ;
                      RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                      RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                      CONS ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { DIG 2 ; DROP } ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CONTRACT %prophecyHook (contract bytes) ;
                 IF_NONE { PUSH string "TZC_LOTO_ORACLE_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                 SELF_ADDRESS ;
                 CONTRACT %prophecyCallback bytes ;
                 IF_NONE
                   { PUSH string "TZC_CONTRACT_SELF_TRANSFERCALLBACK_NOT_FOUND" ; FAILWITH }
                   {} ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 EMPTY_MAP address (map nat (list nat)) ;
                 DIG 3 ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 CONS ;
                 PAIR } } } }
