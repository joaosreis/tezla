{ storage
    (pair (address %administrator)
          (pair (set %approvedList address) (big_map %leaseParams string string))) ;
  parameter
    (or (or (address %addApprove) (pair %inputValue (string %leaseKey) (string %leaseValue)))
        (or (address %removeApprove) (string %removeValue))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   PUSH bool True ;
                   DIG 4 ;
                   UPDATE ;
                   PAIR ;
                   SWAP ;
                   PAIR } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH bool True }
                      { { SWAP ; DUP ; DUG 2 ; CDR ; CAR ; SENDER ; MEM } } ;
                   IF { {} }
                      { { PUSH string
                               "WrongCondition: (sp.sender == self.data.administrator) | (self.data.approvedList.contains(sp.sender))" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CDR ;
                   SOME ;
                   DIG 4 ;
                   CAR ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   PUSH bool False ;
                   DIG 4 ;
                   UPDATE ;
                   PAIR ;
                   SWAP ;
                   PAIR } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH bool True }
                      { { SWAP ; DUP ; DUG 2 ; CDR ; CAR ; SENDER ; MEM } } ;
                   IF { {} }
                      { { PUSH string
                               "WrongCondition: (sp.sender == self.data.administrator) | (self.data.approvedList.contains(sp.sender))" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   NONE string ;
                   DIG 4 ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR } } } ;
         NIL operation ;
         PAIR } }
