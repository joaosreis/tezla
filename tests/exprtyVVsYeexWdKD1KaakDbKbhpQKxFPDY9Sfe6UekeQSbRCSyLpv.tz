{ parameter
    (or (or (or (bytes %administrate)
                (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
            (or (pair %burn (address %address) (nat %amount))
                (or (pair %mint (address %address) (nat %amount)) (address %set_administrator))))
        (or (or (pair %set_metadata (string %k) (bytes %v)) (bool %set_pause))
            (or (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (or (pair %transfer_and_call
                       (nat %amount)
                       (pair (address %callback) (pair (bytes %data) (address %recipient))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))) ;
  storage
    (pair (pair (pair (address %administrator) (nat %all_tokens))
                (pair (option %bridgeAddress address) (big_map %ledger address nat)))
          (pair (pair (big_map %metadata string bytes)
                      (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit))
                (pair (bool %paused)
                      (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))))) ;
  code { CAST (pair (or (or (or bytes (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))))
                            (or (pair address nat) (or (pair address nat) address)))
                        (or (or (pair string bytes) bool)
                            (or (list (pair address (list (pair address (pair nat nat)))))
                                (or (pair nat (pair address (pair bytes address)))
                                    (list (or (pair address (pair address nat)) (pair address (pair address nat))))))))
                    (pair (pair (pair address nat) (pair (option address) (big_map address nat)))
                          (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                (pair bool (big_map nat (pair (map string bytes) nat)))))) ;
         LAMBDA
           (pair (list (pair address (list (pair address (pair nat nat)))))
                 (pair (pair (pair address nat) (pair (option address) (big_map address nat)))
                       (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                             (pair bool (big_map nat (pair (map string bytes) nat))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address nat) (pair (option address) (big_map address nat)))
                             (pair (pair (big_map string bytes) (big_map (pair address (pair address nat)) unit))
                                   (pair bool (big_map nat (pair (map string bytes) nat)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             GET 5 ;
             IF { PUSH int 389 ; FAILWITH } {} ;
             DIG 2 ;
             CAR ;
             ITER { DUP ;
                    CDR ;
                    ITER { DUP ;
                           GET 3 ;
                           PUSH nat 0 ;
                           COMPARE ;
                           EQ ;
                           IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH bool True } { SENDER ; DUP 3 ; CAR ; COMPARE ; EQ } ;
                           IF { PUSH bool True }
                              { DUP 3 ;
                                GET 3 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                SENDER ;
                                DUP 5 ;
                                CAR ;
                                PAIR 3 ;
                                MEM } ;
                           IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                           DUP 3 ;
                           GET 6 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 3 ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP ;
                           GET 4 ;
                           PUSH nat 0 ;
                           COMPARE ;
                           LT ;
                           IF { DUP ;
                                GET 4 ;
                                DUP 4 ;
                                CAR ;
                                GET 4 ;
                                DUP 4 ;
                                CAR ;
                                GET ;
                                { IF_NONE { PUSH int 416 ; FAILWITH } {} } ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                DUP 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                SWAP ;
                                DUP ;
                                DUP 7 ;
                                CAR ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                { IF_NONE { PUSH int 419 ; FAILWITH } { DROP } } ;
                                DUP 6 ;
                                GET 4 ;
                                DIG 8 ;
                                CAR ;
                                GET 4 ;
                                DUP 9 ;
                                CAR ;
                                GET ;
                                { IF_NONE { PUSH int 420 ; FAILWITH } {} } ;
                                SUB ;
                                ISNAT ;
                                { IF_NONE { PUSH int 419 ; FAILWITH } {} } ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                MEM ;
                                IF { DIG 2 ;
                                     UNPAIR ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     DUP ;
                                     DUP 6 ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     { IF_NONE { PUSH int 422 ; FAILWITH } {} } ;
                                     DIG 6 ;
                                     GET 4 ;
                                     ADD ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP }
                                   { DIG 2 ;
                                     UNPAIR ;
                                     UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     DUP 5 ;
                                     GET 4 ;
                                     SOME ;
                                     DIG 5 ;
                                     CAR ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP } }
                              { DROP } } ;
                    DROP } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "TOKEN_NotAdmin" ; FAILWITH } ;
                     DUP ;
                     UNPACK (list (or address (or address bool))) ;
                     { IF_NONE { PUSH string "TOKEN_AdministrationActionsInvalid" ; FAILWITH } {} } ;
                     ITER { IF_LEFT
                              { DIG 2 ; UNPAIR ; UNPAIR ; CDR ; DIG 3 ; PAIR ; PAIR ; PAIR ; SWAP }
                              { IF_LEFT
                                  { DIG 2 ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    CDR ;
                                    DIG 3 ;
                                    SOME ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP }
                                  { DIG 2 ; SWAP ; UPDATE 5 ; SWAP } } } ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     IF { PUSH int 431 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ;
                           GET 6 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           GET 4 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           MEM ;
                           IF { DUP 3 ;
                                CAR ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                GET ;
                                { IF_NONE { PUSH int 438 ; FAILWITH } {} } ;
                                SWAP ;
                                PAIR }
                              { PUSH nat 0 ; SWAP ; PAIR } } ;
                     DIG 3 ;
                     DROP ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     SOME ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "TOKEN_NotBridge" ; FAILWITH } ;
                     UNPAIR ;
                     DUP 3 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {} { PUSH string "TOKEN_CannotBurnFromEmptyAccount" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     CAR ;
                     GET 4 ;
                     DUP 3 ;
                     GET ;
                     { IF_NONE { PUSH int 183 ; FAILWITH } {} } ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "TOKEN_BurnAmountGreaterThanAccountBalance" ; FAILWITH } ;
                     DUP 3 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     { IF_NONE { PUSH int 184 ; FAILWITH } { DROP } } ;
                     DUP 7 ;
                     DIG 8 ;
                     CAR ;
                     GET 4 ;
                     DIG 7 ;
                     GET ;
                     { IF_NONE { PUSH int 184 ; FAILWITH } {} } ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH int 184 ; FAILWITH } {} } ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     GET 6 ;
                     DUP ;
                     PUSH nat 0 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     { IF_NONE { PUSH int 185 ; FAILWITH } {} } ;
                     DIG 4 ;
                     DIG 5 ;
                     GET 6 ;
                     PUSH nat 0 ;
                     GET ;
                     { IF_NONE { PUSH int 185 ; FAILWITH } {} } ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH int 185 ; FAILWITH } {} } ;
                     UPDATE 2 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 6 }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         SENDER ;
                         SOME ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "TOKEN_NotBridge" ; FAILWITH } ;
                         UNPAIR ;
                         DUP 3 ;
                         CAR ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              { IF_NONE { PUSH int 162 ; FAILWITH } {} } ;
                              DUP 7 ;
                              ADD ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              DUP 6 ;
                              SOME ;
                              DIG 5 ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         GET 6 ;
                         DUP ;
                         PUSH nat 0 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH int 166 ; FAILWITH } {} } ;
                         DUP ;
                         CDR ;
                         DIG 5 ;
                         ADD ;
                         UPDATE 2 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 6 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 511 ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 526 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP 5 ;
                     CDR ;
                     SOME ;
                     DIG 5 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 520 ; FAILWITH } ;
                     UPDATE 5 } ;
                 NIL operation }
               { IF_LEFT
                   { PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     SWAP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } }
                   { IF_LEFT
                       { DUP ;
                         UNPAIR 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PACK ;
                         PUSH nat 22 ;
                         PUSH nat 6 ;
                         SLICE ;
                         DUP 5 ;
                         PACK ;
                         PUSH nat 22 ;
                         PUSH nat 6 ;
                         SLICE ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "TOKEN_CallbackAddressInvalid" ; FAILWITH } ;
                         DUP 7 ;
                         DIG 6 ;
                         NIL (pair address (list (pair address (pair nat nat)))) ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 5 ;
                         PUSH nat 0 ;
                         DUP 10 ;
                         PAIR 3 ;
                         CONS ;
                         SENDER ;
                         PAIR ;
                         CONS ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 6 ;
                         DUP ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } ;
                         DUP ;
                         DUP 5 ;
                         CONTRACT (pair nat (pair bytes (pair address nat))) ;
                         { IF_NONE { PUSH string "TOKEN_OnTokenTransferNotPresent" ; FAILWITH } {} } ;
                         PUSH mutez 0 ;
                         PUSH nat 0 ;
                         SENDER ;
                         DUP 10 ;
                         DUP 9 ;
                         PAIR 4 ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 5 ;
                         DROP ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { DUP ;
                         ITER { IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF {} { PUSH int 481 ; FAILWITH } ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 5 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF {} { PUSH int 488 ; FAILWITH } ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    PAIR 3 ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP } } ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         NIL operation } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
