{ parameter
    (or (or %owner_action
           (or (bool %set_deleted) (address %set_owner))
           (or (bool %set_pause)
               (pair %update_service_parameters
                  (option %metadata bytes)
                  (pair %allowed_tokens (option %tez bool) (option %assets (set address)))
                  (option %allowed_operation_type nat))))
        (pair %send_payment
           (option %asset_value (pair (address %token_address) (nat %value)))
           (nat %operation_type)
           (or %payload
              (bytes %public)
              (or (bytes %private) (pair %public_and_private bytes bytes))))) ;
  storage
    (pair (pair (pair (nat %allowed_operation_type)
                      (pair %allowed_tokens (bool %tez) (set %assets address)))
                (bool %deleted)
                (bytes %metadata))
          (pair (address %owner) (bool %paused))
          (nat %version)) ;
  code { UNPAIR ;
         IF_LEFT
           { SENDER ;
             DUP 3 ;
             CDR ;
             CAR ;
             CAR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Only owner can do this" ; FAILWITH } {} ;
             IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DUP ;
                     UNPAIR 3 ;
                     IF_NONE
                       { UNPAIR ;
                         IF_NONE
                           { IF_NONE
                               { IF_NONE { PUSH string "Empty update" ; FAILWITH } { DROP ; UNIT } }
                               { DROP 2 ; UNIT } }
                           { DROP 3 ; UNIT } }
                       { DROP 3 ; UNIT } ;
                     DROP ;
                     DUP ;
                     CAR ;
                     IF_NONE
                       { SWAP }
                       { DUP 3 ;
                         CDR ;
                         SWAP ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     IF_NONE
                       {}
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         UPDATE 1 ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CDR ;
                     IF_NONE
                       {}
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         UPDATE 2 ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     SWAP ;
                     GET 4 ;
                     IF_NONE
                       {}
                       { PUSH nat 3 ;
                         PUSH nat 3 ;
                         DUP 3 ;
                         OR ;
                         COMPARE ;
                         NEQ ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation ;
                     PAIR } } }
           { DUP ;
             DUG 2 ;
             GET 4 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CDR ;
             IF { PUSH string "Service is paused" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             IF { PUSH string "Service is deleted" ; FAILWITH } {} ;
             PUSH nat 3 ;
             PUSH nat 3 ;
             DUP 6 ;
             OR ;
             COMPARE ;
             NEQ ;
             PUSH nat 0 ;
             DUP 6 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
             PUSH nat 0 ;
             PUSH nat 1 ;
             DUP 6 ;
             SUB ;
             ABS ;
             DIG 5 ;
             AND ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
             IF_LEFT
               { DROP }
               { IF_LEFT
                   { DROP ;
                     PUSH string "Private payload is not supported at the moment" ;
                     FAILWITH }
                   { DROP ;
                     PUSH string "Private payload is not supported at the moment" ;
                     FAILWITH } } ;
             SWAP ;
             IF_NONE
               { PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 LE ;
                 IF { PUSH string "Invalid amount" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Invalid address" ; FAILWITH } {} ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR }
               { DROP 2 ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Invalid amount" ; FAILWITH } {} ;
                 PUSH string "Not implemented" ;
                 FAILWITH } } } }
