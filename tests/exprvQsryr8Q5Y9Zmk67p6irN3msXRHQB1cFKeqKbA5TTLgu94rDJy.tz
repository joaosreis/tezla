{ parameter
    (or (or (unit %default)
            (pair %setSettings
               nat
               (lambda
                  (pair (pair (or (or (or (or (pair %divestLiquidity (pair nat nat) nat) (nat %initializeExchange))
                                          (or (nat %investLiquidity) (pair %setVotesDelegation address bool)))
                                      (or (or (pair %tezToTokenPayment nat address)
                                              (pair %tokenToTezPayment (pair nat nat) address))
                                          (or (pair %tokenToTokenPayment (pair nat nat) (pair address address)) (address %veto))))
                                  (pair %vote address key_hash))
                              (pair (pair (pair (pair (pair (big_map %circles nat mutez) (nat %currentCircle))
                                                      (pair (key_hash %currentDelegated) (key_hash %delegated)))
                                                (pair (pair (address %factoryAddress) (nat %feeRate))
                                                      (pair (nat %invariant) (timestamp %nextCircle))))
                                          (pair (pair (pair (key_hash %nextDelegated) (mutez %reward))
                                                      (pair (big_map %shares address nat) (nat %tezPool)))
                                                (pair (pair (address %tokenAddress) (nat %tokenPool))
                                                      (pair (nat %totalShares) (nat %totalVotes)))))
                                    (pair (pair (pair (nat %veto) (big_map %vetoVoters address nat))
                                                (pair (big_map %vetos key_hash timestamp)
                                                      (big_map %voters
                                                         address
                                                         (pair (set %allowances address) (option %candidate key_hash)))))
                                          (big_map %votes key_hash nat))))
                        address)
                  (pair (list operation)
                        (pair (pair (pair (pair (pair (big_map %circles nat mutez) (nat %currentCircle))
                                                (pair (key_hash %currentDelegated) (key_hash %delegated)))
                                          (pair (pair (address %factoryAddress) (nat %feeRate))
                                                (pair (nat %invariant) (timestamp %nextCircle))))
                                    (pair (pair (pair (key_hash %nextDelegated) (mutez %reward))
                                                (pair (big_map %shares address nat) (nat %tezPool)))
                                          (pair (pair (address %tokenAddress) (nat %tokenPool))
                                                (pair (nat %totalShares) (nat %totalVotes)))))
                              (pair (pair (pair (nat %veto) (big_map %vetoVoters address nat))
                                          (pair (big_map %vetos key_hash timestamp)
                                                (big_map %voters
                                                   address
                                                   (pair (set %allowances address) (option %candidate key_hash)))))
                                    (big_map %votes key_hash nat)))))))
        (pair %use
           nat
           (or (or (or (or (pair %divestLiquidity (pair nat nat) nat) (nat %initializeExchange))
                       (or (nat %investLiquidity) (pair %setVotesDelegation address bool)))
                   (or (or (pair %tezToTokenPayment nat address)
                           (pair %tokenToTezPayment (pair nat nat) address))
                       (or (pair %tokenToTokenPayment (pair nat nat) (pair address address)) (address %veto))))
               (pair %vote address key_hash)))) ;
  storage
    (pair (big_map %lambdas
             nat
             (lambda
                (pair (pair (or (or (or (or (pair %divestLiquidity (pair nat nat) nat) (nat %initializeExchange))
                                        (or (nat %investLiquidity) (pair %setVotesDelegation address bool)))
                                    (or (or (pair %tezToTokenPayment nat address)
                                            (pair %tokenToTezPayment (pair nat nat) address))
                                        (or (pair %tokenToTokenPayment (pair nat nat) (pair address address)) (address %veto))))
                                (pair %vote address key_hash))
                            (pair (pair (pair (pair (pair (big_map %circles nat mutez) (nat %currentCircle))
                                                    (pair (key_hash %currentDelegated) (key_hash %delegated)))
                                              (pair (pair (address %factoryAddress) (nat %feeRate))
                                                    (pair (nat %invariant) (timestamp %nextCircle))))
                                        (pair (pair (pair (key_hash %nextDelegated) (mutez %reward))
                                                    (pair (big_map %shares address nat) (nat %tezPool)))
                                              (pair (pair (address %tokenAddress) (nat %tokenPool))
                                                    (pair (nat %totalShares) (nat %totalVotes)))))
                                  (pair (pair (pair (nat %veto) (big_map %vetoVoters address nat))
                                              (pair (big_map %vetos key_hash timestamp)
                                                    (big_map %voters
                                                       address
                                                       (pair (set %allowances address) (option %candidate key_hash)))))
                                        (big_map %votes key_hash nat))))
                      address)
                (pair (list operation)
                      (pair (pair (pair (pair (pair (big_map %circles nat mutez) (nat %currentCircle))
                                              (pair (key_hash %currentDelegated) (key_hash %delegated)))
                                        (pair (pair (address %factoryAddress) (nat %feeRate))
                                              (pair (nat %invariant) (timestamp %nextCircle))))
                                  (pair (pair (pair (key_hash %nextDelegated) (mutez %reward))
                                              (pair (big_map %shares address nat) (nat %tezPool)))
                                        (pair (pair (address %tokenAddress) (nat %tokenPool))
                                              (pair (nat %totalShares) (nat %totalVotes)))))
                            (pair (pair (pair (nat %veto) (big_map %vetoVoters address nat))
                                        (pair (big_map %vetos key_hash timestamp)
                                              (big_map %voters
                                                 address
                                                 (pair (set %allowances address) (option %candidate key_hash)))))
                                  (big_map %votes key_hash nat))))))
          (pair %storage
             (pair (pair (pair (pair (big_map %circles nat mutez) (nat %currentCircle))
                               (pair (key_hash %currentDelegated) (key_hash %delegated)))
                         (pair (pair (address %factoryAddress) (nat %feeRate))
                               (pair (nat %invariant) (timestamp %nextCircle))))
                   (pair (pair (pair (key_hash %nextDelegated) (mutez %reward))
                               (pair (big_map %shares address nat) (nat %tezPool)))
                         (pair (pair (address %tokenAddress) (nat %tokenPool))
                               (pair (nat %totalShares) (nat %totalVotes)))))
             (pair (pair (pair (nat %veto) (big_map %vetoVoters address nat))
                         (pair (big_map %vetos key_hash timestamp)
                               (big_map %voters
                                  address
                                  (pair (set %allowances address) (option %candidate key_hash)))))
                   (big_map %votes key_hash nat)))) ;
  code { DUP ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 PUSH nat 9 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 SENDER ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 PUSH nat 0 ;
                 RIGHT (pair (pair nat nat) nat) ;
                 LEFT (or nat (pair address bool)) ;
                 LEFT (or (or (pair nat address) (pair (pair nat nat) address))
                          (or (pair (pair nat nat) (pair address address)) address)) ;
                 LEFT (pair address key_hash) ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 EXEC ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH nat 8 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Only 9 functions are accepted" ; FAILWITH }
                    { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET ;
                 IF_NONE { PUSH unit Unit } { PUSH string "Function exist" ; FAILWITH } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DIP { DROP 5 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             DUP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIP { DROP 5 } } ;
         DIP { DROP 3 } } }
