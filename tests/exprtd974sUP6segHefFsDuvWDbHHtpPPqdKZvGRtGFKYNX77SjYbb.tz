{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)))
            (or (pair %getBalance (address %owner) (contract nat))
                (pair %getTotalSupply unit (contract nat))))
        (pair %transfer (address %from) (pair (address %to) (nat %value)))) ;
  storage
    (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
          (nat %totalSupply)) ;
  code { NIL operation ;
         LAMBDA
           (pair address (pair (big_map address (pair (map address nat) nat)) nat))
           (pair (map address nat) nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair (map address nat) nat) address)
                 (pair (big_map address (pair (map address nat) nat)) nat))
           nat
           { CAR ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     SENDER ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     DIG 5 ;
                     DIG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 4 ;
                     DROP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     DIG 4 ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             PAIR ;
             { DIP 6 { DUP } ; DIG 7 } ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             SENDER ;
             { DIP 4 { DUP } ; DIG 5 } ;
             COMPARE ;
             NEQ ;
             IF { { DIP 2 { DUP } ; DIG 3 } ;
                  SENDER ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  PAIR ;
                  PAIR ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  DIG 3 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  SENDER ;
                  UPDATE ;
                  PAIR }
                { DIG 5 ; DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SUB ;
             ABS ;
             SWAP ;
             CAR ;
             PAIR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CDR ;
             DIG 3 ;
             CAR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             DUP ;
             { DIP 3 { DUP } ; DIG 4 } ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             ADD ;
             SWAP ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             DIG 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR } } }
