{ parameter
    (or (or (or (unit %borrow) (unit %lend)) (or (nat %lendBalanceInquiry) (unit %redeem)))
        (or (or (unit %refund) (nat %refundBalanceInquiry)) (mutez %setCollateral))) ;
  storage
    (pair (pair (pair (nat %amount) (option %borrower address))
                (pair (mutez %collateral) (option %expiration timestamp)))
          (pair (pair (address %lender) (option %refund_time timestamp))
                (pair (or %state
                         (or (or (unit %expired) (unit %lending))
                             (or (unit %lendingPendingInquiry) (unit %loaned)))
                         (or (or (unit %refundPendingInquiry) (unit %refunded))
                             (or (unit %terminated) (unit %waitingForBorrow))))
                      (string %token)))) ;
  code { PUSH int 28 ;
         PUSH int 86400 ;
         MUL ;
         PUSH int 10 ;
         PUSH int 86400 ;
         MUL ;
         EMPTY_MAP string address ;
         PUSH address "KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn" ;
         SOME ;
         PUSH string "tzbtc" ;
         UPDATE ;
         LAMBDA
           (option address)
           address
           { DUP ;
             IF_NONE { PUSH string "none" ; FAILWITH } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (option timestamp)
           timestamp
           { DUP ;
             IF_NONE { PUSH string "none" ; FAILWITH } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         PUSH string "tzbtc" ;
         PUSH unit Unit ;
         RIGHT unit ;
         LEFT (or unit unit) ;
         LEFT (or (or unit unit) (or unit unit)) ;
         PAIR ;
         NONE timestamp ;
         PUSH address "tz1THsLcunLo8CmDm9f2y1xHuXttXZCpyFnq" ;
         PAIR ;
         PAIR ;
         NONE timestamp ;
         PUSH mutez 5000000 ;
         PAIR ;
         NONE address ;
         PUSH nat 1 ;
         PAIR ;
         PAIR ;
         PAIR ;
         LAMBDA
           (or (or (or unit unit) (or unit unit)) (or (or unit unit) (or unit unit)))
           int
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT { DROP ; PUSH int 6 } { DROP ; PUSH int 0 } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT { DROP ; PUSH int 1 } { DROP ; PUSH int 3 } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT { DROP ; PUSH int 4 } { DROP ; PUSH int 5 } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT { DROP ; PUSH int 7 } { DROP ; PUSH int 2 } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair (lambda (or (or (or unit unit) (or unit unit)) (or (or unit unit) (or unit unit))) int)
                 (pair (pair (pair (pair nat (option address)) (pair mutez (option timestamp)))
                             (pair (pair address (option timestamp))
                                   (pair (or (or (or unit unit) (or unit unit)) (or (or unit unit) (or unit unit))) string)))
                       (or (or (or unit unit) (or unit unit)) (or (or unit unit) (or unit unit)))))
           bool
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             EXEC ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             EXEC ;
             COMPARE ;
             EQ ;
             DIP { DROP 2 } } ;
         SWAP ;
         APPLY ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         CDR ;
         PUSH unit Unit ;
         LEFT unit ;
         RIGHT (or unit unit) ;
         RIGHT (or (or unit unit) (or unit unit)) ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         PAIR ;
         DUP ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         SWAP ;
         EXEC ;
         IF { PUSH string "in wrong state" ; FAILWITH } { PUSH unit Unit } ;
         DIP { DROP } ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { PUSH unit Unit ;
                     RIGHT unit ;
                     RIGHT (or unit unit) ;
                     RIGHT (or (or unit unit) (or unit unit)) ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DUP ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     IF { PUSH unit Unit } { PUSH string "in wrong state" ; FAILWITH } ;
                     DIP { DROP } ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "invalid amount" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH string "invalid token" ; FAILWITH }
                       { DUP ;
                         CONTRACT %transfer (pair (pair address address) nat) ;
                         DUP ;
                         IF_NONE
                           { PUSH string "invalid token contract address" ; FAILWITH }
                           { DUP ; DIP { DROP } } ;
                         DIP { DROP 2 } } ;
                     DUP ;
                     PUSH mutez 0 ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     SELF ;
                     ADDRESS ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     PUSH key_hash "tz1ijEkCv2RM2wp22DUd8Jc2sneESQ4aaRAZ" ;
                     SOME ;
                     SET_DELEGATE ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SENDER ;
                     SOME ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PUSH unit Unit ;
                     RIGHT unit ;
                     RIGHT (or unit unit) ;
                     LEFT (or (or unit unit) (or unit unit)) ;
                     DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 18 ;
                     DUP ;
                     DUG 19 ;
                     NOW ;
                     ADD ;
                     SOME ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CONS ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CONS ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { PUSH unit Unit ;
                     RIGHT unit ;
                     LEFT (or unit unit) ;
                     LEFT (or (or unit unit) (or unit unit)) ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DUP ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     IF { PUSH unit Unit } { PUSH string "in wrong state" ; FAILWITH } ;
                     DIP { DROP } ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit }
                        { PUSH string "this call does not require transfer" ; FAILWITH } ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH string "invalid token" ; FAILWITH }
                       { DUP ;
                         CONTRACT %getbalance (pair address (contract nat)) ;
                         DUP ;
                         IF_NONE
                           { PUSH string "invalid token contract address" ; FAILWITH }
                           { DUP ; DIP { DROP } } ;
                         DIP { DROP 2 } } ;
                     SELF %lendBalanceInquiry ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SELF ;
                     ADDRESS ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     PUSH unit Unit ;
                     LEFT unit ;
                     RIGHT (or unit unit) ;
                     LEFT (or (or unit unit) (or unit unit)) ;
                     DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CONS ;
                     PAIR ;
                     DIP { DROP 7 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH unit Unit ;
                     LEFT unit ;
                     RIGHT (or unit unit) ;
                     LEFT (or (or unit unit) (or unit unit)) ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     IF { PUSH unit Unit } { PUSH string "in wrong state" ; FAILWITH } ;
                     DIP { DROP } ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH string "invalid token" ; FAILWITH }
                       { DUP ; DIP { DROP } } ;
                     DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                     DIP { DROP } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PUSH unit Unit ;
                     RIGHT unit ;
                     RIGHT (or unit unit) ;
                     RIGHT (or (or unit unit) (or unit unit)) ;
                     DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 5 } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                     PUSH unit Unit ;
                     RIGHT unit ;
                     RIGHT (or unit unit) ;
                     RIGHT (or (or unit unit) (or unit unit)) ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     PAIR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     IF { DIG 11 ;
                          DUP ;
                          DUG 12 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          GET ;
                          IF_NONE
                            { PUSH string "invalid token" ; FAILWITH }
                            { DUP ;
                              CONTRACT %transfer (pair (pair address address) nat) ;
                              DUP ;
                              IF_NONE
                                { PUSH string "invalid token contract address" ; FAILWITH }
                                { DUP ; DIP { DROP } } ;
                              DIP { DROP 2 } } ;
                          DUP ;
                          PUSH mutez 0 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          SELF ;
                          ADDRESS ;
                          PAIR ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          PUSH unit Unit ;
                          LEFT unit ;
                          RIGHT (or unit unit) ;
                          RIGHT (or (or unit unit) (or unit unit)) ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CONS ;
                          PAIR ;
                          DIP { DROP 2 } }
                        { DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          SWAP ;
                          EXEC ;
                          NOW ;
                          COMPARE ;
                          GE ;
                          PUSH unit Unit ;
                          RIGHT unit ;
                          RIGHT (or unit unit) ;
                          LEFT (or (or unit unit) (or unit unit)) ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          PAIR ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          SWAP ;
                          EXEC ;
                          AND ;
                          IF { DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               PUSH unit Unit ;
                               LEFT unit ;
                               LEFT (or unit unit) ;
                               LEFT (or (or unit unit) (or unit unit)) ;
                               DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR }
                             { PUSH unit Unit ;
                               RIGHT unit ;
                               LEFT (or unit unit) ;
                               RIGHT (or (or unit unit) (or unit unit)) ;
                               DIG 6 ;
                               DUP ;
                               DUG 7 ;
                               PAIR ;
                               DIG 7 ;
                               DUP ;
                               DUG 8 ;
                               SWAP ;
                               EXEC ;
                               NOT ;
                               PUSH unit Unit ;
                               LEFT unit ;
                               LEFT (or unit unit) ;
                               LEFT (or (or unit unit) (or unit unit)) ;
                               DIG 7 ;
                               DUP ;
                               DUG 8 ;
                               PAIR ;
                               DIG 8 ;
                               DUP ;
                               DUG 9 ;
                               SWAP ;
                               EXEC ;
                               NOT ;
                               AND ;
                               IF { PUSH string "invalid state" ; FAILWITH } { DIG 5 ; DUP ; DUG 6 } } ;
                          PUSH unit Unit ;
                          LEFT unit ;
                          LEFT (or unit unit) ;
                          LEFT (or (or unit unit) (or unit unit)) ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          PAIR ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          SWAP ;
                          EXEC ;
                          IF { DUP ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CONTRACT unit ;
                               IF_NONE
                                 { PUSH string "invalid contract" ; FAILWITH }
                                 { DUP ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   UNIT ;
                                   TRANSFER_TOKENS ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   PUSH unit Unit ;
                                   LEFT unit ;
                                   RIGHT (or unit unit) ;
                                   RIGHT (or (or unit unit) (or unit unit)) ;
                                   DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   NIL operation ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CONS ;
                                   PAIR ;
                                   DIP { DROP 2 } } }
                             { DIG 13 ;
                               DUP ;
                               DUG 14 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               CDR ;
                               DIG 12 ;
                               DUP ;
                               DUG 13 ;
                               SWAP ;
                               EXEC ;
                               ADD ;
                               NOW ;
                               COMPARE ;
                               LT ;
                               IF { PUSH string "need to wait" ; FAILWITH }
                                  { DUP ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CONTRACT unit ;
                                    IF_NONE
                                      { PUSH string "invalid contract" ; FAILWITH }
                                      { DUP ;
                                        BALANCE ;
                                        UNIT ;
                                        TRANSFER_TOKENS ;
                                        DIG 14 ;
                                        DUP ;
                                        DUG 15 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        GET ;
                                        IF_NONE
                                          { PUSH string "invalid token" ; FAILWITH }
                                          { DUP ;
                                            CONTRACT %transfer (pair (pair address address) nat) ;
                                            DUP ;
                                            IF_NONE
                                              { PUSH string "invalid token contract address" ; FAILWITH }
                                              { DUP ; DIP { DROP } } ;
                                            DIP { DROP 2 } } ;
                                        DUP ;
                                        PUSH mutez 0 ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        SELF ;
                                        ADDRESS ;
                                        PAIR ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        PUSH unit Unit ;
                                        LEFT unit ;
                                        RIGHT (or unit unit) ;
                                        RIGHT (or (or unit unit) (or unit unit)) ;
                                        DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        NIL operation ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CONS ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CONS ;
                                        PAIR ;
                                        DIP { DROP 4 } } } } ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                     DIP { DROP } ;
                     NOW ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 11 ;
                     DUP ;
                     DUG 12 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     GT ;
                     IF { PUSH unit Unit } { PUSH string "before expiration" ; FAILWITH } ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH string "invalid token" ; FAILWITH }
                       { DUP ;
                         CONTRACT %getbalance (pair address (contract nat)) ;
                         DUP ;
                         IF_NONE
                           { PUSH string "invalid token contract address" ; FAILWITH }
                           { DUP ; DIP { DROP } } ;
                         DIP { DROP 2 } } ;
                     SELF %refundBalanceInquiry ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SELF ;
                     ADDRESS ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     PUSH unit Unit ;
                     LEFT unit ;
                     LEFT (or unit unit) ;
                     RIGHT (or (or unit unit) (or unit unit)) ;
                     DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH unit Unit ;
                     LEFT unit ;
                     LEFT (or unit unit) ;
                     RIGHT (or (or unit unit) (or unit unit)) ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     IF { PUSH unit Unit } { PUSH string "in wrong state" ; FAILWITH } ;
                     DIP { DROP } ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH string "invalid token" ; FAILWITH }
                       { DUP ; DIP { DROP } } ;
                     DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                     DIP { DROP } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "invalid refunded balance" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 15 ;
                     DUP ;
                     DUG 16 ;
                     SWAP ;
                     EXEC ;
                     CONTRACT unit ;
                     IF_NONE
                       { PUSH string "invalid contract" ; FAILWITH }
                       { DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         PUSH unit Unit ;
                         RIGHT unit ;
                         LEFT (or unit unit) ;
                         RIGHT (or (or unit unit) (or unit unit)) ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NOW ;
                         SOME ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP 6 } } ;
                 DIP { DROP } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 PUSH unit Unit ;
                 RIGHT unit ;
                 RIGHT (or unit unit) ;
                 RIGHT (or (or unit unit) (or unit unit)) ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 SWAP ;
                 EXEC ;
                 IF { PUSH unit Unit } { PUSH string "in wrong state" ; FAILWITH } ;
                 DIP { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH unit Unit } { PUSH string "wrong caller" ; FAILWITH } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 5 } } ;
             DIP { DROP } } ;
         DIP { DROP 11 } } }
