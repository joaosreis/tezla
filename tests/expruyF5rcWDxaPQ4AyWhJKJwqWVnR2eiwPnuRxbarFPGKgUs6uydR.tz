{ parameter
    (or (or (or (pair %add_fixing
                   (pair (pair %fbac int int) (timestamp %ffobservation))
                   (pair (pair %fsg int int) (pair %fubs int int)))
                (unit %cancel))
            (or (unit %check) (unit %confirm)))
        (or (unit %pay_note) (unit %terminate))) ;
  storage
    (pair (pair (pair (mutez %actual_payment)
                      (map %early_assets
                         timestamp
                         (pair (pair (timestamp %redemption) (pair %trigger int int)) (pair %value int int))))
                (pair (map %fixing_assets
                         timestamp
                         (pair (pair (pair %bac int int) (pair %sg int int)) (pair %ubs int int)))
                      (map %interest_assets
                         timestamp
                         (pair (pair (pair %barrier int int) (timestamp %payment)) (pair %rate int int)))))
          (int %state)) ;
  code { PUSH address "tz1bfVgcJC4ukaQSHUe1EbrUd5SekXeP9CWk" ;
         PUSH address "tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg" ;
         PUSH mutez 1000000000 ;
         PUSH timestamp 1585526400 ;
         PUSH int 25 ;
         PUSH int 633 ;
         PAIR ;
         PUSH int 200 ;
         PUSH int 9389 ;
         PAIR ;
         PUSH int 50 ;
         PUSH int 799 ;
         PAIR ;
         PUSH int 50 ;
         PUSH int 633 ;
         PAIR ;
         PUSH int 400 ;
         PUSH int 9389 ;
         PAIR ;
         PUSH int 50 ;
         PUSH int 799 ;
         PAIR ;
         PUSH int 0 ;
         PUSH int 2 ;
         LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int))
           bool
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             MUL ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             MUL ;
             PUSH int 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             MUL ;
             COMPARE ;
             GT ;
             PUSH bool False ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GE ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LE ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GT ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LT ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LE ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GE ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LT ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GT ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } } ;
             DIP { DROP 7 } } ;
         DUP ;
         LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int))
           (pair int int)
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     SUB ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     ADD ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DUP ;
             DIP { DROP 4 } } ;
         SWAP ;
         LAMBDA
           (pair (pair int int) mutez)
           mutez
           { DUP ;
             CAR ;
             DUP ;
             CDR ;
             ABS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             ABS ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIP { DROP 3 } } ;
         SWAP ;
         LAMBDA
           (pair (lambda (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int)) bool)
                 (pair (pair int int) (pair int int)))
           (pair int int)
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             UNIT ;
             RIGHT unit ;
             RIGHT (or unit unit) ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             IF { DIG 1 ; DUP ; DUG 2 } { DUP } ;
             DIP { DROP 4 } } ;
         SWAP ;
         APPLY ;
         DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; DUP ; DIP { PAIR } ; SWAP } ;
                                                                           DUP ;
                                                                           DIP { PAIR } ;
                                                                           SWAP } ;
                                                                     DUP ;
                                                                     DIP { PAIR } ;
                                                                     SWAP } ;
                                                               DUP ;
                                                               DIP { PAIR } ;
                                                               SWAP } ;
                                                         DUP ;
                                                         DIP { PAIR } ;
                                                         SWAP } ;
                                                   DUP ;
                                                   DIP { PAIR } ;
                                                   SWAP } ;
                                             DUP ;
                                             DIP { PAIR } ;
                                             SWAP } ;
                                       SWAP } ;
                                 SWAP } ;
                           DUP ;
                           DIP { PAIR } ;
                           SWAP } ;
                     DUP ;
                     DIP { PAIR } ;
                     SWAP } ;
               DUP ;
               DIP { PAIR } ;
               SWAP } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                             (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                   (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                       int)
                 timestamp)
           (pair (pair timestamp timestamp) (pair (pair int int) (pair int int)))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                             (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                   (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                       int)
                 timestamp)
           (pair (pair (pair int int) timestamp) (pair timestamp (pair int int)))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                             (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                   (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                       int)
                 timestamp)
           (pair (pair (pair int int) timestamp) (pair (pair int int) (pair int int)))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                                            (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                                  (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                                      int)
                                timestamp)
                          (pair (pair (pair int int) timestamp) (pair (pair int int) (pair int int))))
                       (pair (lambda
                                (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                                                  (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                                        (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                                            int)
                                      timestamp)
                                (pair (pair (pair int int) timestamp) (pair timestamp (pair int int))))
                             (pair (lambda
                                      (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                                                        (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                                              (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                                                  int)
                                            timestamp)
                                      (pair (pair timestamp timestamp) (pair (pair int int) (pair int int))))
                                   (pair (lambda (pair (pair int int) (pair int int)) (pair int int))
                                         (pair (lambda (pair (pair int int) mutez) mutez)
                                               (pair (lambda
                                                        (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int))
                                                        (pair int int))
                                                     (pair (lambda (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int)) bool)
                                                           (pair (pair int int)
                                                                 (pair (pair int int)
                                                                       (pair (pair int int)
                                                                             (pair (pair int int) (pair (pair int int) (pair (pair int int) (pair timestamp mutez))))))))))))))
                 (pair (pair (pair (pair mutez (map timestamp (pair (pair timestamp (pair int int)) (pair int int))))
                                   (pair (map timestamp (pair (pair (pair int int) (pair int int)) (pair int int)))
                                         (map timestamp (pair (pair (pair int int) timestamp) (pair int int)))))
                             int)
                       timestamp))
           mutez
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DIP { DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DIP { DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DIP { DUP ;
                                           CDR ;
                                           SWAP ;
                                           CAR ;
                                           DIP { DUP ;
                                                 CDR ;
                                                 SWAP ;
                                                 CAR ;
                                                 DIP { DUP ;
                                                       CDR ;
                                                       SWAP ;
                                                       CAR ;
                                                       DIP { DUP ;
                                                             CDR ;
                                                             SWAP ;
                                                             CAR ;
                                                             DIP { DUP ;
                                                                   CDR ;
                                                                   SWAP ;
                                                                   CAR ;
                                                                   DIP { DUP ;
                                                                         CDR ;
                                                                         SWAP ;
                                                                         CAR ;
                                                                         DIP { DUP ;
                                                                               CDR ;
                                                                               SWAP ;
                                                                               CAR ;
                                                                               DIP { DUP ;
                                                                                     CDR ;
                                                                                     SWAP ;
                                                                                     CAR ;
                                                                                     DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP ; CDR ; SWAP ; CAR } } } } } } } } } } } } } } ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PUSH bool False ;
             PUSH timestamp 1584316800 ;
             PUSH mutez 0 ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    CDR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CAR ;
                    CAR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    CDR ;
                    CAR ;
                    DUP ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    PAIR ;
                    DIG 11 ;
                    DUP ;
                    DUG 12 ;
                    SWAP ;
                    EXEC ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    PAIR ;
                    PAIR ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CDR ;
                    COMPARE ;
                    LE ;
                    IF { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         PAIR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         PAIR ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         PAIR ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         SWAP ;
                         EXEC ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         PAIR ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         PAIR ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         SWAP ;
                         EXEC ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         PAIR ;
                         DIG 19 ;
                         DUP ;
                         DUG 20 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         PAIR ;
                         DIG 18 ;
                         DUP ;
                         DUG 19 ;
                         SWAP ;
                         EXEC ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         PAIR ;
                         PAIR ;
                         DIG 29 ;
                         DUP ;
                         DUG 30 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 25 ;
                         DUP ;
                         DUG 26 ;
                         SWAP ;
                         EXEC ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 31 ;
                         DUP ;
                         DUG 32 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 27 ;
                         DUP ;
                         DUG 28 ;
                         SWAP ;
                         EXEC ;
                         DIG 33 ;
                         DUP ;
                         DUG 34 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 27 ;
                         DUP ;
                         DUG 28 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 28 ;
                         DUP ;
                         DUG 29 ;
                         SWAP ;
                         EXEC ;
                         AND ;
                         AND ;
                         IF { DIG 11 ;
                              DUP ;
                              DUG 12 ;
                              DIG 18 ;
                              DUP ;
                              DUG 19 ;
                              PAIR ;
                              DIG 22 ;
                              DUP ;
                              DUG 23 ;
                              SWAP ;
                              EXEC ;
                              DIG 34 ;
                              DUP ;
                              DUG 35 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              DIG 25 ;
                              DUP ;
                              DUG 26 ;
                              SWAP ;
                              EXEC ;
                              DIG 14 ;
                              DUP ;
                              DUG 15 ;
                              ADD ;
                              DIG 13 ;
                              DUP ;
                              DUG 14 ;
                              DIG 20 ;
                              DUP ;
                              DUG 21 ;
                              PAIR ;
                              DIG 24 ;
                              DUP ;
                              DUG 25 ;
                              SWAP ;
                              EXEC ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              CAR ;
                              PUSH bool True ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 3 } }
                            { DUP } ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIP { DROP 10 } }
                       { DUP } ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                    PAIR ;
                    PAIR ;
                    PAIR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CDR ;
                    DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    PAIR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    CAR ;
                    DIP { DROP 8 } } ;
             DUP ;
             CAR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 19 ;
             DUP ;
             DUG 20 ;
             COMPARE ;
             LE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             NOT ;
             AND ;
             IF { DIG 18 ;
                  DUP ;
                  DUG 19 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  PAIR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  SWAP ;
                  EXEC ;
                  DIG 19 ;
                  DUP ;
                  DUG 20 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  PAIR ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  SWAP ;
                  EXEC ;
                  DIG 20 ;
                  DUP ;
                  DUG 21 ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  PAIR ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  SWAP ;
                  EXEC ;
                  DIG 15 ;
                  DUP ;
                  DUG 16 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  CDR ;
                  UNIT ;
                  LEFT unit ;
                  LEFT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 15 ;
                  DUP ;
                  DUG 16 ;
                  SWAP ;
                  EXEC ;
                  DIG 17 ;
                  DUP ;
                  DUG 18 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  CAR ;
                  UNIT ;
                  LEFT unit ;
                  LEFT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 16 ;
                  DUP ;
                  DUG 17 ;
                  SWAP ;
                  EXEC ;
                  DIG 19 ;
                  DUP ;
                  DUG 20 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  UNIT ;
                  LEFT unit ;
                  LEFT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 17 ;
                  DUP ;
                  DUG 18 ;
                  SWAP ;
                  EXEC ;
                  AND ;
                  AND ;
                  IF { DIG 22 ;
                       DUP ;
                       DUG 23 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       ADD ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       DIP { DROP 2 } }
                     { DIG 21 ;
                       DUP ;
                       DUG 22 ;
                       DIG 7 ;
                       DUP ;
                       DUG 8 ;
                       PAIR ;
                       DIG 9 ;
                       DUP ;
                       DUG 10 ;
                       SWAP ;
                       EXEC ;
                       DIG 18 ;
                       DUP ;
                       DUG 19 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       UNIT ;
                       LEFT unit ;
                       LEFT (or unit unit) ;
                       PAIR ;
                       PAIR ;
                       DIG 15 ;
                       DUP ;
                       DUG 16 ;
                       SWAP ;
                       EXEC ;
                       DIG 23 ;
                       DUP ;
                       DUG 24 ;
                       DIG 9 ;
                       DUP ;
                       DUG 10 ;
                       PAIR ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       SWAP ;
                       EXEC ;
                       DIG 19 ;
                       DUP ;
                       DUG 20 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       UNIT ;
                       LEFT unit ;
                       LEFT (or unit unit) ;
                       PAIR ;
                       PAIR ;
                       DIG 17 ;
                       DUP ;
                       DUG 18 ;
                       SWAP ;
                       EXEC ;
                       DIG 25 ;
                       DUP ;
                       DUG 26 ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       PAIR ;
                       DIG 13 ;
                       DUP ;
                       DUG 14 ;
                       SWAP ;
                       EXEC ;
                       DIG 20 ;
                       DUP ;
                       DUG 21 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       UNIT ;
                       LEFT unit ;
                       LEFT (or unit unit) ;
                       PAIR ;
                       PAIR ;
                       DIG 19 ;
                       DUP ;
                       DUG 20 ;
                       SWAP ;
                       EXEC ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       PAIR ;
                       DIG 19 ;
                       DUP ;
                       DUG 20 ;
                       SWAP ;
                       EXEC ;
                       PAIR ;
                       DIG 18 ;
                       DUP ;
                       DUG 19 ;
                       SWAP ;
                       EXEC ;
                       DIG 29 ;
                       DUP ;
                       DUG 30 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       PAIR ;
                       DIG 20 ;
                       DUP ;
                       DUG 21 ;
                       SWAP ;
                       EXEC ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       ADD ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       DIP { DROP 9 } } ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP { DROP 5 } }
                { DUP } ;
             PUSH mutez 0 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CAR ;
                    DUP ;
                    DIG 8 ;
                    DUP ;
                    DUG 9 ;
                    PAIR ;
                    DIG 11 ;
                    DUP ;
                    DUG 12 ;
                    SWAP ;
                    EXEC ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    DIG 9 ;
                    DUP ;
                    DUG 10 ;
                    PAIR ;
                    DIG 12 ;
                    DUP ;
                    DUG 13 ;
                    SWAP ;
                    EXEC ;
                    DIG 8 ;
                    DUP ;
                    DUG 9 ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CDR ;
                    CAR ;
                    COMPARE ;
                    LE ;
                    DIG 8 ;
                    DUP ;
                    DUG 9 ;
                    CAR ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CDR ;
                    COMPARE ;
                    LE ;
                    AND ;
                    IF { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         PAIR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         PAIR ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         PAIR ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         SWAP ;
                         EXEC ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         PAIR ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 15 ;
                         DUP ;
                         DUG 16 ;
                         PAIR ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         SWAP ;
                         EXEC ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         PAIR ;
                         DIG 19 ;
                         DUP ;
                         DUG 20 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         PAIR ;
                         DIG 19 ;
                         DUP ;
                         DUG 20 ;
                         SWAP ;
                         EXEC ;
                         DIG 29 ;
                         DUP ;
                         DUG 30 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 25 ;
                         DUP ;
                         DUG 26 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 31 ;
                         DUP ;
                         DUG 32 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 27 ;
                         DUP ;
                         DUG 28 ;
                         SWAP ;
                         EXEC ;
                         DIG 33 ;
                         DUP ;
                         DUG 34 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 27 ;
                         DUP ;
                         DUG 28 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         UNIT ;
                         LEFT unit ;
                         LEFT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 28 ;
                         DUP ;
                         DUG 29 ;
                         SWAP ;
                         EXEC ;
                         AND ;
                         AND ;
                         IF { DIG 10 ;
                              DUP ;
                              DUG 11 ;
                              DIG 18 ;
                              DUP ;
                              DUG 19 ;
                              PAIR ;
                              DIG 21 ;
                              DUP ;
                              DUG 22 ;
                              SWAP ;
                              EXEC ;
                              DIG 34 ;
                              DUP ;
                              DUG 35 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              DIG 25 ;
                              DUP ;
                              DUG 26 ;
                              SWAP ;
                              EXEC ;
                              DIG 13 ;
                              DUP ;
                              DUG 14 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DROP 3 } }
                            { DIG 11 ; DUP ; DUG 12 } ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIP { DROP 10 } }
                       { DIG 3 ; DUP ; DUG 4 } ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    SWAP ;
                    CDR ;
                    SWAP ;
                    PAIR ;
                    CAR ;
                    DIP { DROP 6 } } ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             ADD ;
             DUP ;
             DIP { DROP 23 } } ;
         SWAP ;
         APPLY ;
         DIG 20 ;
         DUP ;
         DUG 21 ;
         CDR ;
         DIG 21 ;
         DUP ;
         DUG 22 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     MEM ;
                     IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     CAR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIP { DROP 6 } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 4 } }
                   { DIG 23 ;
                     DUP ;
                     DUG 24 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     DIG 23 ;
                     DUP ;
                     DUG 24 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     OR ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 14 ;
                     DUP ;
                     DUG 15 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          PUSH int 1 ;
                          SWAP ;
                          PAIR ;
                          DIP { DROP } }
                        { PUSH string "invalid state" ; FAILWITH } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 3 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 22 ;
                     DUP ;
                     DUG 23 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { NOW ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          PAIR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          SWAP ;
                          EXEC ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          COMPARE ;
                          LT ;
                          IF { DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               CAR ;
                               PUSH int 3 ;
                               SWAP ;
                               PAIR ;
                               DIP { DROP } }
                             { DIG 4 ; DUP ; DUG 5 } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DROP 2 } }
                        { PUSH string "invalid state" ; FAILWITH } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 3 } }
                   { DIG 22 ;
                     DUP ;
                     DUG 23 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                     DIG 14 ;
                     DUP ;
                     DUG 15 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 22 ;
                          DUP ;
                          DUG 23 ;
                          AMOUNT ;
                          COMPARE ;
                          EQ ;
                          IF { DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               DIG 15 ;
                               DUP ;
                               DUG 16 ;
                               SWAP ;
                               CAR ;
                               PAIR ;
                               DIP { DROP } }
                             { DIG 4 ; DUP ; DUG 5 } ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DROP 2 } }
                        { PUSH string "invalid state" ; FAILWITH } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 3 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 22 ;
                 DUP ;
                 DUG 23 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 AMOUNT ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DIG 22 ;
                 DUP ;
                 DUG 23 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF { NOW ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      SWAP ;
                      EXEC ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      COMPARE ;
                      GE ;
                      IF { DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           CAR ;
                           PUSH int 4 ;
                           SWAP ;
                           PAIR ;
                           DIP { DROP } }
                         { DIG 3 ; DUP ; DUG 4 } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } }
                    { PUSH string "invalid state" ; FAILWITH } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } } ;
         DIP { DROP 22 } } }
