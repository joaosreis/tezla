{ storage
    (pair (pair (pair (option %a
                         (pair (pair (pair (list %l int) (list %lr int))
                                     (pair (list %mi (pair (string %key) (pair %value string bool)))
                                           (pair (list %mir (pair (string %key) (pair %value string bool))) (list %mk string))))
                               (pair (pair (list %mkr string) (list %mv (pair string bool)))
                                     (pair (list %mvr (pair string bool)) (pair (list %s int) (list %sr int))))))
                      (int %b))
                (pair (string %c) (int %d)))
          (pair (pair (string %e) (list %f int))
                (pair (list %g int) (pair (string %head) (list %tail string))))) ;
  parameter
    (or (pair %test (list %l int) (pair (map %m string (pair string bool)) (set %s int)))
        (or (list %test_match string) (list %test_match2 string))) ;
  code { CAST (pair (or (pair (list int) (pair (map string (pair string bool)) (set int)))
                        (or (list string) (list string)))
                    (pair (pair (pair (option
                                         (pair (pair (pair (list int) (list int))
                                                     (pair (list (pair string (pair string bool)))
                                                           (pair (list (pair string (pair string bool))) (list string))))
                                               (pair (pair (list string) (list (pair string bool)))
                                                     (pair (list (pair string bool)) (pair (list int) (list int))))))
                                      int)
                                (pair string int))
                          (pair (pair string (list int)) (pair (list int) (pair string (list string)))))) ;
         UNPAIR ;
         IF_LEFT
           { SWAP ;
             CDR ;
             NIL int ;
             DUP 3 ;
             GET 4 ;
             ITER { CONS } ;
             NIL int ;
             DUP 4 ;
             GET 4 ;
             ITER { CONS } ;
             NIL int ;
             SWAP ;
             ITER { CONS } ;
             PAIR ;
             NIL (pair string bool) ;
             DUP 4 ;
             GET 3 ;
             ITER { CDR ; CONS } ;
             PAIR ;
             NIL (pair string bool) ;
             DUP 4 ;
             GET 3 ;
             ITER { CDR ; CONS } ;
             NIL (pair string bool) ;
             SWAP ;
             ITER { CONS } ;
             NIL string ;
             DUP 5 ;
             GET 3 ;
             ITER { CAR ; CONS } ;
             PAIR ;
             PAIR ;
             NIL string ;
             DUP 4 ;
             GET 3 ;
             ITER { CAR ; CONS } ;
             NIL string ;
             SWAP ;
             ITER { CONS } ;
             NIL (pair string (pair string bool)) ;
             DUP 5 ;
             GET 3 ;
             ITER { CONS } ;
             PAIR ;
             NIL (pair string (pair string bool)) ;
             DUP 5 ;
             GET 3 ;
             ITER { CONS } ;
             NIL (pair string (pair string bool)) ;
             SWAP ;
             ITER { CONS } ;
             PAIR ;
             DUP 4 ;
             CAR ;
             NIL int ;
             SWAP ;
             ITER { CONS } ;
             DUP 5 ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SOME ;
             PUSH int 0 ;
             DUP 4 ;
             CAR ;
             ITER { ADD } ;
             SWAP ;
             PAIR ;
             NIL string ;
             DUP 4 ;
             GET 3 ;
             ITER { CAR ; CONS } ;
             NIL string ;
             SWAP ;
             ITER { CONS } ;
             CONCAT ;
             PUSH int 0 ;
             NIL int ;
             DUP 6 ;
             GET 4 ;
             ITER { CONS } ;
             ITER { ADD } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             UNPAIR ;
             CDR ;
             PUSH string "" ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             DUP ;
             GET 3 ;
             ITER { CDR ;
                    DUP ;
                    CDR ;
                    IF { DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         DIG 4 ;
                         CAR ;
                         SWAP ;
                         CONCAT ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP }
                       { DROP } } ;
             PUSH int 0 ;
             PUSH bool True ;
             LOOP { DUP 3 ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    CAR ;
                    DIG 5 ;
                    GET 3 ;
                    CDR ;
                    DIG 4 ;
                    DUP ;
                    DUP ;
                    DUG 6 ;
                    MUL ;
                    CONS ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    DUG 2 ;
                    PUSH int 1 ;
                    ADD ;
                    DUP ;
                    PUSH int 5 ;
                    COMPARE ;
                    GT } ;
             DROP 2 ;
             NIL int ;
             PUSH int 1 ;
             PUSH bool True ;
             LOOP { DUP ;
                    DIG 2 ;
                    SWAP ;
                    CONS ;
                    SWAP ;
                    PUSH int 1 ;
                    ADD ;
                    DUP ;
                    PUSH int 12 ;
                    COMPARE ;
                    GT } ;
             DROP ;
             NIL int ;
             SWAP ;
             ITER { CONS } ;
             UPDATE 5 }
           { IF_LEFT
               { IF_CONS
                   { DIG 2 ; SWAP ; UPDATE 7 ; SWAP ; UPDATE 8 }
                   { PUSH string "abc" ; UPDATE 7 } }
               { DUP ;
                 IF_CONS
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     IF_CONS
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         SWAP ;
                         DIG 3 ;
                         CONCAT ;
                         UPDATE 7 ;
                         SWAP ;
                         UPDATE 8 }
                       { DROP 3 } }
                   { DROP ; PUSH string "abc" ; UPDATE 7 } } } ;
         NIL operation ;
         PAIR } }
