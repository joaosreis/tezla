{ storage
    (pair (pair (pair (pair (address %akaProtocol) (nat %bundle_id))
                      (pair (big_map %bundles
                               nat
                               (pair (pair (nat %bundle_amount) (map %bundle_items nat nat))
                                     (pair (address %issuer) (pair (string %metadata) (mutez %xtz_per_bundle)))))
                            (nat %gacha_id)))
                (pair (pair (nat %gacha_limit) (address %gacha_oracle))
                      (pair (bool %gacha_pause)
                            (big_map %gacha_plays
                               nat
                               (pair (nat %gacha_amount) (pair (nat %gacha_id) (address %sender)))))))
          (pair (pair (pair (int %gacha_stage) (big_map %gacha_whitelist address unit))
                      (pair (big_map %gachas
                               nat
                               (pair (pair (pair (timestamp %cancel_time) (nat %gacha_amount))
                                           (pair (map %gacha_items nat (pair (nat %remains) (nat %total)))
                                                 (nat %gacha_play_remains)))
                                     (pair (pair (timestamp %issue_time) (address %issuer))
                                           (pair (nat %lastprize_akaOBJ_id) (pair (string %metadata) (mutez %xtz_per_gacha))))))
                            (bool %locked)))
                (pair (pair (mutez %lowest_price) (address %manager))
                      (pair (big_map %metadata string bytes) (pair (nat %oracle_play_id) (nat %play_id)))))) ;
  parameter
    (or (or (or (or (nat %cancel_bundle_pack) (nat %cancel_gacha_pack))
                (or (pair %collect_bundle (nat %bundle_amount) (nat %bundle_id))
                    (address %configure)))
            (or (or (pair %gacha (nat %gacha_amount) (nat %gacha_id))
                    (pair %make_bundle_pack
                       (pair (nat %bundle_amount)
                             (list %bundle_items (pair (nat %akaOBJ_id) (nat %akaOBJ_amount))))
                       (pair (string %metadata) (mutez %xtz_per_bundle))))
                (or (pair %make_gacha_pack
                       (pair (int %gacha_duration)
                             (list %gacha_items (pair (nat %akaOBJ_id) (nat %akaOBJ_amount))))
                       (pair (nat %lastprize_akaOBJ_id) (pair (string %metadata) (mutez %xtz_per_gacha))))
                    (unit %next_gacha_stage))))
        (or (or (or (list %oracle_gacha nat) (bool %protocol_set_gacha_pause))
                (or (mutez %protocol_set_lowest_price) (nat %set_gacha_limit)))
            (or (or (pair %set_metadata (string %k) (bytes %v)) (address %update_gacha_oracle))
                (or (address %update_manager)
                    (list %update_whitelist (or (address %add_member) (address %remove_member))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.sender == self.data.bundles[params.cancel_bundle_id].issuer" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         ITER { DUP 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 8 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 327 ; FAILWITH } {} ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                DIG 11 ;
                                CAR ;
                                CAR ;
                                GET 3 ;
                                DUP 12 ;
                                GET ;
                                IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                                CAR ;
                                CAR ;
                                DUP 11 ;
                                CDR ;
                                MUL ;
                                SOME ;
                                DIG 10 ;
                                CAR ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                SWAP } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %bundle_transfer (pair address (map nat nat)) ;
                         IF_NONE { PUSH int 328 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 5 ;
                         GET ;
                         IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         NONE (pair (pair nat (map nat nat)) (pair address (pair string mutez))) ;
                         DIG 7 ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 226 ; FAILWITH } {} ;
                         GET 3 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.sender == self.data.gachas[params.cancel_gacha_id].issuer" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 228 ; FAILWITH } {} ;
                         GET 3 ;
                         CAR ;
                         PUSH int 1200 ;
                         ADD ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH bool True }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 228 ; FAILWITH } {} ;
                              CAR ;
                              CAR ;
                              CAR ;
                              NOW ;
                              COMPARE ;
                              GT } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.now < sp.add_seconds(self.data.gachas[params.cancel_gacha_id].issue_time, 1200)) | (sp.now > self.data.gachas[params.cancel_gacha_id].cancel_time)" ;
                              FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %gacha_transfer (pair address (map nat (pair nat nat))) ;
                         IF_NONE { PUSH int 230 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 5 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 5 ;
                         GET ;
                         IF_NONE { PUSH int 231 ; FAILWITH } {} ;
                         CAR ;
                         GET 3 ;
                         SENDER ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET ;
                         IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         IF { DUP 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CONTRACT %gacha_transfer_lastprize (pair address nat) ;
                              IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 5 ;
                              GET ;
                              IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                              GET 5 ;
                              SENDER ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS }
                            {} ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         NONE (pair (pair (pair timestamp nat) (pair (map nat (pair nat nat)) nat))
                                    (pair (pair timestamp address) (pair nat (pair string mutez)))) ;
                         DIG 7 ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 262 ; FAILWITH } {} ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DUP ; CAR ; PUSH nat 0 ; COMPARE ; LT } { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 262 ; FAILWITH } {} ;
                              CAR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              COMPARE ;
                              LE }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((sp.sender != self.data.bundles[params.bundle_id].issuer) & (params.bundle_amount > 0)) & (params.bundle_amount <= self.data.bundles[params.bundle_id].bundle_amount)" ;
                              FAILWITH } ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 263 ; FAILWITH } {} ;
                         GET 6 ;
                         COMPARE ;
                         NEQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                              GET 6 ;
                              AMOUNT ;
                              EDIV ;
                              IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH mutez 1 ;
                                   DUP ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   GET 3 ;
                                   DUP 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH int 266 ; FAILWITH } {} ;
                                   GET 6 ;
                                   EDIV ;
                                   IF_NONE { PUSH int 266 ; FAILWITH } {} ;
                                   CAR ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   GET 3 ;
                                   DUP 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                                   GET 6 ;
                                   AMOUNT ;
                                   EDIV ;
                                   IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                                   CAR ;
                                   MUL ;
                                   MUL ;
                                   AMOUNT ;
                                   COMPARE ;
                                   EQ }
                                 { PUSH bool False } ;
                              IF { PUSH mutez 0 ; AMOUNT ; COMPARE ; GT } { PUSH bool False } ;
                              IF {}
                                 { PUSH string
                                        "WrongCondition: ((params.bundle_amount == sp.fst(sp.ediv(sp.amount, self.data.bundles[params.bundle_id].xtz_per_bundle).open_some())) & (sp.amount == sp.mul(sp.fst(sp.ediv(sp.amount, self.data.bundles[params.bundle_id].xtz_per_bundle).open_some()) * sp.fst(sp.ediv(self.data.bundles[params.bundle_id].xtz_per_bundle, sp.mutez(1)).open_some()), sp.mutez(1)))) & (sp.amount > sp.tez(0))" ;
                                   FAILWITH } ;
                              NIL operation ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CONTRACT %collect_bundle_fee (pair address address) ;
                              IF_NONE { PUSH int 269 ; FAILWITH } {} ;
                              AMOUNT ;
                              DUP 5 ;
                              CAR ;
                              CAR ;
                              GET 3 ;
                              DUP 5 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 270 ; FAILWITH } {} ;
                              GET 3 ;
                              SENDER ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { NIL operation } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         ITER { DIG 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 9 ;
                                CDR ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 327 ; FAILWITH } {} ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                DUP 12 ;
                                CAR ;
                                DUP 11 ;
                                CDR ;
                                MUL ;
                                SOME ;
                                DIG 10 ;
                                CAR ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                DUG 2 } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %bundle_transfer (pair address (map nat nat)) ;
                         IF_NONE { PUSH int 328 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 5 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 3 ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 8 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                         UNPAIR ;
                         CDR ;
                         DUP 10 ;
                         CAR ;
                         DIG 11 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 12 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ABS ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 4 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 279 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              NONE (pair (pair nat (map nat nat)) (pair address (pair string mutez))) ;
                              DIG 7 ;
                              CDR ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ; DROP } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 4 ; NOT } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.manager) & (~ self.data.locked)" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         PUSH bool True ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation } } }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 5 ;
                         IF { PUSH string "Paused now, cannot play gacha" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 100 ; FAILWITH } {} ;
                         GET 3 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.sender != self.data.gachas[params.gacha_id].issuer" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         PUSH nat 0 ;
                         COMPARE ;
                         LT ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET 3 ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              COMPARE ;
                              LE }
                            { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 101 ; FAILWITH } {} ;
                              CAR ;
                              CAR ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              COMPARE ;
                              LE }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((params.gacha_amount > 0) & (params.gacha_amount <= self.data.gacha_limit)) & (params.gacha_amount <= self.data.gachas[params.gacha_id].gacha_amount)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 103 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.now < self.data.gachas[params.gacha_id].cancel_time" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 105 ; FAILWITH } {} ;
                         GET 8 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { PUSH int 105 ; FAILWITH } {} ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH mutez 1 ;
                              DUP ;
                              DUP 4 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 4 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 106 ; FAILWITH } {} ;
                              GET 8 ;
                              EDIV ;
                              IF_NONE { PUSH int 106 ; FAILWITH } {} ;
                              CAR ;
                              DUP 4 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 4 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 105 ; FAILWITH } {} ;
                              GET 8 ;
                              AMOUNT ;
                              EDIV ;
                              IF_NONE { PUSH int 105 ; FAILWITH } {} ;
                              CAR ;
                              MUL ;
                              MUL ;
                              AMOUNT ;
                              COMPARE ;
                              EQ }
                            { PUSH bool False } ;
                         IF { PUSH mutez 0 ; AMOUNT ; COMPARE ; GT } { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((params.gacha_amount == sp.fst(sp.ediv(sp.amount, self.data.gachas[params.gacha_id].xtz_per_gacha).open_some())) & (sp.amount == sp.mul(sp.fst(sp.ediv(sp.amount, self.data.gachas[params.gacha_id].xtz_per_gacha).open_some()) * sp.fst(sp.ediv(self.data.gachas[params.gacha_id].xtz_per_gacha, sp.mutez(1)).open_some()), sp.mutez(1)))) & (sp.amount > sp.tez(0))" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         SENDER ;
                         DIG 6 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 8 ;
                         CAR ;
                         PAIR 3 ;
                         SOME ;
                         DIG 7 ;
                         GET 10 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         GET 10 ;
                         PUSH nat 1 ;
                         ADD ;
                         UPDATE 10 ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 7 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 114 ; FAILWITH } {} ;
                         UNPAIR ;
                         UNPAIR ;
                         CAR ;
                         DUP 10 ;
                         CAR ;
                         DIG 11 ;
                         GET 3 ;
                         GET 3 ;
                         DIG 11 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 114 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation }
                       { DUP ;
                         CAR ;
                         CDR ;
                         SIZE ;
                         PUSH nat 1 ;
                         COMPARE ;
                         LT ;
                         IF { DUP ; CAR ; CAR ; PUSH nat 0 ; COMPARE ; LT } { PUSH bool False } ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 5 ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 4 ;
                              COMPARE ;
                              GE }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((sp.len(params.bundle_items) > 1) & (params.bundle_amount > 0)) & (params.xtz_per_bundle >= self.data.lowest_price)" ;
                              FAILWITH } ;
                         EMPTY_MAP nat nat ;
                         EMPTY_MAP nat nat ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         ITER { DUP 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                MEM ;
                                IF { PUSH string "WrongCondition: ~ (itemMap.value.contains(item.akaOBJ_id))" ;
                                     FAILWITH }
                                   {} ;
                                DUP ;
                                CDR ;
                                PUSH nat 0 ;
                                COMPARE ;
                                LT ;
                                IF {} { PUSH string "WrongCondition: item.akaOBJ_amount > 0" ; FAILWITH } ;
                                DIG 2 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SOME ;
                                DUP 3 ;
                                CAR ;
                                UPDATE ;
                                DUG 2 ;
                                SWAP ;
                                DUP 4 ;
                                CAR ;
                                CAR ;
                                DUP 3 ;
                                CDR ;
                                MUL ;
                                SOME ;
                                DIG 2 ;
                                CAR ;
                                UPDATE } ;
                         NIL operation ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %make_bundle_transfer (pair address (map nat nat)) ;
                         IF_NONE { PUSH int 254 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         SENDER ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 4 ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DIG 7 ;
                         DUP ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 9 ;
                         GET 3 ;
                         PAIR ;
                         SENDER ;
                         PAIR ;
                         DIG 7 ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         PUSH nat 1 ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP } }
                   { IF_LEFT
                       { PUSH int 1 ;
                         DUP 3 ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              CAR ;
                              CDR ;
                              SENDER ;
                              MEM ;
                              IF {}
                                 { PUSH string "WrongCondition: self.data.gacha_whitelist.contains(sp.sender)" ;
                                   FAILWITH } }
                            {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 6 ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string "WrongCondition: params.xtz_per_gacha >= self.data.lowest_price" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         CAR ;
                         PUSH int 1 ;
                         SWAP ;
                         COMPARE ;
                         GE ;
                         IF { DUP ; CAR ; CAR ; PUSH int 30 ; SWAP ; COMPARE ; LE }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (params.gacha_duration >= 1) & (params.gacha_duration <= 30)" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         CDR ;
                         SIZE ;
                         PUSH nat 0 ;
                         COMPARE ;
                         LT ;
                         IF {}
                            { PUSH string "WrongCondition: sp.len(params.gacha_items) > 0" ; FAILWITH } ;
                         EMPTY_MAP nat (pair nat nat) ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         ITER { DUP 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                MEM ;
                                IF { PUSH string "WrongCondition: ~ (itemMap.value.contains(item.akaOBJ_id))" ;
                                     FAILWITH }
                                   {} ;
                                DUP ;
                                CDR ;
                                PUSH nat 0 ;
                                COMPARE ;
                                LT ;
                                IF { DIG 2 ;
                                     SWAP ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 3 ;
                                     CDR ;
                                     PAIR ;
                                     SOME ;
                                     DUP 3 ;
                                     CAR ;
                                     UPDATE ;
                                     DUG 2 ;
                                     CDR ;
                                     ADD }
                                   { DROP } } ;
                         DUP ;
                         PUSH nat 0 ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH string "WrongCondition: totalAmount.value > 0" ; FAILWITH } ;
                         PUSH nat 0 ;
                         PUSH int 1 ;
                         DUP 6 ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { DROP ; DUP ; PUSH nat 10000 ; MUL } {} ;
                         NIL operation ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %make_gacha_transfer
                           (pair (pair nat address) (pair (map nat (pair nat nat)) nat)) ;
                         IF_NONE { PUSH int 91 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 7 ;
                         GET 3 ;
                         DUP 7 ;
                         PAIR ;
                         SENDER ;
                         DIG 5 ;
                         PAIR ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 5 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DIG 8 ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 10 ;
                         GET 5 ;
                         PAIR ;
                         DUP 10 ;
                         GET 3 ;
                         PAIR ;
                         SENDER ;
                         NOW ;
                         PAIR ;
                         PAIR ;
                         DUP 8 ;
                         DIG 9 ;
                         PAIR ;
                         DIG 8 ;
                         NOW ;
                         PUSH int 60 ;
                         DUP ;
                         PUSH int 24 ;
                         DIG 13 ;
                         CAR ;
                         CAR ;
                         MUL ;
                         MUL ;
                         MUL ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         DIG 7 ;
                         CAR ;
                         CAR ;
                         GET 4 ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         PUSH nat 1 ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP }
                       { DROP ;
                         DUP ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ; GET 3 ; CAR ; CAR ; PUSH int 3 ; COMPARE ; GT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.manager) & (self.data.gacha_stage < 3)" ;
                              FAILWITH } ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         PUSH int 1 ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         PUSH int 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CONTRACT %set_gacha_minted_only bool ;
                              IF_NONE { PUSH int 46 ; FAILWITH } {} ;
                              NIL operation ;
                              SWAP ;
                              PUSH mutez 0 ;
                              PUSH bool False ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { NIL operation } } } } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DUP ; GET 10 ; SWAP ; DUP ; DUG 3 ; GET 9 ; COMPARE ; LT }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.gacha_oracle) & (self.data.oracle_play_id < self.data.play_id)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SIZE ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.len(params.gacha_numbers) == self.data.gacha_limit" ;
                              FAILWITH } ;
                         EMPTY_MAP nat nat ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         ITER { DIG 2 ; SWAP ; SOME ; DUP 3 ; UPDATE ; SWAP ; PUSH nat 1 ; ADD } ;
                         EMPTY_MAP nat (pair nat nat) ;
                         DIG 4 ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 6 ;
                         GET 9 ;
                         GET ;
                         IF_NONE { PUSH int 131 ; FAILWITH } {} ;
                         GET 3 ;
                         DIG 5 ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 7 ;
                         GET 9 ;
                         GET ;
                         IF_NONE { PUSH int 133 ; FAILWITH } {} ;
                         CAR ;
                         PUSH nat 0 ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         LOOP { DUP 8 ;
                                GET 3 ;
                                GET 3 ;
                                DUP 4 ;
                                GET ;
                                IF_NONE { PUSH int 134 ; FAILWITH } {} ;
                                CAR ;
                                GET 4 ;
                                DUP 7 ;
                                DUP 3 ;
                                GET ;
                                IF_NONE { PUSH int 134 ; FAILWITH } {} ;
                                EDIV ;
                                IF_NONE { PUSH int 134 ; FAILWITH } { CDR } ;
                                PUSH nat 1000000 ;
                                DUP 10 ;
                                GET 3 ;
                                GET 3 ;
                                DUP 6 ;
                                GET ;
                                IF_NONE { PUSH int 138 ; FAILWITH } {} ;
                                CAR ;
                                GET 3 ;
                                ITER { DUP ;
                                       GET 3 ;
                                       DUP 4 ;
                                       COMPARE ;
                                       LT ;
                                       IF { SWAP ;
                                            DROP ;
                                            SWAP ;
                                            DROP ;
                                            CAR ;
                                            DUP 9 ;
                                            GET 3 ;
                                            GET 3 ;
                                            DUP 5 ;
                                            GET ;
                                            IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                                            CAR ;
                                            GET 4 ;
                                            SWAP }
                                          { GET 3 ; DIG 2 ; SUB ; ABS ; SWAP } } ;
                                SWAP ;
                                DROP ;
                                DUP 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                MEM ;
                                IF { DIG 4 ;
                                     DUP ;
                                     DUP 3 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 146 ; FAILWITH } {} ;
                                     DUP ;
                                     CAR ;
                                     PUSH nat 1 ;
                                     ADD ;
                                     UPDATE 1 ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     DUP ;
                                     DUP 3 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 147 ; FAILWITH } {} ;
                                     DUP ;
                                     CDR ;
                                     PUSH nat 1 ;
                                     ADD ;
                                     UPDATE 2 ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     DUG 4 }
                                   { DIG 4 ; PUSH (option (pair nat nat)) (Some (Pair 1 1)) ; DUP 3 ; UPDATE ; DUG 4 } ;
                                DUP 9 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 10 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 12 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                                PUSH nat 1 ;
                                DIG 21 ;
                                GET 3 ;
                                GET 3 ;
                                DUP 18 ;
                                GET ;
                                IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                                CAR ;
                                GET 3 ;
                                DIG 14 ;
                                GET ;
                                IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                                CAR ;
                                SUB ;
                                ABS ;
                                UPDATE 1 ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                DUG 8 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DUP ;
                                DUP 9 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                CAR ;
                                PUSH nat 1 ;
                                DIG 17 ;
                                GET 3 ;
                                GET 3 ;
                                DUP 14 ;
                                GET ;
                                IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                                CAR ;
                                GET 4 ;
                                SUB ;
                                ABS ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUG 7 ;
                                PUSH nat 1 ;
                                ADD ;
                                DUP ;
                                DUP 3 ;
                                COMPARE ;
                                GT } ;
                         DROP 2 ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         NIL operation ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %oracle_gacha_transfer
                           (pair (pair address nat) (pair address (pair (map nat (pair nat nat)) mutez))) ;
                         IF_NONE { PUSH int 157 ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DIG 5 ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 7 ;
                         GET 9 ;
                         GET ;
                         IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                         CAR ;
                         PUSH mutez 1 ;
                         DUP 8 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 7 ;
                         GET ;
                         IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                         GET 8 ;
                         EDIV ;
                         IF_NONE { PUSH int 155 ; FAILWITH } {} ;
                         CAR ;
                         MUL ;
                         MUL ;
                         DUP 6 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 5 ;
                         GET ;
                         IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                         GET 8 ;
                         DIG 5 ;
                         PAIR ;
                         DUP 6 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 6 ;
                         GET ;
                         IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                         GET 3 ;
                         CDR ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 7 ;
                         GET 9 ;
                         GET ;
                         IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         CAR ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 8 ;
                         GET 9 ;
                         GET ;
                         IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                         GET 4 ;
                         PAIR ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PUSH nat 0 ;
                         DUP 4 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET ;
                         IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                         CAR ;
                         GET 4 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CONTRACT %gacha_transfer_lastprize (pair address nat) ;
                              IF_NONE { PUSH int 162 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 5 ;
                              GET ;
                              IF_NONE { PUSH int 163 ; FAILWITH } {} ;
                              GET 5 ;
                              DIG 5 ;
                              DUP ;
                              CAR ;
                              GET 6 ;
                              SWAP ;
                              DUP ;
                              DUG 7 ;
                              GET 9 ;
                              GET ;
                              IF_NONE { PUSH int 163 ; FAILWITH } {} ;
                              GET 4 ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIG 2 ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              NONE (pair (pair (pair timestamp nat) (pair (map nat (pair nat nat)) nat))
                                         (pair (pair timestamp address) (pair nat (pair string mutez)))) ;
                              DIG 7 ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP }
                            { SWAP ; DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         NONE (pair nat (pair nat address)) ;
                         DIG 7 ;
                         GET 9 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         GET 9 ;
                         PUSH nat 1 ;
                         ADD ;
                         UPDATE 9 ;
                         SWAP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.akaProtocol" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.akaProtocol" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } ;
                     NIL operation } }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 7 ;
                         DUP 3 ;
                         CDR ;
                         SOME ;
                         DIG 3 ;
                         CAR ;
                         UPDATE ;
                         UPDATE 7 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; GET 3 ; CDR ; SENDER ; COMPARE ; EQ } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.manager) | (sp.sender == self.data.gacha_oracle)" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                         DUP ;
                         ITER { IF_LEFT
                                  { DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 6 ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { DIG 2 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    NONE unit ;
                                    DIG 6 ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP } } ;
                         DROP } } ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
