{ parameter
    (or (pair %makeOrder
           (pair (pair (nat %amount_from) (nat %amount_to))
                 (pair (timestamp %deadline) (address %sender)))
           (pair (address %token_from) (address %token_to)))
        (nat %takeOrder)) ;
  storage
    (pair (nat %counter)
          (big_map %order_book
             nat
             (pair (pair (pair (pair (nat %amount_from) (nat %amount_to))
                               (pair (timestamp %deadline) (address %sender)))
                         (pair (address %token_from) (address %token_to)))
                   nat))) ;
  code { NIL operation ;
         PUSH address "tz1burnburnburnburnburnburnburjAYjjX" ;
         PUSH string "63" ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         IF_LEFT
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True } { PUSH bool False } ;
             IF { DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  PUSH mutez 1000000 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  MUL ;
                  AMOUNT ;
                  COMPARE ;
                  EQ ;
                  DUP ;
                  LAMBDA
                    (pair bool string)
                    unit
                    { DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      IF { PUSH unit Unit } { DUP ; FAILWITH } ;
                      DIP { DROP 2 } } ;
                  SWAP ;
                  APPLY ;
                  DIP { DROP } ;
                  SWAP ;
                  EXEC }
                { PUSH unit Unit } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             SOME ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             UPDATE ;
             PUSH nat 1 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             ADD ;
             PAIR ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 7 } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE { PUSH string "61" ; FAILWITH } { DUP ; DIP { DROP } } ;
             DUP ;
             CAR ;
             PUSH string "62" ;
             NOW ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             GE ;
             DUP ;
             LAMBDA
               (pair bool string)
               unit
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 IF { PUSH unit Unit } { DUP ; FAILWITH } ;
                 DIP { DROP 2 } } ;
             SWAP ;
             APPLY ;
             DIP { DROP } ;
             SWAP ;
             EXEC ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True } { PUSH bool False } ;
             IF { SOURCE ;
                  CONTRACT unit ;
                  IF_NONE { PUSH string "No contract" ; FAILWITH } { DUP ; DIP { DROP } } ;
                  DUP ;
                  PUSH mutez 1000000 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  DIP { DROP } }
                { DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  CONTRACT %transferFrom
                    (pair (pair (nat %amount) (address %tr_from)) (address %tr_to)) ;
                  IF_NONE
                    { PUSH string "bad address for get_entrypoint (%transferFrom)" ; FAILWITH }
                    {} ;
                  DUP ;
                  PUSH mutez 0 ;
                  SOURCE ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  TRANSFER_TOKENS ;
                  DIP { DROP } } ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True } { PUSH bool False } ;
             IF { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH string "No contract" ; FAILWITH } { DUP ; DIP { DROP } } ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  PUSH mutez 1000000 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  MUL ;
                  AMOUNT ;
                  COMPARE ;
                  EQ ;
                  DUP ;
                  LAMBDA
                    (pair bool string)
                    unit
                    { DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      IF { PUSH unit Unit } { DUP ; FAILWITH } ;
                      DIP { DROP 2 } } ;
                  SWAP ;
                  APPLY ;
                  DIP { DROP } ;
                  SWAP ;
                  EXEC ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  PUSH mutez 1000000 ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  DIP { DROP 2 } }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CDR ;
                  CONTRACT %transferFrom
                    (pair (pair (nat %amount) (address %tr_from)) (address %tr_to)) ;
                  IF_NONE
                    { PUSH string "bad address for get_entrypoint (%transferFrom)" ; FAILWITH }
                    {} ;
                  DUP ;
                  PUSH mutez 0 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  SOURCE ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  PAIR ;
                  PAIR ;
                  TRANSFER_TOKENS ;
                  DIP { DROP } } ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             NONE (pair (pair (pair (pair nat nat) (pair timestamp address)) (pair address address)) nat) ;
             SWAP ;
             UPDATE ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CONS ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CONS ;
             PAIR ;
             DIP { DROP 10 } } ;
         DIP { DROP 5 } } }
