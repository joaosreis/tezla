{ parameter
    (or (or (unit %cancel_xtzusd) (address %change_oracle))
        (or (unit %request_xtzusd)
            (pair %set_xtzusd
               (nat %client_request_id)
               (or %result (bytes %bytes) (or (int %int) (string %string)))))) ;
  storage
    (pair (pair (address %admin) (pair (nat %next_request_id) (address %oracle)))
          (pair (address %token) (pair (option %waiting_xtzusd_id nat) (int %xtzusd)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.waiting_xtzusd_id.is_some()" ;
                      FAILWITH } ;
                 DROP ;
                 DUP ;
                 { CAR ; CDR ; CDR } ;
                 CONTRACT %cancel_request nat ;
                 NIL operation ;
                 SWAP ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR ; CAR } ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 NONE nat ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.admin == sp.sender" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                 IF { PUSH string "WrongCondition: ~ self.data.waiting_xtzusd_id.is_some()" ;
                      FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 3 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                 IF { PUSH string "WrongCondition: ~ self.data.waiting_xtzusd_id.is_some()" ;
                      FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 DIG 4 ;
                 { CAR ; CDR ; CAR } ;
                 SOME ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 CONTRACT %proxy
                   (pair (address %oracle)
                         (pair %params
                            (pair (nat %amount) (pair (nat %client_request_id) (bytes %job_id)))
                            (pair (list %parameters
                                     (pair string (map string (or (bytes %bytes) (or (int %int) (string %string))))))
                                  (pair (address %target) (timestamp %timeout))))) ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 NOW ;
                 PUSH int 300 ;
                 ADD ;
                 SELF ;
                 DIG 5 ;
                 DROP ;
                 ADDRESS ;
                 CONTRACT %set_xtzusd
                   (pair (nat %client_request_id)
                         (or %result (bytes %bytes) (or (int %int) (string %string)))) ;
                 { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                 ADDRESS ;
                 PAIR %target %timeout ;
                 PUSH (list (pair string (map string (or (bytes %bytes) (or (int %int) (string %string))))))
                      { Pair "XTZUSD" {} } ;
                 PAIR %parameters ;
                 PUSH bytes 0x ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 { CAR ; CDR ; CAR } ;
                 PAIR %client_request_id %job_id ;
                 PUSH nat 2 ;
                 PAIR %amount ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 { CAR ; CDR ; CDR } ;
                 PAIR %oracle %params ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 PUSH nat 1 ;
                 DIG 5 ;
                 { CAR ; CDR ; CAR } ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CDR ; CDR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CAR } ;
                 { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                 IF { DUP ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      { CDR ; CDR ; CAR } ;
                      { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                      COMPARE ;
                      EQ }
                    { PUSH bool False } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.waiting_xtzusd_id.is_some() & (self.data.waiting_xtzusd_id.open_some() == params.client_request_id)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 NONE nat ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 IF_LEFT
                   { DROP ; PUSH unit Unit ; FAILWITH }
                   { IF_LEFT {} { DROP ; PUSH unit Unit ; FAILWITH } } ;
                 DIG 5 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation } } ;
         PAIR } }
