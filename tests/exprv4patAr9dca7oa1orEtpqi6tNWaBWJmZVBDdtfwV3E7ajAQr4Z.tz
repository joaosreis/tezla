{ storage
    (pair (pair (pair (mutez %balanceCounterparty) (mutez %balanceOwner))
                (pair (address %counterparty) (timestamp %epoch)))
          (pair (pair (mutez %fromCounterparty) (mutez %fromOwner))
                (pair (bytes %hashedSecret) (address %owner)))) ;
  parameter
    (or (or (unit %addBalanceCounterparty) (unit %addBalanceOwner))
        (or (bytes %claimCounterparty) (unit %claimOwner))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.balanceCounterparty == sp.tez(0)" ;
                      FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.amount == self.data.fromCounterparty" ;
                      FAILWITH } ;
                 DUP ;
                 UNPAIR ;
                 UNPAIR ;
                 CDR ;
                 DIG 3 ;
                 GET 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               { DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH mutez 0 ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.balanceOwner == sp.tez(0)" ;
                      FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 CDR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.amount == self.data.fromOwner" ; FAILWITH } ;
                 DUP ;
                 UNPAIR ;
                 UNPAIR ;
                 CAR ;
                 DIG 3 ;
                 GET 3 ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR } ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: sp.now < self.data.epoch" ; FAILWITH } ;
                 BLAKE2B ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.hashedSecret == sp.blake2b(params.secret)" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.counterparty" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 30 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 UNPAIR ;
                 CDR ;
                 PUSH (pair mutez mutez) (Pair 0 0) ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { DROP ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 NOW ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "WrongCondition: self.data.epoch < sp.now" ; FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 30 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 UNPAIR ;
                 CDR ;
                 PUSH (pair mutez mutez) (Pair 0 0) ;
                 PAIR ;
                 PAIR ;
                 SWAP } } ;
         PAIR } }
