{ parameter
    (or (or (or (list %changeBeneficiery
                   (pair (address %from_) (pair (string %schedule_name) (address %to_))))
                (list %changeBeneficieryForAll (pair (address %from_) (address %to_))))
            (or (unit %claim) (address %claimFor)))
        (or (or (pair %claimableAmount
                   (address %beneficiery)
                   (pair (string %schedule_name) (address %target)))
                (list %revokeSchedule (pair (address %beneficiery) (string %schedule_name))))
            (or (list %revokeSchedules address)
                (or (list %vest
                       (pair (pair (pair (address %beneficiery) (timestamp %cliff))
                                   (pair (timestamp %end) (option %metadata (map string bytes))))
                             (pair (pair (string %schedule_name) (timestamp %start))
                                   (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount))))))
                    (pair %vestedAmount
                       (address %beneficiery)
                       (pair (string %schedule_name) (address %target))))))) ;
  storage
    (pair (pair (map %schedules
                   address
                   (map string
                        (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                    (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                              (pair (pair (option %revokedBy address) (timestamp %start))
                                    (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                (int %secondValue))
          (pair (map %testMap string int) (int %thirdValue))) ;
  code { LAMBDA
           (pair (pair %in_param
                    (pair (nat %amount) (option %metadata (map string bytes)))
                    (pair (address %to_) (pair (address %token_address) (option %token_id nat))))
                 (pair %in_storage
                    (pair (map %schedules
                             address
                             (map string
                                  (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                              (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                        (pair (pair (option %revokedBy address) (timestamp %start))
                                              (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                          (int %secondValue))
                    (pair (map %testMap string int) (int %thirdValue))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (map %schedules
                                   address
                                   (map string
                                        (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                    (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                              (pair (pair (option %revokedBy address) (timestamp %start))
                                                    (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                                (int %secondValue))
                          (pair (map %testMap string int) (int %thirdValue)))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             IF_NONE
               { SWAP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CONTRACT %mint (pair (address %address) (nat %amount)) ;
                 IF_NONE { PUSH int 221 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR %address %amount ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP }
               { DROP ;
                 SWAP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount))
                         (pair (map %metadata string bytes) (nat %token_id))) ;
                 IF_NONE { PUSH int 199 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 IF_NONE { PUSH int 214 ; FAILWITH } {} ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF_NONE { PUSH int 215 ; FAILWITH } {} ;
                 PAIR %metadata %token_id ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR %address %amount ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP } ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         LAMBDA
           (pair (pair %in_param
                    (pair (nat %amount) (address %from_))
                    (pair (address %to_) (pair (address %token_address) (option %token_id nat))))
                 (pair %in_storage
                    (pair (map %schedules
                             address
                             (map string
                                  (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                              (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                        (pair (pair (option %revokedBy address) (timestamp %start))
                                              (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                          (int %secondValue))
                    (pair (map %testMap string int) (int %thirdValue))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (map %schedules
                                   address
                                   (map string
                                        (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                    (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                              (pair (pair (option %revokedBy address) (timestamp %start))
                                                    (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                                (int %secondValue))
                          (pair (map %testMap string int) (int %thirdValue)))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             IF_NONE
               { SWAP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))) ;
                 IF_NONE { PUSH int 273 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR %to_ %value ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR %from_ ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP }
               { DROP ;
                 SWAP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CONTRACT %transfer
                   (pair (pair (nat %amount) (address %from_)) (pair (address %to_) (nat %token_id))) ;
                 IF_NONE { PUSH int 251 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 IF_NONE { PUSH int 264 ; FAILWITH } {} ;
                 DUP 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR %to_ %token_id ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR %amount %from_ ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP } ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         LAMBDA
           (pair (pair %in_param
                    (pair (pair (address %beneficiery) (timestamp %cliff))
                          (pair (timestamp %end) (option %metadata (map string bytes))))
                    (pair (pair (string %schedule_name) (timestamp %start))
                          (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))
                 (pair %in_storage
                    (pair (map %schedules
                             address
                             (map string
                                  (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                              (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                        (pair (pair (option %revokedBy address) (timestamp %start))
                                              (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                          (int %secondValue))
                    (pair (map %testMap string int) (int %thirdValue))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (map %schedules
                                   address
                                   (map string
                                        (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                    (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                              (pair (pair (option %revokedBy address) (timestamp %start))
                                                    (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                                (int %secondValue))
                          (pair (map %testMap string int) (int %thirdValue)))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: lparams_2.in_param.start < lparams_2.in_param.cliff" ;
                  FAILWITH } ;
             DIG 2 ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: lparams_2.in_param.start < lparams_2.in_param.end" ;
                  FAILWITH } ;
             DIG 2 ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: lparams_2.in_param.cliff < lparams_2.in_param.end" ;
                  FAILWITH } ;
             DUP ;
             CAR ;
             CAR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             MEM ;
             IF { DUP ;
                  CAR ;
                  CAR ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET ;
                  IF_NONE { PUSH int 101 ; FAILWITH } {} ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  MEM ;
                  IF { UNPAIR ;
                       UNPAIR ;
                       DUP ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 104 ; FAILWITH } {} ;
                       DUP ;
                       DUP 8 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 104 ; FAILWITH } {} ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DIG 12 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       PAIR }
                     { UNPAIR ;
                       UNPAIR ;
                       DUP ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 102 ; FAILWITH } {} ;
                       DIG 6 ;
                       DUP ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 8 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       PAIR %token_id %vesting_amount ;
                       DUP 8 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       PAIR %token_address ;
                       DUP 8 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CDR ;
                       NONE address ;
                       PAIR %revokedBy %start ;
                       PAIR ;
                       PUSH (pair (bool %revoked) (option %revokedAt timestamp)) (Pair False None) ;
                       DUP 9 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       PAIR %end ;
                       DUP 9 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       PUSH int 0 ;
                       ISNAT ;
                       IF_NONE { PUSH int 91 ; FAILWITH } {} ;
                       PAIR %claimed_amount %cliff ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       DIG 7 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       UPDATE ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       PAIR } }
                { UNPAIR ;
                  UNPAIR ;
                  PUSH (option
                          (map string
                               (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                           (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                     (pair (pair (option %revokedBy address) (timestamp %start))
                                           (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                       (Some {}) ;
                  DUP 6 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  UPDATE ;
                  PAIR ;
                  PAIR ;
                  UNPAIR ;
                  UNPAIR ;
                  DUP ;
                  DUP 6 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { PUSH int 99 ; FAILWITH } {} ;
                  DIG 6 ;
                  DUP ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR %token_id %vesting_amount ;
                  DUP 8 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR %token_address ;
                  DUP 8 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  NONE address ;
                  PAIR %revokedBy %start ;
                  PAIR ;
                  PUSH (pair (bool %revoked) (option %revokedAt timestamp)) (Pair False None) ;
                  DUP 9 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PAIR %end ;
                  DUP 9 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  PUSH int 0 ;
                  ISNAT ;
                  IF_NONE { PUSH int 91 ; FAILWITH } {} ;
                  PAIR %claimed_amount %cliff ;
                  PAIR ;
                  PAIR ;
                  SOME ;
                  DIG 7 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  UPDATE ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  PAIR } ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         LAMBDA
           (pair (pair %in_param (address %beneficiery) (string %schedule_name))
                 (pair %in_storage
                    (pair (map %schedules
                             address
                             (map string
                                  (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                              (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                        (pair (pair (option %revokedBy address) (timestamp %start))
                                              (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                          (int %secondValue))
                    (pair (map %testMap string int) (int %thirdValue))))
           (pair (list %operations operation)
                 (pair (nat %result)
                       (pair %storage
                          (pair (map %schedules
                                   address
                                   (map string
                                        (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                    (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                              (pair (pair (option %revokedBy address) (timestamp %start))
                                                    (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                                (int %secondValue))
                          (pair (map %testMap string int) (int %thirdValue)))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             PUSH int 0 ;
             ISNAT ;
             IF_NONE { PUSH int 139 ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DUP 5 ;
             CAR ;
             CAR ;
             MEM ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CAR ;
                  DUP 5 ;
                  CAR ;
                  CAR ;
                  GET ;
                  IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  MEM }
                { PUSH bool False } ;
             IF {}
                { PUSH string
                       "WrongCondition: (self.data.schedules.contains(lparams_3.in_param.beneficiery)) & (self.data.schedules[lparams_3.in_param.beneficiery].contains(lparams_3.in_param.schedule_name))" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DUP 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             DUP 5 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             GET 8 ;
             DUP 3 ;
             CAR ;
             CAR ;
             DUP 6 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             DUP 6 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             CAR ;
             CAR ;
             CAR ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string
                       "WrongCondition: self.data.schedules[lparams_3.in_param.beneficiery][lparams_3.in_param.schedule_name].claimed_amount < self.data.schedules[lparams_3.in_param.beneficiery][lparams_3.in_param.schedule_name].vesting_amount" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DUP 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             DUP 5 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 144 ; FAILWITH } {} ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             IF { DROP ;
                  DIG 2 ;
                  DROP ;
                  PUSH int 0 ;
                  ISNAT ;
                  IF_NONE { PUSH int 149 ; FAILWITH } {} }
                { NOW ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  DUP 6 ;
                  CAR ;
                  CAR ;
                  GET ;
                  IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                  DUP 6 ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                  CDR ;
                  CAR ;
                  CDR ;
                  COMPARE ;
                  GT ;
                  IF { PUSH bool True }
                     { NOW ;
                       DUP 3 ;
                       CAR ;
                       CAR ;
                       DUP 6 ;
                       CAR ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                       DUP 6 ;
                       CAR ;
                       CDR ;
                       GET ;
                       IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                       CAR ;
                       CAR ;
                       CDR ;
                       COMPARE ;
                       GT } ;
                  IF { DROP ;
                       DIG 2 ;
                       DROP ;
                       PUSH int 0 ;
                       ISNAT ;
                       IF_NONE { PUSH int 152 ; FAILWITH } {} }
                     { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       DUP 5 ;
                       CAR ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                       DUP 5 ;
                       CAR ;
                       CDR ;
                       GET ;
                       IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                       CAR ;
                       CDR ;
                       CAR ;
                       NOW ;
                       COMPARE ;
                       GE ;
                       IF { DROP ;
                            DUP ;
                            CAR ;
                            CAR ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                            DIG 3 ;
                            CAR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                            GET 8 }
                          { SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            DUP 5 ;
                            CAR ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                            DUP 5 ;
                            CAR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                            CAR ;
                            CAR ;
                            CDR ;
                            NOW ;
                            COMPARE ;
                            GE ;
                            IF { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 DUP 5 ;
                                 CAR ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 DUP 5 ;
                                 CAR ;
                                 CDR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 NOW ;
                                 COMPARE ;
                                 LT }
                               { PUSH bool False } ;
                            IF { DROP ;
                                 DUP ;
                                 CAR ;
                                 CAR ;
                                 DUP 4 ;
                                 CAR ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 DUP 4 ;
                                 CAR ;
                                 CDR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 DUP 5 ;
                                 CAR ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 DUP 5 ;
                                 CAR ;
                                 CDR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 DUP 5 ;
                                 CAR ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 DUP 5 ;
                                 CAR ;
                                 CDR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 NOW ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                                 DUP 3 ;
                                 CAR ;
                                 CAR ;
                                 DUP 6 ;
                                 CAR ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 GET ;
                                 IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                                 GET 8 ;
                                 MUL ;
                                 EDIV ;
                                 IF_NONE { PUSH int 158 ; FAILWITH } { CAR } }
                               { DIG 3 ; DROP } } } } ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DUP ;
                     NIL operation ;
                     SWAP ;
                     ITER { SWAP ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            DUP 3 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 352 ; FAILWITH } {} ;
                            DUP 3 ;
                            GET 3 ;
                            GET ;
                            IF_NONE { PUSH int 352 ; FAILWITH } {} ;
                            GET 5 ;
                            CONTRACT %assertRole (pair (address %account) (nat %role)) ;
                            IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                            PUSH mutez 0 ;
                            PUSH nat 0 ;
                            SENDER ;
                            PAIR %account %role ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            SWAP ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 4 ;
                            MEM ;
                            IF {}
                               { DIG 3 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 PUSH (option
                                         (map string
                                              (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                          (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                                    (pair (pair (option %revokedBy address) (timestamp %start))
                                                          (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))))
                                      (Some {}) ;
                                 DUP 5 ;
                                 GET 4 ;
                                 UPDATE ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 3 } ;
                            DUP 4 ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 5 ;
                            GET 4 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                            DIG 8 ;
                            CAR ;
                            CAR ;
                            DUP 7 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                            DUP 7 ;
                            GET 3 ;
                            GET ;
                            IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                            SOME ;
                            DUP 7 ;
                            GET 3 ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 5 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 357 ; FAILWITH } {} ;
                            NONE (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                             (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                       (pair (pair (option %revokedBy address) (timestamp %start))
                                             (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount))))) ;
                            DIG 6 ;
                            GET 3 ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            DUG 2 } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP }
                   { DUP ;
                     NIL operation ;
                     SWAP ;
                     ITER { DUP 4 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 362 ; FAILWITH } {} ;
                            ITER { CAR ;
                                   DIG 2 ;
                                   DUP 5 ;
                                   CAR ;
                                   CAR ;
                                   DUP 4 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 363 ; FAILWITH } {} ;
                                   DIG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 363 ; FAILWITH } {} ;
                                   GET 5 ;
                                   CONTRACT %assertRole (pair (address %account) (nat %role)) ;
                                   IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   PUSH nat 0 ;
                                   SENDER ;
                                   PAIR %account %role ;
                                   TRANSFER_TOKENS ;
                                   CONS ;
                                   SWAP } ;
                            DUP 4 ;
                            UNPAIR ;
                            UNPAIR ;
                            DIG 6 ;
                            CAR ;
                            CAR ;
                            DUP 5 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 365 ; FAILWITH } {} ;
                            SOME ;
                            DUP 5 ;
                            CDR ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            NONE (map string
                                      (pair (pair (pair (nat %claimed_amount) (timestamp %cliff))
                                                  (pair (timestamp %end) (pair (bool %revoked) (option %revokedAt timestamp))))
                                            (pair (pair (option %revokedBy address) (timestamp %start))
                                                  (pair (address %token_address) (pair (option %token_id nat) (nat %vesting_amount)))))) ;
                            DIG 4 ;
                            CAR ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            DUG 2 } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.schedules.contains(sp.sender)" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 297 ; FAILWITH } {} ;
                     ITER { CAR ;
                            DUP 5 ;
                            DIG 4 ;
                            DUP 3 ;
                            SENDER ;
                            PAIR %beneficiery %schedule_name ;
                            PAIR %in_param %in_storage ;
                            EXEC ;
                            DUP ;
                            GET 4 ;
                            DUG 4 ;
                            DUP ;
                            CAR ;
                            ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                            PUSH int 0 ;
                            ISNAT ;
                            IF_NONE { PUSH int 307 ; FAILWITH } { DROP } ;
                            DUP 5 ;
                            CAR ;
                            CAR ;
                            SENDER ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 3 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            CAR ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                            DIG 5 ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            SENDER ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 310 ; FAILWITH } {} ;
                            DUP ;
                            DUP 9 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 310 ; FAILWITH } {} ;
                            UNPAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP 11 ;
                            ADD ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            DUG 5 ;
                            DUP 9 ;
                            DIG 6 ;
                            DUP ;
                            DUP ;
                            DUG 8 ;
                            CAR ;
                            CAR ;
                            SENDER ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 6 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            GET 7 ;
                            DIG 8 ;
                            CAR ;
                            CAR ;
                            SENDER ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 7 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            GET 5 ;
                            PAIR %token_address %token_id ;
                            SENDER ;
                            PAIR %to_ ;
                            SELF_ADDRESS ;
                            DUP 5 ;
                            PAIR %amount %from_ ;
                            PAIR ;
                            PAIR %in_param %in_storage ;
                            EXEC ;
                            DUP ;
                            GET 4 ;
                            DUG 6 ;
                            DUP ;
                            CAR ;
                            ITER { DIG 5 ; SWAP ; CONS ; DUG 4 } ;
                            DROP 4 } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.schedules.contains(params)" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH int 297 ; FAILWITH } {} ;
                     ITER { CAR ;
                            DUP 5 ;
                            DIG 4 ;
                            DUP 3 ;
                            DUP 6 ;
                            PAIR %beneficiery %schedule_name ;
                            PAIR %in_param %in_storage ;
                            EXEC ;
                            DUP ;
                            GET 4 ;
                            DUG 4 ;
                            DUP ;
                            CAR ;
                            ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                            PUSH int 0 ;
                            ISNAT ;
                            IF_NONE { PUSH int 307 ; FAILWITH } { DROP } ;
                            DUP 5 ;
                            CAR ;
                            CAR ;
                            DUP 5 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 3 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            CAR ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                            DIG 5 ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 9 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 310 ; FAILWITH } {} ;
                            DUP ;
                            DUP 9 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 310 ; FAILWITH } {} ;
                            UNPAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP 11 ;
                            ADD ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            DUG 5 ;
                            DUP 9 ;
                            DIG 6 ;
                            DUP ;
                            DUP ;
                            DUG 8 ;
                            CAR ;
                            CAR ;
                            DUP 8 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 6 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            GET 7 ;
                            DIG 8 ;
                            CAR ;
                            CAR ;
                            DUP 9 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            DUP 7 ;
                            GET ;
                            IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                            GET 5 ;
                            PAIR %token_address %token_id ;
                            DUP 8 ;
                            PAIR %to_ ;
                            SELF_ADDRESS ;
                            DUP 5 ;
                            PAIR %amount %from_ ;
                            PAIR ;
                            PAIR %in_param %in_storage ;
                            EXEC ;
                            DUP ;
                            GET 4 ;
                            DUG 6 ;
                            DUP ;
                            CAR ;
                            ITER { DIG 5 ; SWAP ; CONS ; DUG 4 } ;
                            DROP 4 } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP } } }
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DUP ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     PAIR %beneficiery %schedule_name ;
                     PAIR %in_param %in_storage ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     DUP 3 ;
                     GET 4 ;
                     CONTRACT nat ;
                     IF_NONE { PUSH int 184 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     DUP 6 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 180 ; FAILWITH } {} ;
                     DIG 5 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 180 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     GET 3 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 183 ; FAILWITH } {} ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DUP ;
                     NIL operation ;
                     SWAP ;
                     ITER { SWAP ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            DUP 3 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 329 ; FAILWITH } {} ;
                            DUP 3 ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH int 329 ; FAILWITH } {} ;
                            GET 5 ;
                            CONTRACT %assertRole (pair (address %account) (nat %role)) ;
                            IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                            PUSH mutez 0 ;
                            PUSH nat 0 ;
                            SENDER ;
                            PAIR %account %role ;
                            TRANSFER_TOKENS ;
                            CONS ;
                            SWAP ;
                            DIG 3 ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 5 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 333 ; FAILWITH } {} ;
                            DUP ;
                            DUP 7 ;
                            CDR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 333 ; FAILWITH } {} ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            PUSH bool True ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 5 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 334 ; FAILWITH } {} ;
                            DUP ;
                            DUP 7 ;
                            CDR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 334 ; FAILWITH } {} ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            CAR ;
                            NOW ;
                            SOME ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            DUP ;
                            DUP 5 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 335 ; FAILWITH } {} ;
                            DUP ;
                            DIG 6 ;
                            CDR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 335 ; FAILWITH } {} ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            CDR ;
                            SENDER ;
                            SOME ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            PAIR ;
                            DUG 2 } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP } }
               { IF_LEFT
                   { DUP ;
                     NIL operation ;
                     SWAP ;
                     ITER { DUP 4 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 340 ; FAILWITH } {} ;
                            ITER { CAR ;
                                   DIG 2 ;
                                   DUP 5 ;
                                   CAR ;
                                   CAR ;
                                   DUP 4 ;
                                   GET ;
                                   IF_NONE { PUSH int 341 ; FAILWITH } {} ;
                                   DUP 3 ;
                                   GET ;
                                   IF_NONE { PUSH int 341 ; FAILWITH } {} ;
                                   GET 5 ;
                                   CONTRACT %assertRole (pair (address %account) (nat %role)) ;
                                   IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   PUSH nat 0 ;
                                   SENDER ;
                                   PAIR %account %role ;
                                   TRANSFER_TOKENS ;
                                   CONS ;
                                   DUG 2 ;
                                   DIG 4 ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   DUP ;
                                   DUP 6 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 345 ; FAILWITH } {} ;
                                   DUP ;
                                   DUP 7 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 345 ; FAILWITH } {} ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   SWAP ;
                                   CDR ;
                                   PUSH bool True ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   PAIR ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   DUP ;
                                   DUP 6 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 346 ; FAILWITH } {} ;
                                   DUP ;
                                   DUP 7 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 346 ; FAILWITH } {} ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   SWAP ;
                                   CAR ;
                                   NOW ;
                                   SOME ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   PAIR ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   DUP ;
                                   DUP 6 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 347 ; FAILWITH } {} ;
                                   DUP ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 347 ; FAILWITH } {} ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   CDR ;
                                   SENDER ;
                                   SOME ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   PAIR ;
                                   DUG 3 } ;
                            DROP } ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP }
                   { IF_LEFT
                       { DUP ;
                         NIL operation ;
                         SWAP ;
                         ITER { DUP 6 ;
                                DIG 4 ;
                                DUP 3 ;
                                PAIR %in_param %in_storage ;
                                EXEC ;
                                DUP ;
                                GET 4 ;
                                DUG 4 ;
                                DUP ;
                                CAR ;
                                ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                                DUP 9 ;
                                DIG 5 ;
                                DIG 3 ;
                                DUP ;
                                GET 7 ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                GET 5 ;
                                PAIR %token_address %token_id ;
                                SELF_ADDRESS ;
                                PAIR %to_ ;
                                DIG 4 ;
                                DUP ;
                                CAR ;
                                CDR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 6 ;
                                GET 8 ;
                                PAIR %amount %metadata ;
                                PAIR ;
                                PAIR %in_param %in_storage ;
                                EXEC ;
                                DUP ;
                                GET 4 ;
                                DUG 5 ;
                                DUP ;
                                CAR ;
                                ITER { DIG 4 ; SWAP ; CONS ; DUG 3 } ;
                                DROP 3 } ;
                         SWAP ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP }
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DUP ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         PAIR %beneficiery %schedule_name ;
                         PAIR %in_param %in_storage ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } ;
                         DIG 2 ;
                         GET 4 ;
                         CONTRACT nat ;
                         IF_NONE { PUSH int 169 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         GET 3 ;
                         TRANSFER_TOKENS ;
                         CONS } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
