{ parameter
    (or (or (or (or %admin (unit %confirm_admin) (address %set_admin))
                (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
            (or (pair %create_token
                   (pair %token (nat %token_id) (map %token_info string bytes))
                   (pair (address %owner) (pair (nat %amount) (timestamp %expiration))))
                (pair %expiration
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (timestamp %expiration)))))))
        (or (or (bool %pause) (address %set_cert_contract))
            (or (pair %token_metadata
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (map %token_info string bytes)))))
                (pair %total_supply
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (nat %total_supply)))))))) ;
  storage
    (pair (pair (pair %admin (address %admin) (option %pending_admin address))
                (pair %assets
                   (pair (pair (option %cert_contract address) (big_map %ledger (pair address nat) nat))
                         (pair (big_map %operators (pair address (pair address nat)) unit)
                               (big_map %token_expiration nat timestamp)))
                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                         (big_map %token_total_supply nat nat))))
          (pair (big_map %metadata string bytes) (bool %paused))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)
                       (lambda
                          (pair (option address) (list (pair (option address) (pair nat nat))))
                          (list (option address))))
                 (pair (lambda
                          address
                          (or (contract
                                 (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                              string))
                       bool))
           (list (contract
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)))
           { DUP ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             EMPTY_SET address ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CDR ;
                    SWAP ;
                    EXEC ;
                    SWAP ;
                    CAR ;
                    SWAP ;
                    ITER { IF_NONE {} { PUSH bool True ; SWAP ; UPDATE } } } ;
             SWAP ;
             DROP ;
             NIL (contract
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)) ;
             SWAP ;
             ITER { DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CDR ;
                    CAR ;
                    SWAP ;
                    EXEC ;
                    IF_LEFT
                      { CONS }
                      { DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        CDR ;
                        IF { SWAP ; DROP ; FAILWITH } { DROP } } } ;
             SWAP ;
             DROP } ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { DUP ; CDR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair (pair address nat) (big_map (pair address nat) nat)) nat)
                 (pair (pair address nat) (pair nat (big_map (pair address nat) nat))))
           (big_map (pair address nat) nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             CDR ;
             CAR ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; NONE nat ; SWAP ; UPDATE }
                { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { DROP ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { NONE address ; SENDER ; PAIR }
                                { PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     AND ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             DUP ;
                             CAR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   MEM ;
                                   NOT ;
                                   IF { DROP ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                      { DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        PAIR ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        SWAP ;
                                        EXEC ;
                                        SWAP ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             ITER { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           PAIR ;
                                           DUP ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CDR ;
                                           CAR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           MEM ;
                                           NOT ;
                                           IF { DROP 2 ; DIG 8 ; DUP ; DUG 9 ; FAILWITH }
                                              { DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                DIG 4 ;
                                                DUP ;
                                                DUG 5 ;
                                                CAR ;
                                                CDR ;
                                                CDR ;
                                                DIG 5 ;
                                                DUP ;
                                                DUG 6 ;
                                                CAR ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CAR ;
                                                PAIR ;
                                                SENDER ;
                                                DIG 5 ;
                                                DUP ;
                                                DUG 6 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                PAIR ;
                                                DUP ;
                                                CAR ;
                                                CDR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                GET ;
                                                IF_NONE
                                                  { DIG 12 ; DUP ; DUG 13 ; FAILWITH }
                                                  { NOW ;
                                                    SWAP ;
                                                    COMPARE ;
                                                    GT ;
                                                    IF { UNIT }
                                                       { SWAP ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         CDR ;
                                                         CDR ;
                                                         IF_NONE
                                                           { PUSH string "FA2_TOKEN_EXPIRED" ; FAILWITH }
                                                           { DIG 2 ;
                                                             DUP ;
                                                             DUG 3 ;
                                                             CAR ;
                                                             CDR ;
                                                             CAR ;
                                                             SWAP ;
                                                             COMPARE ;
                                                             EQ ;
                                                             IF { UNIT } { PUSH string "FA2_TOKEN_EXPIRED" ; FAILWITH } } } ;
                                                    DROP } ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                CAR ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CAR ;
                                                CDR ;
                                                DIG 2 ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DUP ;
                                                CAR ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CDR ;
                                                DUP ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP 3 ; UNIT }
                                                   { DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 3 ;
                                                     CDR ;
                                                     CAR ;
                                                     DIG 2 ;
                                                     PAIR ;
                                                     DIG 2 ;
                                                     PAIR ;
                                                     MEM ;
                                                     IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                                DROP ;
                                                SWAP ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DUP ;
                                                CDR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CDR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CAR ;
                                                CAR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                PAIR ;
                                                DIG 11 ;
                                                DUP ;
                                                DUG 12 ;
                                                SWAP ;
                                                EXEC ;
                                                DIG 3 ;
                                                CDR ;
                                                CAR ;
                                                SWAP ;
                                                SUB ;
                                                ISNAT ;
                                                IF_NONE
                                                  { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                                  { PUSH nat 0 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                       { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                DIG 2 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 6 ;
                                                DUP ;
                                                DUG 7 ;
                                                SWAP ;
                                                EXEC } } ;
                                    SWAP ;
                                    DROP } ;
                             SWAP ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 5 ;
                             DROP ;
                             SENDER ;
                             DIG 2 ;
                             MAP { DUP ;
                                   CDR ;
                                   MAP { DUP ;
                                         CDR ;
                                         CDR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         CAR ;
                                         SOME ;
                                         PAIR } ;
                                   SWAP ;
                                   CAR ;
                                   SOME ;
                                   PAIR } ;
                             PAIR ;
                             LAMBDA
                               address
                               (or (contract
                                      (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                                   string)
                               { CONTRACT %tokens_received
                                   (pair (list %batch
                                            (pair (option %from_ address)
                                                  (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                                         (address %operator)) ;
                                 IF_NONE
                                   { PUSH string "FA2_RECEIVER_HOOK_UNDEFINED" ;
                                     RIGHT
                                       (contract
                                          (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)) }
                                   { LEFT string } } ;
                             LAMBDA
                               (pair (option address) (list (pair (option address) (pair nat nat))))
                               (list (option address))
                               { CDR ; MAP { CAR } } ;
                             PAIR ;
                             PUSH unit Unit ;
                             LEFT unit ;
                             RIGHT unit ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             DIG 3 ;
                             CAR ;
                             CDR ;
                             IF_LEFT
                               { DROP 4 ;
                                 DIG 4 ;
                                 DROP ;
                                 NIL (contract
                                        (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)) }
                               { IF_LEFT
                                   { DROP ;
                                     PUSH bool False ;
                                     DIG 3 ;
                                     PAIR ;
                                     DUG 2 ;
                                     PAIR ;
                                     PAIR ;
                                     DIG 5 ;
                                     SWAP ;
                                     EXEC }
                                   { DROP ;
                                     PUSH bool True ;
                                     DIG 3 ;
                                     PAIR ;
                                     DUG 2 ;
                                     PAIR ;
                                     PAIR ;
                                     DIG 5 ;
                                     SWAP ;
                                     EXEC } } ;
                             MAP { PUSH mutez 0 ; DIG 2 ; DUP ; DUG 3 ; TRANSFER_TOKENS } ;
                             SWAP ;
                             DROP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             DIG 4 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR } }
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         PAIR ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                IF_LEFT {} {} ;
                                CAR ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                IF_LEFT
                                  { SWAP ;
                                    UNIT ;
                                    SOME ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    CDR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE }
                                  { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE } } ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { SWAP ; SOME ; SWAP ; UPDATE }
                       { DROP 4 ; PUSH string "FA2_DUP_TOKEN_ID" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { DIG 4 ; DUP ; DUG 5 ; FAILWITH } {} ;
                           SWAP ;
                           PAIR } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     SOME ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           SWAP ;
                           GET ;
                           IF_NONE { DIG 3 ; DUP ; DUG 4 ; FAILWITH } {} } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { DIG 4 ; DUP ; DUG 5 ; FAILWITH } {} ;
                           SWAP ;
                           PAIR } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } } } }
