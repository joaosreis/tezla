{ parameter
    (or (or (or (or %admin
                   (or (unit %confirm_admin) (list %pause (pair (nat %token_id) (bool %paused))))
                   (address %set_admin))
                (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
            (or (or %bender
                   (or (unit %confirm_bender_migration)
                       (list %distribute (pair (address %to_) (nat %amount))))
                   (address %migrate_bender))
                (or %dao
                   (or (or (unit %confirm_dao_migration) (contract %get_total_supply nat))
                       (or (list %lock (pair (address %from_) (pair (nat %proposal_id) (nat %amount))))
                           (address %migrate_dao)))
                   (list %unlock (pair (address %from_) (pair (nat %proposal_id) (nat %amount)))))))
        (or (or %swap (nat %freeze) (nat %unfreeze))
            (or %tokens
               (list %burn_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))
               (list %mint_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))))) ;
  storage
    (pair (pair (pair (pair %admin
                         (pair (address %admin) (big_map %paused nat unit))
                         (option %pending_admin address))
                      (pair %assets
                         (pair (pair (big_map %ledger (pair address nat) nat)
                                     (big_map %operators (pair (address %owner) (address %operator)) unit))
                               (pair (map %proposal_metadata string bytes)
                                     (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                         (big_map %total_supply nat nat)))
                (pair (pair %bender
                         (pair (nat %distributed) (nat %max_supply))
                         (pair %role (address %contract) (option %pending_contract address)))
                      (pair %dao (address %contract) (option %pending_contract address))))
          (big_map %metadata string bytes)) ;
  code { LAMBDA
           (pair (pair address (big_map nat unit)) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         PUSH nat 0 ;
         PUSH nat 1 ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair (pair (pair (pair address (big_map nat unit)) (option address))
                             (pair (pair (pair (big_map (pair address nat) nat) (big_map (pair address address) unit))
                                         (pair (map string bytes) (big_map nat (pair nat (map string bytes)))))
                                   (big_map nat nat)))
                       (pair (pair (pair nat nat) (pair address (option address))) (pair address (option address))))
                 (big_map string bytes))
           (pair (pair (pair (pair (pair address (big_map nat unit)) (option address))
                             (pair (pair (pair (big_map (pair address nat) nat) (big_map (pair address address) unit))
                                         (pair (map string bytes) (big_map nat (pair nat (map string bytes)))))
                                   (big_map nat nat)))
                       (pair (pair (pair nat nat) (pair address (option address))) (pair address (option address))))
                 (big_map string bytes))
           { DUP ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { DROP ; PUSH string "UNAUTHORIZED" ; FAILWITH } } ;
         LAMBDA
           (pair (pair (pair (pair (pair address (big_map nat unit)) (option address))
                             (pair (pair (pair (big_map (pair address nat) nat) (big_map (pair address address) unit))
                                         (pair (map string bytes) (big_map nat (pair nat (map string bytes)))))
                                   (big_map nat nat)))
                       (pair (pair (pair nat nat) (pair address (option address))) (pair address (option address))))
                 (big_map string bytes))
           (pair (pair (pair (pair (pair address (big_map nat unit)) (option address))
                             (pair (pair (pair (big_map (pair address nat) nat) (big_map (pair address address) unit))
                                         (pair (map string bytes) (big_map nat (pair nat (map string bytes)))))
                                   (big_map nat nat)))
                       (pair (pair (pair nat nat) (pair address (option address))) (pair address (option address))))
                 (big_map string bytes))
           { DUP ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { DROP ; PUSH string "UNAUTHORIZED" ; FAILWITH } } ;
         DIG 6 ;
         UNPAIR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF { DROP 8 ; PUSH string "FORBIDDEN_XTZ" ; FAILWITH }
            { IF_LEFT
                { IF_LEFT
                    { DIG 2 ;
                      DROP ;
                      DIG 2 ;
                      DROP ;
                      IF_LEFT
                        { DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          IF_LEFT
                            { IF_LEFT
                                { DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  DUP ;
                                  CDR ;
                                  IF_NONE
                                    { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                                    { SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                         { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                                  NIL operation ;
                                  PAIR }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DIG 4 ;
                                  SWAP ;
                                  EXEC ;
                                  DROP ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CDR ;
                                  SWAP ;
                                  ITER { DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         IF { UNIT ; DIG 2 ; CAR ; SWAP ; SOME ; SWAP ; UPDATE }
                                            { SWAP ; CAR ; NONE unit ; SWAP ; UPDATE } } ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  SWAP ;
                                  DIG 2 ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  NIL operation ;
                                  PAIR } }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              DIG 4 ;
                              SWAP ;
                              EXEC ;
                              DROP ;
                              SOME ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } ;
                          UNPAIR ;
                          DUP 3 ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR }
                        { DIG 5 ;
                          DROP ;
                          DUP ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          IF_LEFT
                            { IF_LEFT
                                { DROP 2 ; UNIT }
                                { SWAP ;
                                  CAR ;
                                  CDR ;
                                  SWAP ;
                                  ITER { CDR ;
                                         ITER { SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                SWAP ;
                                                CDR ;
                                                CAR ;
                                                MEM ;
                                                IF { PUSH string "TOKEN_PAUSED" ; FAILWITH } {} } } ;
                                  DROP ;
                                  UNIT } }
                            { DROP 2 ; UNIT } ;
                          DROP ;
                          IF_LEFT
                            { IF_LEFT
                                { DUP ;
                                  CAR ;
                                  MAP { DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DUP 7 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        EQ ;
                                        DUP 9 ;
                                        DUP 3 ;
                                        COMPARE ;
                                        EQ ;
                                        OR ;
                                        IF { SWAP ; DROP }
                                           { SWAP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             MEM ;
                                             IF {} { DROP ; PUSH unit Unit ; DUP 5 ; PAIR ; FAILWITH } } ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SWAP ;
                                        DUP 3 ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH nat 0 } {} ;
                                        SWAP ;
                                        PAIR } ;
                                  DIG 3 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  SWAP ;
                                  CDR ;
                                  PUSH mutez 0 ;
                                  DIG 2 ;
                                  TRANSFER_TOKENS ;
                                  SWAP ;
                                  NIL operation ;
                                  DIG 2 ;
                                  CONS ;
                                  PAIR }
                                { DIG 2 ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  ITER { DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         ITER { SWAP ;
                                                DUP ;
                                                DUP 4 ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                SENDER ;
                                                COMPARE ;
                                                EQ ;
                                                IF { SWAP ; DROP }
                                                   { DUP ;
                                                     SENDER ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { SWAP ; DROP }
                                                        { SENDER ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          PAIR ;
                                                          DIG 2 ;
                                                          CAR ;
                                                          CAR ;
                                                          CDR ;
                                                          CAR ;
                                                          CAR ;
                                                          CDR ;
                                                          SWAP ;
                                                          MEM ;
                                                          IF {}
                                                             { DROP ; PUSH unit Unit ; PUSH string "FA2_NOT_OPERATOR" ; PAIR ; FAILWITH } } } ;
                                                PUSH nat 0 ;
                                                DUP 4 ;
                                                CDR ;
                                                CDR ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP ; SWAP ; DROP }
                                                   { DUP 5 ;
                                                     DUP 4 ;
                                                     CDR ;
                                                     CAR ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { DUP 3 ; CDR ; CAR }
                                                        { SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          SENDER ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { DUP 3 ; CDR ; CAR }
                                                             { PUSH string "FROZEN_TOKEN_NOT_TRANSFERABLE" ; FAILWITH } } ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     PAIR ;
                                                     DIG 2 ;
                                                     DUP 5 ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     UNPAIR ;
                                                     DIG 3 ;
                                                     PAIR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     GET ;
                                                     IF_NONE { PUSH nat 0 } {} ;
                                                     DUP 4 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     SUB ;
                                                     ISNAT ;
                                                     IF_NONE
                                                       { SWAP ;
                                                         DROP ;
                                                         SWAP ;
                                                         DROP ;
                                                         SWAP ;
                                                         PAIR ;
                                                         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                         PAIR ;
                                                         FAILWITH }
                                                       { SWAP ;
                                                         DROP ;
                                                         DIG 3 ;
                                                         DROP ;
                                                         PUSH nat 0 ;
                                                         SWAP ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                            { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                                     SWAP ;
                                                     PAIR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     DIG 3 ;
                                                     CDR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     UNPAIR ;
                                                     DIG 3 ;
                                                     PAIR ;
                                                     DUG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     DUP 3 ;
                                                     GET ;
                                                     IF_NONE { PUSH nat 0 } {} ;
                                                     ADD ;
                                                     PUSH nat 0 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                        { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     CDR ;
                                                     DUP 4 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 5 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     CDR ;
                                                     DUP 6 ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 5 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR } } ;
                                         SWAP ;
                                         DROP } ;
                                  SWAP ;
                                  DROP ;
                                  NIL operation ;
                                  PAIR } }
                            { DIG 2 ;
                              DROP ;
                              DIG 2 ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              SWAP ;
                              ITER { IF_LEFT { UNIT ; SOME ; PAIR } { NONE unit ; PAIR } ;
                                     UNPAIR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     CDR ;
                                     DUP 6 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP } { DROP ; PUSH string "OPERATION_PROHIBITED" ; FAILWITH } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DUP 3 ;
                                          CDR ;
                                          DUP 4 ;
                                          CAR ;
                                          CDR ;
                                          DUP 5 ;
                                          CAR ;
                                          CAR ;
                                          CDR ;
                                          DIG 3 ;
                                          DUP 5 ;
                                          CDR ;
                                          CAR ;
                                          DIG 5 ;
                                          CAR ;
                                          PAIR ;
                                          UPDATE ;
                                          DIG 3 ;
                                          CAR ;
                                          CAR ;
                                          CAR ;
                                          PAIR ;
                                          PAIR ;
                                          PAIR }
                                        { DROP 3 ; PUSH string "FA2_NOT_OWNER" ; FAILWITH } } ;
                              DIG 2 ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } }
                    { DIG 7 ;
                      DROP ;
                      IF_LEFT
                        { DIG 3 ;
                          DROP ;
                          DIG 3 ;
                          DROP ;
                          DIG 3 ;
                          DROP ;
                          IF_LEFT
                            { IF_LEFT
                                { DROP ;
                                  SWAP ;
                                  DROP ;
                                  SWAP ;
                                  DROP ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  DUP 3 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  IF_NONE
                                    { PUSH string "NO_RUNNING_MIGRATION" ; FAILWITH }
                                    { SENDER ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      COMPARE ;
                                      EQ ;
                                      IF { NONE address ; SWAP ; PAIR }
                                         { DROP ; PUSH string "WRONG_MIGRATION" ; FAILWITH } } ;
                                  DUP 4 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 2 ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  NIL operation ;
                                  PAIR }
                                { SWAP ;
                                  DIG 2 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  PUSH nat 0 ;
                                  PAIR ;
                                  SWAP ;
                                  ITER { SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         DUP 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         DUP 7 ;
                                         PAIR ;
                                         DUP 5 ;
                                         CAR ;
                                         DUP 6 ;
                                         CDR ;
                                         DIG 2 ;
                                         UNPAIR ;
                                         DUP ;
                                         DUG 2 ;
                                         PAIR ;
                                         DIG 3 ;
                                         DUP 4 ;
                                         DIG 2 ;
                                         UNPAIR ;
                                         DIG 3 ;
                                         PAIR ;
                                         DUG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         DUP 3 ;
                                         GET ;
                                         IF_NONE { PUSH nat 0 } {} ;
                                         ADD ;
                                         PUSH nat 0 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         COMPARE ;
                                         EQ ;
                                         IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                            { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                                         DUP 4 ;
                                         DIG 3 ;
                                         DIG 4 ;
                                         DUP 5 ;
                                         GET ;
                                         IF_NONE { PUSH nat 0 } {} ;
                                         ADD ;
                                         SOME ;
                                         DIG 3 ;
                                         UPDATE ;
                                         DUP 4 ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 3 ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         DIG 2 ;
                                         CDR ;
                                         DIG 2 ;
                                         ADD ;
                                         PAIR } ;
                                  DIG 2 ;
                                  DROP ;
                                  UNPAIR ;
                                  DUP 3 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  ADD ;
                                  DUP 3 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  LE ;
                                  IF { DUP 3 ;
                                       CDR ;
                                       DUP 4 ;
                                       CAR ;
                                       CDR ;
                                       DIG 3 ;
                                       DUP 5 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       DIG 4 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       UNPAIR ;
                                       CDR ;
                                       DIG 5 ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       DIG 2 ;
                                       CAR ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       NIL operation ;
                                       PAIR }
                                     { DROP 3 ; PUSH string "RESERVE_DEPLETED" ; FAILWITH } } }
                            { DIG 3 ;
                              DROP ;
                              SWAP ;
                              DIG 2 ;
                              SWAP ;
                              EXEC ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              SOME ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } }
                        { DIG 2 ;
                          DROP ;
                          IF_LEFT
                            { IF_LEFT
                                { DIG 2 ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  IF_LEFT
                                    { DROP ;
                                      DUP ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      IF_NONE
                                        { PUSH string "NO_RUNNING_MIGRATION" ; FAILWITH }
                                        { SENDER ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { NONE address ; SWAP ; PAIR }
                                             { DROP ; PUSH string "WRONG_MIGRATION" ; FAILWITH } } ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      NIL operation ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      PUSH mutez 0 ;
                                      DIG 2 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      TRANSFER_TOKENS ;
                                      CONS ;
                                      PAIR } }
                                { IF_LEFT
                                    { SWAP ;
                                      DIG 2 ;
                                      SWAP ;
                                      EXEC ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      SWAP ;
                                      ITER { SWAP ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DUP 7 ;
                                             PAIR ;
                                             DUP 4 ;
                                             CAR ;
                                             DUP 5 ;
                                             CDR ;
                                             CDR ;
                                             DIG 2 ;
                                             UNPAIR ;
                                             DUP 5 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE
                                               { DUP 9 ; FAILWITH }
                                               { DUP 4 ;
                                                 SWAP ;
                                                 SUB ;
                                                 ISNAT ;
                                                 IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                             DUG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             PAIR ;
                                             DIG 4 ;
                                             DIG 4 ;
                                             DIG 2 ;
                                             UNPAIR ;
                                             DIG 3 ;
                                             PAIR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH nat 0 } {} ;
                                             DUP 4 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             SUB ;
                                             ISNAT ;
                                             IF_NONE
                                               { SWAP ;
                                                 DROP ;
                                                 SWAP ;
                                                 DROP ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                 PAIR ;
                                                 FAILWITH }
                                               { SWAP ;
                                                 DROP ;
                                                 DIG 3 ;
                                                 DROP ;
                                                 PUSH nat 0 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                    { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                             DUP 10 ;
                                             DUP 4 ;
                                             COMPARE ;
                                             NEQ ;
                                             DUP 10 ;
                                             DUP 5 ;
                                             COMPARE ;
                                             NEQ ;
                                             PUSH nat 0 ;
                                             DUP 5 ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             AND ;
                                             IF { SWAP ; DROP ; DUG 2 ; NONE nat ; SWAP ; UPDATE }
                                                { DIG 3 ; DIG 2 ; SOME ; DIG 3 ; UPDATE } ;
                                             SWAP ;
                                             DUP 4 ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DUP 4 ;
                                             CAR ;
                                             DIG 4 ;
                                             CDR ;
                                             CDR ;
                                             DIG 2 ;
                                             UNPAIR ;
                                             DUP ;
                                             DUG 2 ;
                                             PAIR ;
                                             DIG 3 ;
                                             DUP 4 ;
                                             DIG 2 ;
                                             UNPAIR ;
                                             DIG 3 ;
                                             PAIR ;
                                             DUG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             DUP 3 ;
                                             GET ;
                                             IF_NONE { PUSH nat 0 } {} ;
                                             ADD ;
                                             PUSH nat 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                                             DUP 4 ;
                                             DIG 3 ;
                                             DIG 4 ;
                                             DUP 5 ;
                                             GET ;
                                             IF_NONE { PUSH nat 0 } {} ;
                                             ADD ;
                                             SOME ;
                                             DIG 3 ;
                                             UPDATE ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 3 ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR } ;
                                      DIG 2 ;
                                      DROP ;
                                      DIG 2 ;
                                      DROP ;
                                      DIG 2 ;
                                      DROP ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR }
                                    { DIG 3 ;
                                      DROP ;
                                      DIG 3 ;
                                      DROP ;
                                      DIG 3 ;
                                      DROP ;
                                      SWAP ;
                                      DIG 2 ;
                                      SWAP ;
                                      EXEC ;
                                      DUP ;
                                      CDR ;
                                      DIG 2 ;
                                      SOME ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR } } }
                            { SWAP ;
                              DIG 2 ;
                              SWAP ;
                              EXEC ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              SWAP ;
                              ITER { SWAP ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DUP 4 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 4 ;
                                     CAR ;
                                     DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     DIG 2 ;
                                     UNPAIR ;
                                     DUP 5 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE
                                       { DUP 9 ; FAILWITH }
                                       { DUP 4 ;
                                         SWAP ;
                                         SUB ;
                                         ISNAT ;
                                         IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                     DUG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     PAIR ;
                                     DIG 4 ;
                                     DIG 4 ;
                                     DIG 2 ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     PAIR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } {} ;
                                     DUP 4 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE
                                       { SWAP ;
                                         DROP ;
                                         SWAP ;
                                         DROP ;
                                         SWAP ;
                                         PAIR ;
                                         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                         PAIR ;
                                         FAILWITH }
                                       { SWAP ;
                                         DROP ;
                                         DIG 3 ;
                                         DROP ;
                                         PUSH nat 0 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         COMPARE ;
                                         EQ ;
                                         IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                            { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                     DUP 10 ;
                                     DUP 4 ;
                                     COMPARE ;
                                     NEQ ;
                                     DUP 10 ;
                                     DUP 5 ;
                                     COMPARE ;
                                     NEQ ;
                                     PUSH nat 0 ;
                                     DUP 5 ;
                                     COMPARE ;
                                     EQ ;
                                     AND ;
                                     AND ;
                                     IF { SWAP ; DROP ; DUG 2 ; NONE nat ; SWAP ; UPDATE }
                                        { DIG 3 ; DIG 2 ; SOME ; DIG 3 ; UPDATE } ;
                                     SWAP ;
                                     DUP 7 ;
                                     PAIR ;
                                     DUP 4 ;
                                     CAR ;
                                     DIG 4 ;
                                     CDR ;
                                     CDR ;
                                     DIG 2 ;
                                     UNPAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     PAIR ;
                                     DIG 3 ;
                                     DUP 4 ;
                                     DIG 2 ;
                                     UNPAIR ;
                                     DIG 3 ;
                                     PAIR ;
                                     DUG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     DUP 3 ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } {} ;
                                     ADD ;
                                     PUSH nat 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                        { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                                     DUP 4 ;
                                     DIG 3 ;
                                     DIG 4 ;
                                     DUP 5 ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } {} ;
                                     ADD ;
                                     SOME ;
                                     DIG 3 ;
                                     UPDATE ;
                                     DUP 3 ;
                                     CAR ;
                                     CDR ;
                                     DIG 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DIG 3 ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR } ;
                              DIG 2 ;
                              DROP ;
                              DIG 2 ;
                              DROP ;
                              DIG 2 ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } } }
                { DIG 2 ;
                  DROP ;
                  DIG 2 ;
                  DROP ;
                  IF_LEFT
                    { DIG 5 ;
                      DROP ;
                      IF_LEFT
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 7 ;
                          PAIR ;
                          SENDER ;
                          DUP 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DIG 7 ; FAILWITH }
                            { DIG 8 ;
                              DROP ;
                              DUP 4 ;
                              SWAP ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                          DUG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          DIG 4 ;
                          DIG 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 3 ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          DUP 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE
                            { SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              PAIR ;
                              PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                              PAIR ;
                              FAILWITH }
                            { SWAP ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              EQ ;
                              IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                 { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                          DIG 7 ;
                          DUP 4 ;
                          COMPARE ;
                          NEQ ;
                          DUP 8 ;
                          DUP 5 ;
                          COMPARE ;
                          NEQ ;
                          PUSH nat 0 ;
                          DUP 5 ;
                          COMPARE ;
                          EQ ;
                          AND ;
                          AND ;
                          IF { SWAP ; DROP ; DUG 2 ; NONE nat ; SWAP ; UPDATE }
                             { DIG 3 ; DIG 2 ; SOME ; DIG 3 ; UPDATE } ;
                          SWAP ;
                          DIG 4 ;
                          PAIR ;
                          SENDER ;
                          DIG 3 ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP ;
                          DUG 2 ;
                          PAIR ;
                          DIG 3 ;
                          DUP 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 3 ;
                          PAIR ;
                          DUG 2 ;
                          DUP ;
                          DUG 3 ;
                          DUP 3 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          ADD ;
                          PUSH nat 0 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ; NONE nat ; SWAP ; UPDATE }
                             { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                          DUP 4 ;
                          DIG 3 ;
                          DIG 4 ;
                          DUP 5 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          ADD ;
                          SOME ;
                          DIG 3 ;
                          UPDATE ;
                          SWAP ;
                          DUP 3 ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP 5 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 6 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 6 ;
                          PAIR ;
                          SENDER ;
                          DUP 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DIG 7 ; FAILWITH }
                            { DIG 8 ;
                              DROP ;
                              DUP 4 ;
                              SWAP ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                          DUG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          DIG 4 ;
                          DIG 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 3 ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          DUP 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE
                            { SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              PAIR ;
                              PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                              PAIR ;
                              FAILWITH }
                            { SWAP ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              EQ ;
                              IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                 { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                          DUP 8 ;
                          DUP 4 ;
                          COMPARE ;
                          NEQ ;
                          DIG 7 ;
                          DUP 5 ;
                          COMPARE ;
                          NEQ ;
                          PUSH nat 0 ;
                          DUP 5 ;
                          COMPARE ;
                          EQ ;
                          AND ;
                          AND ;
                          IF { SWAP ; DROP ; DUG 2 ; NONE nat ; SWAP ; UPDATE }
                             { DIG 3 ; DIG 2 ; SOME ; DIG 3 ; UPDATE } ;
                          SWAP ;
                          DIG 4 ;
                          PAIR ;
                          SENDER ;
                          DIG 3 ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP ;
                          DUG 2 ;
                          PAIR ;
                          DIG 3 ;
                          DUP 4 ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 3 ;
                          PAIR ;
                          DUG 2 ;
                          DUP ;
                          DUG 3 ;
                          DUP 3 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          ADD ;
                          PUSH nat 0 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ; NONE nat ; SWAP ; UPDATE }
                             { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                          DUP 4 ;
                          DIG 3 ;
                          DIG 4 ;
                          DUP 5 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          ADD ;
                          SOME ;
                          DIG 3 ;
                          UPDATE ;
                          SWAP ;
                          DUP 3 ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP 5 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 6 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } }
                    { DIG 2 ;
                      DROP ;
                      DIG 2 ;
                      DROP ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      SWAP ;
                      EXEC ;
                      DROP ;
                      IF_LEFT
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          ITER { DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 DUP 6 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { DROP ; PUSH string "BAD_MINT_BURN" ; FAILWITH } ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 DIG 2 ;
                                 CDR ;
                                 CDR ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 DIG 3 ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH nat 0 } {} ;
                                 DUP 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE
                                   { SWAP ;
                                     DROP ;
                                     SWAP ;
                                     DROP ;
                                     SWAP ;
                                     PAIR ;
                                     PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                     PAIR ;
                                     FAILWITH }
                                   { SWAP ;
                                     DROP ;
                                     DIG 3 ;
                                     DROP ;
                                     PUSH nat 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                        { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                          DIG 3 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          ITER { DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 DUP 6 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { DROP ; PUSH string "BAD_MINT_BURN" ; FAILWITH } ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 DIG 2 ;
                                 CDR ;
                                 CDR ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 DIG 3 ;
                                 PAIR ;
                                 DUG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DUP 3 ;
                                 GET ;
                                 IF_NONE { PUSH nat 0 } {} ;
                                 ADD ;
                                 PUSH nat 0 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                    { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                          DIG 3 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } } } } }
