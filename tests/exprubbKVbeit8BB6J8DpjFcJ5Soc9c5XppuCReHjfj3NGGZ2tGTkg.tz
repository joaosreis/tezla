{ parameter
    (or (or (or (or (or (pair %add_document string bytes)
                        (pair %add_token
                           (pair (pair (nat %decimals) (map %extras string string))
                                 (pair (string %name) (string %symbol)))
                           (nat %token_id)))
                    (or (pair %balance_of
                           (list %requests (pair (address %owner) (nat %token_id)))
                           (contract %callback
                              (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                        (list %edit_whitelist (or (address %add) (address %remove)))))
                (or (or (contract %get_owner address) (contract %get_whitelist_admins (set address)))
                    (or (contract %get_whitelisters (set address)) (pair %issue nat nat))))
            (or (or (or (list %modify_whitelist_admins (or (address %add) (address %remove)))
                        (list %modify_whitelisters (or (address %add) (address %remove))))
                    (or (pair %reassign address (option (list nat))) (pair %redeem nat nat)))
                (or (or (bool %set_pause) (contract %token_metadata_registry address))
                    (or (list %transfer
                           (pair (address %from_)
                                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                        (list %update_operators
                           (or (pair %add_operator (address %owner) (address %operator))
                               (pair %remove_operator (address %owner) (address %operator))))))))
        (address %update_owner)) ;
  storage
    (pair (pair (pair (map %document_storage string (list bytes))
                      (big_map %ledger address (pair (set %allowances address) (map %balances nat nat))))
                (pair (address %owner) (bool %paused)))
          (pair (pair (big_map %token_metadata
                         nat
                         (pair (pair (pair (nat %decimals) (map %extras string string))
                                     (pair (string %name) (string %symbol)))
                               (nat %token_id)))
                      (big_map %whitelist address unit))
                (pair (set %whitelist_admins address) (set %whitelisters address)))) ;
  code { LAMBDA
           (pair (set address) (or address address))
           (set address)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             IF_LEFT
               { PUSH bool True ; SWAP ; UPDATE }
               { PUSH bool False ; SWAP ; UPDATE } } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                             (pair address bool))
                       (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                   (big_map address unit))
                             (pair (set address) (set address)))))
           (pair (set address) (map nat nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { EMPTY_MAP nat nat ; EMPTY_SET address ; PAIR } {} } ;
         LAMBDA
           (pair (pair nat address)
                 (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                             (pair address bool))
                       (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                   (big_map address unit))
                             (pair (set address) (set address)))))
           nat
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } ;
             PUSH nat 0 ;
             SWAP ;
             DIG 3 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             GET ;
             IF_NONE { DROP } { CDR ; SWAP ; GET ; IF_NONE {} { SWAP ; DROP } } } ;
         DIG 3 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "This contract does not accept tezi deposits" ; FAILWITH }
            {} ;
         IF_LEFT
           { IF_LEFT
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DIG 6 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             GET ;
                             IF_NONE { NIL bytes ; DIG 6 ; CONS } { DIG 6 ; CONS } ;
                             DIG 5 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE {} { DROP ; PUSH string "TOKEN_ALREADY_EXISTS" ; FAILWITH } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DIG 4 ;
                             DIG 4 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { IF_LEFT
                           { DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             NIL (pair (pair address nat) nat) ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             ITER { SWAP ;
                                    DUP ;
                                    CDR ;
                                    DUP ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CAR ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    CDR ;
                                    PAIR ;
                                    PAIR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 3 ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    DIG 2 ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 3 ;
                                    CDR ;
                                    PAIR ;
                                    CONS ;
                                    PAIR } ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             CAR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             CAR ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             SENDER ;
                             MEM ;
                             NOT ;
                             IF { PUSH string "CALLER_NOT_WHITELISTER" ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             ITER { IF_LEFT
                                      { SWAP ; PUSH unit Unit ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                                      { NONE unit ; SWAP ; UPDATE } } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { PUSH mutez 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { PUSH mutez 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR } }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             PUSH nat 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH string "AMOUNT_IS_ZERO" ; FAILWITH } {} ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             SENDER ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             GET ;
                             IF_NONE { DIG 3 } { DIG 4 ; ADD } ;
                             DIG 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             ITER { SWAP ; PAIR ; DIG 3 ; DUP ; DUG 4 ; SWAP ; EXEC } ;
                             DIG 3 ;
                             DROP ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             MEM ;
                             NOT ;
                             IF { PUSH string "CALLER_NOT_WL_ADMIN" ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             ITER { SWAP ; PAIR ; DIG 2 ; DUP ; DUG 3 ; SWAP ; EXEC } ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { DIG 4 ;
                         DROP ;
                         IF_LEFT
                           { DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             DIG 4 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             PAIR ;
                             PAIR ;
                             LAMBDA
                               (pair (pair (pair address
                                                 (lambda
                                                    (pair (pair nat address)
                                                          (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                                      (pair address bool))
                                                                (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                                            (big_map address unit))
                                                                      (pair (set address) (set address)))))
                                                    nat))
                                           (lambda
                                              (pair address
                                                    (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                                (pair address bool))
                                                          (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                                      (big_map address unit))
                                                                (pair (set address) (set address)))))
                                              (pair (set address) (map nat nat))))
                                     (pair (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                       (pair address bool))
                                                 (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                             (big_map address unit))
                                                       (pair (set address) (set address))))
                                           nat))
                               (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                           (pair address bool))
                                     (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                 (big_map address unit))
                                           (pair (set address) (set address))))
                               { DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DIG 3 ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 PAIR ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 SWAP ;
                                 EXEC ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 5 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CDR ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 CDR ;
                                 PUSH nat 0 ;
                                 DIG 8 ;
                                 DUP ;
                                 DUG 9 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 DIG 5 ;
                                 CAR ;
                                 PAIR ;
                                 DIG 7 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 DIG 4 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUP ;
                                 SENDER ;
                                 PAIR ;
                                 DIG 4 ;
                                 SWAP ;
                                 EXEC ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 GET ;
                                 IF_NONE { DIG 3 } { DIG 4 ; ADD } ;
                                 DIG 4 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 CAR ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 SOME ;
                                 SENDER ;
                                 UPDATE ;
                                 DIG 3 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR } ;
                             SWAP ;
                             APPLY ;
                             DIG 2 ;
                             IF_NONE
                               { DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIG 2 ;
                                 PAIR ;
                                 DIG 3 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 2 ;
                                 SWAP ;
                                 CDR ;
                                 ITER { CAR ; SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
                                 SWAP ;
                                 DROP }
                               { DIG 2 ;
                                 DROP ;
                                 DIG 3 ;
                                 DROP ;
                                 DIG 2 ;
                                 SWAP ;
                                 ITER { SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
                                 SWAP ;
                                 DROP } ;
                             NIL operation ;
                             PAIR }
                           { DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             PUSH nat 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH string "AMOUNT_IS_ZERO" ; FAILWITH } {} ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             SENDER ;
                             PAIR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             GET ;
                             IF_NONE { DIG 2 ; PUSH nat 0 ; SUB } { DIG 3 ; SWAP ; SUB } ;
                             ISNAT ;
                             IF_NONE
                               { SWAP ; DROP ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 SWAP ;
                                 DIG 3 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 CAR ;
                                 PAIR } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { PUSH mutez 0 ;
                             SELF ;
                             ADDRESS ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR } }
                       { IF_LEFT
                           { ITER { DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    CDR ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           DUP ;
                                           SENDER ;
                                           COMPARE ;
                                           NEQ ;
                                           IF { SWAP ;
                                                CAR ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                GET ;
                                                IF_NONE { PUSH string "NoAccount" ; FAILWITH } {} ;
                                                CAR ;
                                                SENDER ;
                                                MEM ;
                                                IF { PUSH unit Unit } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } }
                                              { DROP 2 ; PUSH unit Unit } ;
                                           DROP ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CAR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           DIG 4 ;
                                           CDR ;
                                           CDR ;
                                           PAIR ;
                                           PAIR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           PAIR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DIG 2 ;
                                           CDR ;
                                           DUP ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           IF { PUSH string "TRANSFERS_PAUSED" ; FAILWITH } {} ;
                                           DUP ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           DIG 2 ;
                                           GET ;
                                           IF_NONE { PUSH string "SENDER_NOT_WHITELISTED" ; FAILWITH } { DROP } ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           SWAP ;
                                           GET ;
                                           IF_NONE { PUSH string "RECEIVER_NOT_WHITELISTED" ; FAILWITH } { DROP } ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           PAIR ;
                                           PAIR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           SWAP ;
                                           EXEC ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           CAR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           COMPARE ;
                                           LT ;
                                           IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           PAIR ;
                                           DIG 6 ;
                                           DUP ;
                                           DUG 7 ;
                                           SWAP ;
                                           EXEC ;
                                           DUP ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           CAR ;
                                           DIG 3 ;
                                           SUB ;
                                           ABS ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CDR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           SWAP ;
                                           CAR ;
                                           PAIR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CDR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CAR ;
                                           CDR ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           DIG 5 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           DUP ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           CDR ;
                                           PAIR ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           SWAP ;
                                           EXEC ;
                                           DUP ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CDR ;
                                           GET ;
                                           IF_NONE
                                             { DIG 3 ; DUP ; DUG 4 ; CAR ; CAR }
                                             { DIG 4 ; DUP ; DUG 5 ; CAR ; CAR ; ADD } ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CDR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           SWAP ;
                                           CAR ;
                                           PAIR ;
                                           DIG 3 ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           CDR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DIG 4 ;
                                           DIG 6 ;
                                           CAR ;
                                           CDR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           DIG 4 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR } ;
                                    CAR } ;
                             SWAP ;
                             DROP ;
                             SWAP ;
                             DROP ;
                             NIL operation ;
                             PAIR }
                           { DIG 2 ;
                             DROP ;
                             ITER { SWAP ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    LAMBDA
                                      (pair (lambda
                                               (pair address
                                                     (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                                 (pair address bool))
                                                           (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                                       (big_map address unit))
                                                                 (pair (set address) (set address)))))
                                               (pair (set address) (map nat nat)))
                                            (pair (pair (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                                    (pair address bool))
                                                              (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                                          (big_map address unit))
                                                                    (pair (set address) (set address))))
                                                        (pair address address))
                                                  bool))
                                      (pair (pair (pair (map string (list bytes)) (big_map address (pair (set address) (map nat nat))))
                                                  (pair address bool))
                                            (pair (pair (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))
                                                        (big_map address unit))
                                                  (pair (set address) (set address))))
                                      { DUP ;
                                        CDR ;
                                        SWAP ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        CAR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        DIG 2 ;
                                        CDR ;
                                        PAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        SWAP ;
                                        DROP ;
                                        SENDER ;
                                        COMPARE ;
                                        NEQ ;
                                        IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        PAIR ;
                                        DIG 4 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP ;
                                        CAR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        CDR ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        CDR ;
                                        DIG 7 ;
                                        IF { DIG 4 ; DIG 5 ; DUP ; DUG 6 ; CAR ; PUSH bool True ; SWAP ; UPDATE }
                                           { DIG 4 ; DIG 5 ; DUP ; DUG 6 ; CAR ; PUSH bool False ; SWAP ; UPDATE } ;
                                        PAIR ;
                                        DIG 4 ;
                                        CDR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR } ;
                                    SWAP ;
                                    APPLY ;
                                    DIG 2 ;
                                    IF_LEFT { LEFT (pair address address) } { RIGHT (pair address address) } ;
                                    IF_LEFT
                                      { PUSH bool True ; SWAP ; DIG 3 ; PAIR ; PAIR ; EXEC }
                                      { PUSH bool False ; SWAP ; DIG 3 ; PAIR ; PAIR ; EXEC } } ;
                             SWAP ;
                             DROP ;
                             NIL operation ;
                             PAIR } } } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "CALLER_NOT_OWNER" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }
