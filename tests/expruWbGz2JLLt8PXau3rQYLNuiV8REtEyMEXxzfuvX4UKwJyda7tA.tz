{ parameter
    (or (or (or (or (nat %bid) (nat %cancel))
                (or (pair %configure
                       (nat %max_time)
                       (pair (nat %min_time)
                             (pair (nat %ext_time) (pair (mutez %min_step) (nat %max_seller_auctions)))))
                    (unit %confirm_admin)))
            (or (or (pair %create
                       (mutez %bid_step)
                       (pair (nat %duration)
                             (pair (address %kt) (pair (nat %token_id) (pair (nat %win_percent) (bool %wait))))))
                    (bool %pause))
                (or (nat %resolve) (option %set_admin address))))
        (pair %set_ban (pair address nat) bool)) ;
  storage
    (pair (pair (pair (pair (address %admin)
                            (big_map %auctions
                               nat
                               (pair (address %bidder)
                                     (pair (nat %bid_count)
                                           (pair (mutez %bid_step)
                                                 (pair (timestamp %end_time)
                                                       (pair (int %duration)
                                                             (pair (address %kt) (pair (address %seller) (pair (nat %token_id) (nat %win_percent)))))))))))
                      (pair (big_map %banned (pair address nat) unit) (big_map %by_seller address (set nat))))
                (pair (pair (pair %config
                               (nat %max_time)
                               (pair (nat %min_time)
                                     (pair (nat %ext_time) (pair (mutez %min_step) (nat %max_seller_auctions)))))
                            (address %frontend))
                      (pair (nat %next_id) (bool %paused))))
          (option %pending_admin address)) ;
  code { PUSH nat 600 ;
         NIL operation ;
         LAMBDA
           (pair (pair (pair address nat) address) address)
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DUP ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "NOT_FA2_CONTRACT" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             NIL (pair address (pair nat nat)) ;
             PUSH nat 1 ;
             DIG 5 ;
             CDR ;
             PAIR ;
             DIG 6 ;
             PAIR ;
             CONS ;
             DIG 4 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair (pair mutez address) address)
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CONTRACT %on_sale_end address ;
             IF_NONE { PUSH string "NOT_CONTRACT" ; FAILWITH } {} ;
             SWAP ;
             DIG 2 ;
             TRANSFER_TOKENS } ;
         DIG 4 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH string "BID_REJECTED" ;
                         SOURCE ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 13 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         PUSH timestamp 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ; GET 9 ; NOW ; ADD ; UPDATE 7 } {} ;
                         PUSH string "AUCTION_ENDED" ;
                         NOW ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "SAME_BIDDER" ;
                         SENDER ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "WRONG_BID" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         AMOUNT ;
                         COMPARE ;
                         NEQ ;
                         IF { FAILWITH } { DROP } ;
                         PUSH nat 1 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         ADD ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         INT ;
                         PUSH int 2 ;
                         MUL ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 9 ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         PUSH int 2 ;
                         DIG 4 ;
                         GET 9 ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         NOW ;
                         ADD ;
                         ADD ;
                         UPDATE 7 ;
                         SENDER ;
                         UPDATE 1 ;
                         SWAP ;
                         UPDATE 3 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         GET 5 ;
                         INT ;
                         NOW ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         SUB ;
                         COMPARE ;
                         LT ;
                         IF { DUP ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              GET 5 ;
                              INT ;
                              DIG 2 ;
                              GET 7 ;
                              ADD ;
                              UPDATE 7 }
                            {} ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH string "AUCTION_IS_STARTED" ;
                         PUSH nat 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "NOT_A_SELLER" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 13 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { FAILWITH } { DROP } ;
                         DIG 2 ;
                         SENDER ;
                         DIG 3 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE { EMPTY_SET nat } {} ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         PUSH bool False ;
                         SWAP ;
                         UPDATE ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         NONE (pair address
                                    (pair nat
                                          (pair mutez (pair timestamp (pair int (pair address (pair address (pair nat nat)))))))) ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         SENDER ;
                         SELF_ADDRESS ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 15 ;
                         DIG 5 ;
                         GET 11 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         CONS ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "MAX_TIME" ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "MIN_TIME" ;
                         PUSH nat 2 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         MUL ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 3 ;
                         COMPARE ;
                         LT ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "EXT_TIME" ;
                         DIG 4 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "MAX_AUCTIONS" ;
                         PUSH nat 100 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 8 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "ZERO_BID_STEP" ;
                         PUSH mutez 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         COMPARE ;
                         EQ ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NOT_PENDING_ADMIN" ; FAILWITH }
                           { DUP ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH }
                                { NONE address ;
                                  { DIP 2 { DUP } ; DIG 3 } ;
                                  CAR ;
                                  CDR ;
                                  { DIP 3 { DUP } ; DIG 4 } ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  DIG 4 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  DIG 4 ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR } } ;
                         SWAP ;
                         PAIR } } }
               { DIG 5 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "TOKEN_IS_BANNED" ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PUSH nat 0 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 5 ;
                         PAIR ;
                         MEM ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 7 ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 5 ;
                         PAIR ;
                         MEM ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE { EMPTY_SET nat } {} ;
                         PUSH string "TOO_MANY_AUCTIONS_BY_SELLER" ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         GET 8 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SIZE ;
                         COMPARE ;
                         GE ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "BID_STEP_TOO_LOW" ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         GET 7 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "BAD_DURATION" ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 3 ;
                         COMPARE ;
                         LT ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "BAD_DURATION" ;
                         PUSH nat 100 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 9 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SENDER ;
                         PUSH nat 0 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 10 ;
                         IF { PUSH timestamp 0 }
                            { { DIP 4 { DUP } ; DIG 5 } ; GET 3 ; INT ; NOW ; ADD } ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         GET 3 ;
                         INT ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         GET 5 ;
                         SENDER ;
                         { DIP 8 { DUP } ; DIG 9 } ;
                         GET 7 ;
                         DIG 9 ;
                         GET 9 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PUSH bool True ;
                         SWAP ;
                         UPDATE ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         SELF_ADDRESS ;
                         SENDER ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 15 ;
                         DIG 5 ;
                         GET 11 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH string "AUCTION_NOT_ENDED" ;
                         PUSH timestamp 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         COMPARE ;
                         EQ ;
                         NOW ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 7 ;
                         COMPARE ;
                         GE ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "NO_BIDS" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 13 ;
                         COMPARE ;
                         EQ ;
                         IF { FAILWITH } { DROP } ;
                         DUP ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         MUL ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 16 ;
                         PUSH nat 100 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         MUL ;
                         PUSH mutez 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP ;
                              NIL operation ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 13 ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              SELF_ADDRESS ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 15 ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              GET 11 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS }
                            { NIL operation ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              PAIR ;
                              PAIR ;
                              { DIP 7 { DUP } ; DIG 8 } ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 13 ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DIG 4 ;
                              SUB ;
                              PAIR ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              SELF_ADDRESS ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 15 ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              GET 11 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS } ;
                         DIG 3 ;
                         DIG 2 ;
                         GET 13 ;
                         DIG 3 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE { EMPTY_SET nat } {} ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         PUSH bool False ;
                         SWAP ;
                         UPDATE ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         NONE (pair address
                                    (pair nat
                                          (pair mutez (pair timestamp (pair int (pair address (pair address (pair nat nat)))))))) ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 5 ;
             DROP 3 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             SWAP ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CAR ;
                  CDR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  { DIP 4 { DUP } ; DIG 5 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PUSH unit Unit ;
                  DIG 5 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CAR ;
                  CDR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  { DIP 4 { DUP } ; DIG 5 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  DIG 4 ;
                  NONE unit ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR } ;
             SWAP ;
             PAIR } } }
