{ storage
    (pair (address %owner)
          (pair (mutez %fee)
                (map %gem
                   string
                   (pair address
                         (pair mutez
                               (pair string (pair (option string) (pair (option string) (pair (option string) string))))))))) ;
  parameter
    (or (pair %get_creator_gems (address %get_creator_assets_p1) (contract (list string)))
        (or (pair %create_gem
               (string %create_gem_p1)
               (pair (string %create_gem_p2)
                     (pair (string %create_gem_p3)
                           (pair (option %create_gem_p4 string)
                                 (pair (option %create_gem_p5 string) (option %create_gem_p6 string))))))
            (or (string %destroy_gem) (or (address %change_owner) (unit %claim_balance))))) ;
  code { NIL operation ;
         DIG 1 ;
         UNPAIR ;
         DIP { UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { UNPAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PUSH mutez 0 ;
             NIL string ;
             NIL string ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             ITER { UNPAIR ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { DIG 2 ; DUP ; DUG 3 ; DIG 1 ; DUP ; DUG 2 ; CONS }
                       { DIG 2 ; DUP ; DUG 3 } ;
                    DIP { DIG 2 ; DROP } ;
                    DUG 2 ;
                    DROP 2 } ;
             ITER { DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CONS ;
                    DIP { DIG 1 ; DROP } ;
                    DUG 1 ;
                    DROP } ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DIG 5 ; DROP } ;
             DUG 5 ;
             DROP 2 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: mint_asset_c1" ; FAILWITH } {} ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 MEM ;
                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                    { DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PAIR ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      AMOUNT ;
                      SUB ;
                      PAIR ;
                      SENDER ;
                      PAIR ;
                      SOME ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      UPDATE ;
                      DIP { DIG 6 ; DROP } ;
                      DUG 6 } ;
                 DROP 6 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     NONE (pair address
                                (pair mutez
                                      (pair string (pair (option string) (pair (option string) (pair (option string) string)))))) ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     UPDATE ;
                     DIP { DIG 3 ; DROP } ;
                     DUG 3 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP { DIG 6 ; DROP } ;
                     DUG 6 ;
                     DROP 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                         DUP ;
                         DIP { DIG 3 ; DROP } ;
                         DUG 3 ;
                         DROP ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { DROP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                         BALANCE ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DIG 3 ; DROP } ;
                         DUG 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR } } } } } }
