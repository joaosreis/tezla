{ parameter
    (or (unit %default)
        (pair %mainParameter
           (pair nat (or (pair nat (contract nat)) (pair nat (list key))))
           (list (option signature)))) ;
  storage (pair nat (pair nat (list key))) ;
  code { CAST (pair (or unit
                        (pair (pair nat (or (pair nat (contract nat)) (pair nat (list key)))) (list (option signature))))
                    (pair nat (pair nat (list key)))) ;
         DUP ;
         CAR ;
         DIP { CDR } ;
         IF_LEFT
           { DROP ; NIL operation ; PAIR }
           { PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string
                       "Some tokens were sent to this contract outside of the default entry point." ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DIP { SWAP } ;
             DIP { DUP ;
                   CAR ;
                   DIP { CDR } ;
                   DUP ;
                   SELF ;
                   ADDRESS ;
                   CHAIN_ID ;
                   PAIR ;
                   PAIR ;
                   PACK ;
                   DIP { DUP ; CAR ; DIP { CDR } ; DIP { SWAP } } ;
                   SWAP } ;
             DUP ;
             CAR ;
             DIP { CDR } ;
             DIP { SWAP } ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "Counters do not match." ; FAILWITH } ;
             DIP { SWAP } ;
             DUP ;
             CAR ;
             DIP { CDR } ;
             DIP { PUSH nat 0 ;
                   SWAP ;
                   ITER { DIP { SWAP } ;
                          SWAP ;
                          IF_CONS
                            { IF_NONE
                                { SWAP ; DROP }
                                { SWAP ;
                                  DIP { SWAP ;
                                        DIP { DIP { DIP { DUP } ; SWAP } } ;
                                        DIP 2 { DUP } ;
                                        DIG 2 ;
                                        DIP { CHECK_SIGNATURE } ;
                                        SWAP ;
                                        IF { DROP } { FAILWITH } ;
                                        PUSH nat 1 ;
                                        ADD } } }
                            { FAILWITH } ;
                          SWAP } } ;
             COMPARE ;
             LE ;
             IF {} { PUSH string "Quorum not present" ; FAILWITH } ;
             IF_CONS { FAILWITH } {} ;
             DROP ;
             DIP { DUP ; CAR ; DIP { CDR } ; PUSH nat 1 ; ADD ; PAIR } ;
             IF_LEFT
               { SWAP ;
                 DIP { DUP ;
                       CAR ;
                       DIP { CDR } ;
                       DIP { DIP { NIL operation } ; PUSH mutez 0 } ;
                       TRANSFER_TOKENS ;
                       CONS } ;
                 SWAP }
               { DIP { CAR } ; SWAP ; PAIR ; NIL operation } ;
             PAIR } } }
