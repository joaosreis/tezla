{ parameter (or (int %add_asset) (int %remove_asset)) ;
  storage (map int (pair (int %id) (string %v))) ;
  code { DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CDR ;
             DIP { DUP ; CAR ; PUSH string "mystr" ; SWAP ; PAIR } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIP 4 { DUP } ;
             DIG 4 ;
             DIP 3 { DUP } ;
             DIG 3 ;
             DIP { DIP 4 { DUP } ; DIG 4 ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
             UPDATE ;
             DIP { DROP 7 } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 3 } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP { DUP } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP { DUP ; NONE (pair (int %id) (string %v)) } ;
             UPDATE ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             SWAP ;
             DIP { DROP 4 } ;
             DUP ;
             NIL int ;
             SWAP ;
             DIP { DUP } ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    CAR ;
                    DIP { DUP ; CAR } ;
                    CONS ;
                    DIP { DROP } } ;
             DUP ;
             NIL int ;
             SWAP ;
             ITER { SWAP ; PAIR ; DUP ; CDR ; DIP { DUP ; CAR } ; CONS ; DIP { DROP } } ;
             DUP ;
             DIP { DROP 3 ; DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             PUSH bool False ;
             SWAP ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIP { DUP ; CDR ; DIP { DIP { DUP } ; SWAP ; CDR } ; COMPARE ; EQ } ;
                    OR ;
                    DIP { DROP } } ;
             DIP { DROP } ;
             IF { PUSH string "KO" ; FAILWITH } { PUSH string "OK" ; FAILWITH } } ;
         DIP { DROP 2 } } }
