{ parameter
    (or (or (or (or (lambda %admin_update
                       (pair (pair (pair (address %owner)
                                         (big_map %records
                                            bytes
                                            (pair (pair (pair (option %address address)
                                                              (map %data
                                                                 string
                                                                 (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                                                         (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                                                     (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                                                        (pair (nat %level) (address %owner)))
                                                  (pair (pair (option %ttl nat) (option %validator nat)) (option %validity bytes)))))
                                   (pair (big_map %reverse_records
                                            address
                                            (pair (pair (option %name bytes) (address %owner)) (option %ttl nat)))
                                         (map %validators nat address)))
                             (big_map %validity_map bytes timestamp))
                       (pair (list operation)
                             (pair (pair (pair (address %owner)
                                               (big_map %records
                                                  bytes
                                                  (pair (pair (pair (option %address address)
                                                                    (map %data
                                                                       string
                                                                       (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                                                               (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                                                           (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                                                              (pair (nat %level) (address %owner)))
                                                        (pair (pair (option %ttl nat) (option %validator nat)) (option %validity bytes)))))
                                         (pair (big_map %reverse_records
                                                  address
                                                  (pair (pair (option %name bytes) (address %owner)) (option %ttl nat)))
                                               (map %validators nat address)))
                                   (big_map %validity_map bytes timestamp))))
                    (pair %check_address (address %addr) (bytes %name)))
                (or (pair %claim_reverse_record
                       (pair (option %name bytes) (address %owner))
                       (option %ttl nat))
                    (pair %resolve (contract %callback (option address)) (bytes %name))))
            (or (or (pair %reverse_resolve (address %addr) (contract %callback (option bytes)))
                    (pair %set_child_record
                       (pair (pair (option %address address)
                                   (map %data
                                      string
                                      (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                              (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                          (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                             (pair (bytes %label) (address %owner)))
                       (pair (pair (bytes %parent) (option %ttl nat)) (option %validity timestamp))))
                (or (pair %set_validity
                       (pair (bytes %label) (bytes %parent))
                       (option %validity timestamp))
                    (pair %update_record
                       (pair (pair (option %address address)
                                   (map %data
                                      string
                                      (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                              (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                          (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                             (pair (bytes %name) (address %owner)))
                       (option %ttl nat)))))
        (pair %update_reverse_record
           (pair (address %addr) (option %name bytes))
           (pair (address %owner) (option %ttl nat)))) ;
  storage
    (pair (pair (pair (address %owner)
                      (big_map %records
                         bytes
                         (pair (pair (pair (option %address address)
                                           (map %data
                                              string
                                              (or (or (or (or (address %address) (bool %bool)) (or (bytes %bytes) (int %int)))
                                                      (or (or (key %key) (key_hash %key_hash)) (or (nat %nat) (signature %signature))))
                                                  (or (or (string %string) (mutez %tez)) (timestamp %timestamp)))))
                                     (pair (nat %level) (address %owner)))
                               (pair (pair (option %ttl nat) (option %validator nat)) (option %validity bytes)))))
                (pair (big_map %reverse_records
                         address
                         (pair (pair (option %name bytes) (address %owner)) (option %ttl nat)))
                      (map %validators nat address)))
          (big_map %validity_map bytes timestamp)) ;
  code { LAMBDA
           unit
           unit
           { PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "AMOUNT_NOT_ZERO" ; FAILWITH } { PUSH unit Unit } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair bytes
                 (pair (pair (pair address
                                   (big_map
                                      bytes
                                      (pair (pair (pair (option address)
                                                        (map string
                                                             (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                                 (or (or string mutez) timestamp))))
                                                  (pair nat address))
                                            (pair (pair (option nat) (option nat)) (option bytes)))))
                             (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                       (big_map bytes timestamp)))
           (option address)
           { DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             GET ;
             IF_NONE
               { NONE (pair (pair (pair (option address)
                                        (map string
                                             (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                 (or (or string mutez) timestamp))))
                                  (pair nat address))
                            (pair (pair (option nat) (option nat)) (option bytes))) }
               { DUP ;
                 CDR ;
                 CDR ;
                 IF_NONE
                   { DUP ; SOME }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { DIG 1 ; DUP ; DUG 2 ; SOME }
                       { DUP ;
                         NOW ;
                         COMPARE ;
                         LE ;
                         IF { DIG 2 ; DUP ; DUG 3 ; SOME }
                            { NONE (pair (pair (pair (option address)
                                                     (map string
                                                          (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                              (or (or string mutez) timestamp))))
                                               (pair nat address))
                                         (pair (pair (option nat) (option nat)) (option bytes))) } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DUP ;
             IF_NONE { NONE address } { DUP ; CAR ; CAR ; CAR ; DIP { DROP } } ;
             DIP { DROP 3 } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (lambda
                          (pair bytes
                                (pair (pair (pair address
                                                  (big_map
                                                     bytes
                                                     (pair (pair (pair (option address)
                                                                       (map string
                                                                            (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                                                (or (or string mutez) timestamp))))
                                                                 (pair nat address))
                                                           (pair (pair (option nat) (option nat)) (option bytes)))))
                                            (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                                      (big_map bytes timestamp)))
                          (option address))
                       (lambda unit unit))
                 (pair (pair address bytes)
                       (pair (pair (pair address
                                         (big_map
                                            bytes
                                            (pair (pair (pair (option address)
                                                              (map string
                                                                   (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                                       (or (or string mutez) timestamp))))
                                                        (pair nat address))
                                                  (pair (pair (option nat) (option nat)) (option bytes)))))
                                   (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                             (big_map bytes timestamp))))
           unit
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIP { DUP ; CDR ; SWAP ; CAR } ;
             DUP ;
             CAR ;
             PUSH unit Unit ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DUP ;
             IF_NONE
               { PUSH string "NAME_ADDRESS_MISMATCH" ; FAILWITH }
               { DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH unit Unit } { PUSH string "NAME_ADDRESS_MISMATCH" ; FAILWITH } ;
                 DIP { DROP } } ;
             DIP { DROP 6 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (option
                          (pair (pair (pair (option address)
                                            (map string
                                                 (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                     (or (or string mutez) timestamp))))
                                      (pair nat address))
                                (pair (pair (option nat) (option nat)) (option bytes))))
                       (option address))
                 (pair (pair (pair address
                                   (big_map
                                      bytes
                                      (pair (pair (pair (option address)
                                                        (map string
                                                             (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                                 (or (or string mutez) timestamp))))
                                                  (pair nat address))
                                            (pair (pair (option nat) (option nat)) (option bytes)))))
                             (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                       (big_map bytes timestamp)))
           (pair (pair (pair address
                             (big_map
                                bytes
                                (pair (pair (pair (option address)
                                                  (map string
                                                       (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                           (or (or string mutez) timestamp))))
                                            (pair nat address))
                                      (pair (pair (option nat) (option nat)) (option bytes)))))
                       (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                 (big_map bytes timestamp))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             IF_NONE
               { DUP }
               { DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 IF_NONE
                   { DIG 1 ; DUP ; DUG 2 }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     IF_NONE
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         NONE (pair (pair (option bytes) address) (option nat)) ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR }
                       { DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         NEQ ;
                         IF { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              NONE (pair (pair (option bytes) address) (option nat)) ;
                              SWAP ;
                              UPDATE ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR }
                            { DIG 3 ; DUP ; DUG 4 } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair bytes
                 (pair (pair (pair address
                                   (big_map
                                      bytes
                                      (pair (pair (pair (option address)
                                                        (map string
                                                             (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                                                 (or (or string mutez) timestamp))))
                                                  (pair nat address))
                                            (pair (pair (option nat) (option nat)) (option bytes)))))
                             (pair (big_map address (pair (pair (option bytes) address) (option nat))) (map nat address)))
                       (big_map bytes timestamp)))
           (pair (pair (pair (option address)
                             (map string
                                  (or (or (or (or address bool) (or bytes int)) (or (or key key_hash) (or nat signature)))
                                      (or (or string mutez) timestamp))))
                       (pair nat address))
                 (pair (pair (option nat) (option nat)) (option bytes)))
           { DUP ;
             CDR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE
               { PUSH string "PARENT_NOT_FOUND" ; FAILWITH }
               { SENDER ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF { DUP } { PUSH string "NOT_AUTHORIZED" ; FAILWITH } ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ; DIG 2 ; DUP ; DUG 3 ; CAR ; SWAP ; EXEC }
                            { PUSH string "NOT_AUTHORIZED" ; FAILWITH } ;
                         DIP { DROP 3 } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         SENDER ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         IF_NONE
                           { PUSH unit Unit }
                           { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             PAIR ;
                             PAIR ;
                             DIG 14 ;
                             DUP ;
                             DUG 15 ;
                             SWAP ;
                             EXEC ;
                             DIP { DROP } } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         SOME ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         UPDATE ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIP { DROP 6 } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PAIR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         NIL operation ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DROP 4 } ;
                         PAIR ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         GET ;
                         IF_NONE { NONE bytes } { DUP ; CAR ; CAR ; DIP { DROP } } ;
                         NIL operation ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DROP 4 } ;
                         PAIR ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PUSH bytes 0x2e ;
                         CONCAT ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONCAT ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 1 ; DUP ; DUG 2 ; SOME } { DIG 2 ; DUP ; DUG 3 ; CDR ; CDR } ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              IF_NONE
                                { DUP }
                                { DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  CDR ;
                                  DIG 11 ;
                                  DUP ;
                                  DUG 12 ;
                                  CDR ;
                                  CDR ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  UPDATE ;
                                  SWAP ;
                                  CAR ;
                                  PAIR ;
                                  DIP { DROP } } }
                            { DUP } ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SOME ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         UPDATE ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIP { DROP 4 } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         IF_NONE
                           { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             IF_NONE
                               { NIL operation }
                               { NIL operation ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 9 ;
                                 DUP ;
                                 DUG 10 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 DIG 9 ;
                                 DUP ;
                                 DUG 10 ;
                                 PAIR ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 GET ;
                                 IF_NONE
                                   { PUSH string "INVALID_VALIDATOR_INDEX" ; FAILWITH }
                                   { DUP ;
                                     CONTRACT %validate bytes ;
                                     IF_NONE
                                       { PUSH string "INVALID_VALIDATOR_CONTRACT" ; FAILWITH }
                                       { DUP ;
                                         PUSH mutez 0 ;
                                         DIG 4 ;
                                         DUP ;
                                         DUG 5 ;
                                         CAR ;
                                         CDR ;
                                         TRANSFER_TOKENS ;
                                         DIP { DROP } } ;
                                     DIP { DROP } } ;
                                 DIP { DROP } ;
                                 CONS ;
                                 DIP { DROP } } }
                           { DROP ; NIL operation } ;
                         PAIR ;
                         DIP { DROP 8 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "PARENT_NOT_TLD" ; FAILWITH } { PUSH unit Unit } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CAR ;
                         CDR ;
                         PUSH bytes 0x2e ;
                         CONCAT ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CONCAT ;
                         UPDATE ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIP { DROP 6 } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH unit Unit ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { PUSH string "RECORD_NOT_FOUND" ; FAILWITH }
                           { SENDER ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             COMPARE ;
                             NEQ ;
                             IF { PUSH string "NOT_AUTHORIZED" ; FAILWITH }
                                { DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  DIG 4 ;
                                  DUP ;
                                  DUG 5 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  SOME ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 12 ;
                                  DUP ;
                                  DUG 13 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP ;
                                  DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  CDR ;
                                  DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SOME ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  UPDATE ;
                                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  DIP { DROP } } ;
                             DIP { DROP } } ;
                         DIP { DROP 4 } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PUSH unit Unit ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             SWAP ;
             EXEC ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE
               { PUSH string "RECORD_NOT_FOUND" ; FAILWITH }
               { SENDER ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOT_AUTHORIZED" ; FAILWITH }
                    { DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      IF_NONE
                        { PUSH unit Unit }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DIG 11 ;
                          DUP ;
                          DUG 12 ;
                          SWAP ;
                          EXEC ;
                          DIP { DROP } } ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CDR ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CDR ;
                      CAR ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      PAIR ;
                      SOME ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CAR ;
                      CAR ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP 4 } ;
             NIL operation ;
             PAIR ;
             DIP { DROP } } ;
         DIP { DROP 7 } } }
