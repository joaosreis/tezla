{ parameter
    (or (or (or (or (pair %allowance (pair (address %owner) (address %spender)) (contract nat))
                    (pair %approve (address %spender) (nat %value)))
                (or (pair %balance (address %owner) (contract nat))
                    (pair %decimals unit (contract nat))))
            (or (or (pair %mint (address %recipient) (nat %value)) (pair %name unit (contract string)))
                (or (pair %symbol unit (contract string)) (pair %totalSupply unit (contract nat)))))
        (pair %transfer (address %from) (pair (address %to) (nat %value)))) ;
  storage
    (pair (pair (pair (nat %decimals)
                      (big_map %ledger address (pair (map %allowances address nat) (nat %balance))))
                (pair (string %name) (address %owner)))
          (pair (string %symbol) (nat %totalSupply))) ;
  code { NIL operation ;
         LAMBDA
           (pair address
                 (pair (pair (pair nat (big_map address (pair (map address nat) nat))) (pair string address))
                       (pair string nat)))
           (pair (map address nat) nat)
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair (map address nat) nat) address)
                 (pair (pair (pair nat (big_map address (pair (map address nat) nat))) (pair string address))
                       (pair string nat)))
           nat
           { CAR ; UNPAIR ; CAR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         DIG 4 ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { UNPAIR ;
                         DUP 3 ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 4 ;
                         DUP 3 ;
                         DUP 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         COMPARE ;
                         GT ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         COMPARE ;
                         GT ;
                         AND ;
                         IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                         DUP 4 ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         DIG 6 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { UNPAIR ;
                         DUP 3 ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         CDR ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { UNPAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ;
                              PUSH string "You must be the owner of the contract to mint tokens" ;
                              FAILWITH }
                            { DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                              DUP 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DUP 4 ;
                              CDR ;
                              DUP 5 ;
                              CAR ;
                              CDR ;
                              DUP 6 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DIG 4 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR } ;
                         NIL operation ;
                         PAIR }
                       { CDR ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { CDR ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         NIL operation ;
                         DIG 2 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } } } }
           { DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP 4 ;
             PAIR ;
             DUP 7 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             SENDER ;
             DUP 5 ;
             COMPARE ;
             NEQ ;
             IF { DUP 3 ;
                  SENDER ;
                  DUP 3 ;
                  PAIR ;
                  PAIR ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  DUP 3 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  DUP 4 ;
                  DIG 3 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  SENDER ;
                  UPDATE ;
                  PAIR }
                { DIG 5 ; DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SUB ;
             ABS ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP 3 ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             DUP 5 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             DIG 6 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIG 4 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             DUP 4 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             ADD ;
             SWAP ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             DIG 5 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }
