{ parameter
    (or (or (or (or (address %add_controller)
                    (pair %approve (int %amount) (pair (address %f) (address %t))))
                (or (address %blacklist)
                    (or (pair %burn (address %address) (int %amount))
                        (list %burnMultiple (pair (address %address) (int %amount))))))
            (or (or (address %get_administrator)
                    (pair %get_allowance
                       (pair %arg (address %owner) (address %spender))
                       (address %target)))
                (or (pair %get_balance (address %arg) (address %target))
                    (or (address %get_total_supply) (pair %issue (address %address) (int %amount))))))
        (or (or (or (list %issueMultiple (pair (address %address) (int %amount)))
                    (pair %mint (address %address) (int %amount)))
                (or (bool %pause) (or (address %set_administrator) (bool %set_blacklist_enabled))))
            (or (or (bool %set_trading_enabled)
                    (or (bool %set_whitelist_enabled)
                        (pair %transfer (int %amount) (pair (address %f) (address %t)))))
                (or (list %update_controllers
                       (or (address %add_controller) (address %remove_controller)))
                    (or (list %update_operators
                           (or (pair %add_operator (address %owner) (address %operator))
                               (pair %remove_operator (address %owner) (address %operator))))
                        (address %whitelist)))))) ;
  storage
    (pair (pair (pair (address %administrator)
                      (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                            (set %blacklist address)))
                (pair (pair (bool %blacklist_enabled) (set %controllers address))
                      (pair (bool %controllers_enabled) (string %name))))
          (pair (pair (pair (big_map %operators bytes unit) (bool %operators_enabled))
                      (pair (bool %paused) (string %symbol)))
                (pair (pair (int %total_supply) (bool %trading_enabled))
                      (pair (set %whitelist address) (bool %whitelist_enabled))))) ;
  code { LAMBDA
           (pair (pair %in_param (address %address) (int %amount))
                 (pair %in_storage
                    (pair (pair (address %administrator)
                                (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                                      (set %blacklist address)))
                          (pair (pair (bool %blacklist_enabled) (set %controllers address))
                                (pair (bool %controllers_enabled) (string %name))))
                    (pair (pair (pair (big_map %operators bytes unit) (bool %operators_enabled))
                                (pair (bool %paused) (string %symbol)))
                          (pair (pair (int %total_supply) (bool %trading_enabled))
                                (pair (set %whitelist address) (bool %whitelist_enabled))))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (pair (address %administrator)
                                      (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                                            (set %blacklist address)))
                                (pair (pair (bool %blacklist_enabled) (set %controllers address))
                                      (pair (bool %controllers_enabled) (string %name))))
                          (pair (pair (pair (big_map %operators bytes unit) (bool %operators_enabled))
                                      (pair (bool %paused) (string %symbol)))
                                (pair (pair (int %total_supply) (bool %trading_enabled))
                                      (pair (set %whitelist address) (bool %whitelist_enabled)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 282 ; FAILWITH } {} ;
             CDR ;
             COMPARE ;
             GE ;
             IF {}
                { PUSH string
                       "WrongCondition: self.data.balances[lparams_0.in_param.address].balance >= lparams_0.in_param.amount" ;
                  FAILWITH } ;
             DUP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CAR ;
             CAR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 283 ; FAILWITH } {} ;
             CAR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             DIG 8 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 283 ; FAILWITH } {} ;
             CDR ;
             SUB ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 6 ;
             CAR ;
             CDR ;
             SWAP ;
             SUB ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         LAMBDA
           (pair (pair %in_param (address %address) (int %amount))
                 (pair %in_storage
                    (pair (pair (address %administrator)
                                (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                                      (set %blacklist address)))
                          (pair (pair (bool %blacklist_enabled) (set %controllers address))
                                (pair (bool %controllers_enabled) (string %name))))
                    (pair (pair (pair (big_map %operators bytes unit) (bool %operators_enabled))
                                (pair (bool %paused) (string %symbol)))
                          (pair (pair (int %total_supply) (bool %trading_enabled))
                                (pair (set %whitelist address) (bool %whitelist_enabled))))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (pair (address %administrator)
                                      (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                                            (set %blacklist address)))
                                (pair (pair (bool %blacklist_enabled) (set %controllers address))
                                      (pair (bool %controllers_enabled) (string %name))))
                          (pair (pair (pair (big_map %operators bytes unit) (bool %operators_enabled))
                                      (pair (bool %paused) (string %symbol)))
                                (pair (pair (int %total_supply) (bool %trading_enabled))
                                      (pair (set %whitelist address) (bool %whitelist_enabled)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             MEM ;
             IF {}
                { DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CAR ;
                  PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CAR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 255 ; FAILWITH } {} ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             ADD ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 6 ;
             CAR ;
             CDR ;
             ADD ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PUSH bool True ;
                         DIG 6 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              IF { PUSH bool False } { DUP ; CDR ; CAR ; SENDER ; COMPARE ; EQ } } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & (params.f == sp.sender))" ;
                              FAILWITH } ;
                         PUSH int 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 194 ; FAILWITH } {} ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 0 } {} ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True } { DUP ; CAR ; PUSH int 0 ; COMPARE ; EQ } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (self.data.balances[params.f].approvals.get(params.t, default_value = 0) == 0) | (params.amount == 0)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 196 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 8 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PUSH bool True ;
                         DIG 6 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             PAIR %in_param %in_storage ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | (self.data.controllers.contains(sp.sender))" ;
                                  FAILWITH } ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             ITER { DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    DIG 4 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR %in_param %in_storage ;
                                    EXEC ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    DUG 4 ;
                                    DUP ;
                                    CAR ;
                                    ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                                    DROP 2 } ;
                             SWAP ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP } } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         CONTRACT address ;
                         IF_NONE { PUSH int 319 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DUP ;
                         CDR ;
                         CONTRACT nat ;
                         IF_NONE { PUSH int 311 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 311 ; FAILWITH } {} ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 311 ; FAILWITH } {} ;
                         ISNAT ;
                         IF_NONE { PUSH int 311 ; FAILWITH } {} ;
                         TRANSFER_TOKENS ;
                         CONS } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DUP ;
                         CDR ;
                         CONTRACT nat ;
                         IF_NONE { PUSH int 307 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 307 ; FAILWITH } {} ;
                         CDR ;
                         ISNAT ;
                         IF_NONE { PUSH int 307 ; FAILWITH } {} ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             CONTRACT nat ;
                             IF_NONE { PUSH int 315 ; FAILWITH } {} ;
                             NIL operation ;
                             SWAP ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             ISNAT ;
                             IF_NONE { PUSH int 315 ; FAILWITH } {} ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 3 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | (self.data.controllers.contains(sp.sender))" ;
                                  FAILWITH } ;
                             PAIR %in_param %in_storage ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } } } } } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.administrator) | (self.data.controllers.contains(sp.sender))" ;
                              FAILWITH } ;
                         DUP ;
                         NIL operation ;
                         SWAP ;
                         ITER { DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                DIG 4 ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                PAIR %in_param %in_storage ;
                                EXEC ;
                                DUP ;
                                CDR ;
                                CDR ;
                                DUG 4 ;
                                DUP ;
                                CAR ;
                                ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                                DROP 2 } ;
                         SWAP ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.administrator) | (self.data.controllers.contains(sp.sender))" ;
                              FAILWITH } ;
                         PAIR %in_param %in_storage ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } } }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             CAR ;
                             DIG 4 ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR } } ;
                     NIL operation } }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             CAR ;
                             DIG 4 ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             CDR ;
                             IF {}
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH bool True }
                                     { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } ;
                                  IF {}
                                     { PUSH string
                                            "WrongCondition: (sp.sender == self.data.administrator) | (self.data.controllers.contains(sp.sender))" ;
                                       FAILWITH } } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  IF { PUSH bool False }
                                     { DUP ;
                                       CDR ;
                                       CAR ;
                                       SENDER ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH bool True }
                                          { DUP ;
                                            CAR ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CDR ;
                                            CAR ;
                                            GET ;
                                            IF_NONE { PUSH int 171 ; FAILWITH } {} ;
                                            CAR ;
                                            SENDER ;
                                            GET ;
                                            IF_NONE { PUSH int 171 ; FAILWITH } {} ;
                                            COMPARE ;
                                            GE } } } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.f == sp.sender) | (self.data.balances[params.f].approvals[sp.sender] >= params.amount)))" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             IF { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; NEQ }
                                { PUSH bool False } ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CAR ;
                                  MEM ;
                                  IF { PUSH string "WrongCondition: ~ (self.data.blacklist.contains(params.f))" ;
                                       FAILWITH }
                                     {} ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  MEM ;
                                  IF { PUSH string "WrongCondition: ~ (self.data.blacklist.contains(params.t))" ;
                                       FAILWITH }
                                     {} }
                                {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             IF { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; NEQ }
                                { PUSH bool False } ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CAR ;
                                  MEM ;
                                  IF {}
                                     { PUSH string "WrongCondition: self.data.whitelist.contains(params.f)" ;
                                       FAILWITH } ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  MEM ;
                                  IF {}
                                     { PUSH string "WrongCondition: self.data.whitelist.contains(params.t)" ;
                                       FAILWITH } }
                                {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             MEM ;
                             IF {}
                                { SWAP ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  CDR ;
                                  CDR ;
                                  PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                                  SWAP ;
                                  UPDATE ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP } ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH int 184 ; FAILWITH } {} ;
                             CDR ;
                             COMPARE ;
                             GE ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: self.data.balances[params.f].balance >= params.amount" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 185 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             CAR ;
                             SWAP ;
                             SUB ;
                             SWAP ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             CDR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 186 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             CAR ;
                             ADD ;
                             SWAP ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { SENDER ; DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; COMPARE ; NEQ }
                                { PUSH bool False } ;
                             IF { SWAP ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  DIG 6 ;
                                  DUP ;
                                  DUG 7 ;
                                  CDR ;
                                  CAR ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                                  DIG 10 ;
                                  CAR ;
                                  SWAP ;
                                  SUB ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  PAIR ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR }
                                { DROP } } } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { DUP ;
                              ITER { IF_LEFT
                                       { DIG 2 ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         PUSH bool True ;
                                         DIG 6 ;
                                         UPDATE ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP }
                                       { DIG 2 ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         PUSH bool True ;
                                         DIG 6 ;
                                         UPDATE ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP } } ;
                              DROP }
                            { PUSH string "CONTROLLERS_DISABLED" ; FAILWITH } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             IF { DUP ;
                                  ITER { IF_LEFT
                                           { DUP ;
                                             CAR ;
                                             SENDER ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH bool True }
                                                { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                             IF {}
                                                { PUSH string
                                                       "WrongCondition: (arg.owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                  FAILWITH } ;
                                             DIG 2 ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DIG 5 ;
                                             PACK ;
                                             PUSH (option unit) (Some Unit) ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP }
                                           { DUP ;
                                             CAR ;
                                             SENDER ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH bool True }
                                                { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                             IF {}
                                                { PUSH string
                                                       "WrongCondition: (arg.owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                  FAILWITH } ;
                                             DIG 2 ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             NONE unit ;
                                             DIG 6 ;
                                             PACK ;
                                             UPDATE ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP } } ;
                                  DROP }
                                { PUSH string "OPERATORS_DISABLED" ; FAILWITH } }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             PUSH bool True ;
                             DIG 6 ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR } } } ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
