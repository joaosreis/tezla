{ storage
    (pair (pair (big_map %credentials address string)
                (pair (string %modulus) (big_map %timestamps int timestamp)))
          (pair (pair (big_map %vote_commitments_1 address string)
                      (big_map %vote_commitments_2 address string))
                (pair (big_map %vote_commitments_3 address string)
                      (big_map %vote_openings address string)))) ;
  parameter
    (or (string %add_credential)
        (or (string %open_commitment) (pair %vote (int %index) (string %vote_commitment)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { NOW ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             PUSH int 0 ;
             GET ;
             IF_NONE { PUSH int 36 ; FAILWITH } {} ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: self.data.timestamps[0] < sp.now" ; FAILWITH } ;
             NOW ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             PUSH int 1 ;
             GET ;
             IF_NONE { PUSH int 37 ; FAILWITH } {} ;
             COMPARE ;
             GT ;
             IF {}
                { PUSH string "WrongCondition: self.data.timestamps[1] > sp.now" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             IF {}
                { PUSH string "WrongCondition: self.data.credentials.contains(sp.sender)" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SENDER ;
             DIG 4 ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             PAIR }
           { IF_LEFT
               { NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH int 2 ;
                 GET ;
                 IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.timestamps[2] < sp.now" ; FAILWITH } ;
                 NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH int 3 ;
                 GET ;
                 IF_NONE { PUSH int 64 ; FAILWITH } {} ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.timestamps[3] > sp.now" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.vote_commitments_1.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.vote_commitments_2.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.vote_commitments_3.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 SENDER ;
                 DIG 5 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH int 1 ;
                 GET ;
                 IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.timestamps[1] < sp.now" ; FAILWITH } ;
                 NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH int 2 ;
                 GET ;
                 IF_NONE { PUSH int 49 ; FAILWITH } {} ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.timestamps[2] > sp.now" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 PUSH int 1 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      SENDER ;
                      DIG 5 ;
                      CDR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { DUP ;
                      CAR ;
                      PUSH int 2 ;
                      COMPARE ;
                      EQ ;
                      IF { SWAP ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           SENDER ;
                           DIG 5 ;
                           CDR ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR }
                         { SWAP ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           SENDER ;
                           DIG 5 ;
                           CDR ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR } } } } ;
         NIL operation ;
         PAIR } }
