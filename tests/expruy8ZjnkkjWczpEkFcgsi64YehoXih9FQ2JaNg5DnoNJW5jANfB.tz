{ parameter
    (or (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
                (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
            (or (nat %claim) (unit %reward)))
        (or %tokens
           (or (list %burn_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))
               (pair %create_token (nat %token_id) (map %token_info string bytes)))
           (list %mint_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount)))))) ;
  storage
    (pair (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
                (pair %assets
                   (pair (big_map %ledger (pair address nat) nat)
                         (big_map %operators (pair address (pair address nat)) unit))
                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                         (big_map %token_total_supply nat nat))))
          (pair (big_map %metadata string bytes)
                (big_map %users address (pair (timestamp %drt) (nat %placeholder))))) ;
  code { NOW ;
         PUSH int 20 ;
         SWAP ;
         PACK ;
         BLAKE2B ;
         PUSH nat 0 ;
         SWAP ;
         PUSH nat 0 ;
         PUSH bool True ;
         LOOP { DUP ;
                PUSH nat 1 ;
                ADD ;
                DUG 3 ;
                DUP 2 ;
                DUG 4 ;
                PUSH nat 1 ;
                SWAP ;
                SLICE ;
                IF_NONE
                  { PUSH bool False }
                  { SWAP ;
                    PUSH nat 2 ;
                    MUL ;
                    SWAP ;
                    PUSH bytes 0x80 ;
                    COMPARE ;
                    LE ;
                    IF { PUSH nat 1 ; ADD } {} ;
                    PUSH bool True } ;
                SWAP ;
                DUG 3 } ;
         DROP 2 ;
         EDIV ;
         IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
         CDR ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { DUP ; CDR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair (pair address nat) (big_map (pair address nat) nat)) nat)
                 (pair (pair address nat) (pair nat (big_map (pair address nat) nat))))
           (big_map (pair address nat) nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             CDR ;
             CAR ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; NONE nat ; SWAP ; UPDATE }
                { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair address nat) (big_map (pair address nat) nat)) nat) string)
                 (pair (pair address nat) (pair nat (big_map (pair address nat) nat))))
           (big_map (pair address nat) nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             CDR ;
             CAR ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DROP 2 ; FAILWITH }
               { DIG 3 ;
                 DROP ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP ; NONE nat ; SWAP ; UPDATE }
                    { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         DIG 4 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         PAIR ;
         LAMBDA
           (pair (pair (pair (lambda
                                (pair (pair address nat) (pair nat (big_map (pair address nat) nat)))
                                (big_map (pair address nat) nat))
                             string)
                       string)
                 (pair (list (pair address (pair nat nat)))
                       (pair (pair (big_map (pair address nat) nat) (big_map (pair address (pair address nat)) unit))
                             (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))))
           (pair (pair (big_map (pair address nat) nat) (big_map (pair address (pair address nat)) unit))
                 (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             ITER { DUP ;
                    DUG 2 ;
                    CDR ;
                    CDR ;
                    PAIR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CAR ;
                    DIG 2 ;
                    CAR ;
                    PAIR ;
                    PAIR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    SWAP ;
                    EXEC } ;
             DIG 3 ;
             DROP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             DIG 2 ;
             ITER { SWAP ;
                    DUP ;
                    DUG 2 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CAR ;
                    GET ;
                    IF_NONE
                      { DROP 2 ; DIG 3 ; DUP ; DUG 4 ; FAILWITH }
                      { SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { DIG 4 ; DUP ; DUG 5 ; FAILWITH } {} ;
                        DIG 2 ;
                        SWAP ;
                        SOME ;
                        DIG 2 ;
                        CDR ;
                        CAR ;
                        UPDATE } } ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair address bool) (option address))
                             (pair (pair (big_map (pair address nat) nat) (big_map (pair address (pair address nat)) unit))
                                   (pair (big_map nat (pair nat (map string bytes))) (big_map nat nat))))
                       (pair (big_map string bytes) (big_map address (pair timestamp nat)))))
           (option (pair timestamp nat))
           { DUP ; CDR ; CDR ; CDR ; SWAP ; CAR ; GET } ;
         NIL (pair address (pair nat nat)) ;
         PUSH nat 20 ;
         PAIR ;
         LEFT (pair nat (list (pair address (pair nat nat)))) ;
         LOOP_LEFT
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             PUSH nat 1 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SUB ;
             ABS ;
             PUSH nat 1 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             SENDER ;
             PAIR ;
             PUSH nat 1 ;
             PUSH nat 1 ;
             SUB ;
             ABS ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             COMPARE ;
             EQ ;
             IF { DROP 2 ; PAIR ; RIGHT (pair nat (list (pair address (pair nat nat)))) }
                { DIG 2 ;
                  DROP ;
                  DIG 2 ;
                  SWAP ;
                  CONS ;
                  SWAP ;
                  PAIR ;
                  LEFT (pair nat (list (pair address (pair nat nat)))) } } ;
         DIG 9 ;
         DUP ;
         DUG 10 ;
         CDR ;
         DIG 10 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             DUP ;
                             CAR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   MEM ;
                                   NOT ;
                                   IF { DROP ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                      { DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        PAIR ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        SWAP ;
                                        EXEC ;
                                        SWAP ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DIG 5 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             LAMBDA
                               (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                               unit
                               { DUP ;
                                 CAR ;
                                 CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 DUP ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP 3 ; UNIT }
                                    { DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      CDR ;
                                      CAR ;
                                      DIG 2 ;
                                      PAIR ;
                                      DIG 2 ;
                                      PAIR ;
                                      MEM ;
                                      IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             ITER { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           PAIR ;
                                           DUP ;
                                           CDR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CDR ;
                                           CAR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           MEM ;
                                           NOT ;
                                           IF { DROP 2 ; DIG 7 ; DUP ; DUG 8 ; FAILWITH }
                                              { DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                SENDER ;
                                                DIG 4 ;
                                                DUP ;
                                                DUG 5 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 5 ;
                                                DUP ;
                                                DUG 6 ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                EXEC ;
                                                DROP ;
                                                SWAP ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                SWAP ;
                                                EXEC ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                DIG 2 ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                SWAP ;
                                                EXEC } } ;
                                    SWAP ;
                                    DROP } ;
                             SWAP ;
                             DROP ;
                             SWAP ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                IF_LEFT {} {} ;
                                CAR ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                IF_LEFT
                                  { SWAP ;
                                    UNIT ;
                                    SOME ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    CDR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE }
                                  { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE } } ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 4 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 IF_LEFT
                   { DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     CAR ;
                     CAR ;
                     PUSH nat 1 ;
                     PAIR ;
                     PUSH nat 21 ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SWAP ;
                     EXEC ;
                     IF_NONE
                       { PUSH bool True }
                       { PUSH int 180 ; SWAP ; CAR ; NOW ; SUB ; COMPARE ; GT } ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DROP ;
                          PUSH string "REWARD_ON_COOLDOWN" ;
                          FAILWITH }
                        { PUSH nat 1 ;
                          DIG 5 ;
                          ADD ;
                          SENDER ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PUSH nat 1 ;
                          PAIR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          PAIR ;
                          DIG 6 ;
                          SWAP ;
                          EXEC ;
                          PUSH nat 1 ;
                          PAIR ;
                          DIG 2 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          NOW ;
                          DIG 2 ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          DIG 3 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          IF_NONE { PUSH nat 0 ; SWAP ; PAIR ; SOME } { CDR ; SWAP ; PAIR ; SOME } ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DIG 2 ;
                          UPDATE ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 4 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 6 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { PAIR ; DIG 2 ; SWAP ; EXEC ; NIL operation ; PAIR }
                   { DIG 3 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CDR ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR }
                       { DROP 4 ; PUSH string "FA2_DUP_TOKEN_ID" ; FAILWITH } ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 ITER { DUP ;
                        DUG 2 ;
                        CDR ;
                        CDR ;
                        PAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        CAR ;
                        DIG 2 ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        SWAP ;
                        EXEC } ;
                 DIG 4 ;
                 DROP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 ITER { SWAP ;
                        DUP ;
                        DUG 2 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        CAR ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; DIG 3 ; DUP ; DUG 4 ; FAILWITH }
                          { SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CDR ;
                            ADD ;
                            DIG 2 ;
                            SWAP ;
                            SOME ;
                            DIG 2 ;
                            CDR ;
                            CAR ;
                            UPDATE } } ;
                 DIG 4 ;
                 DROP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }
