{ storage
    (pair (pair (address %administrator)
                (big_map %balances address (pair (map %approvals address nat) (nat %balance))))
          (pair (bool %paused) (nat %totalSupply))) ;
  parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %burn (address %address) (nat %value)))
            (or (pair %getAdministrator unit (contract address))
                (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                    (pair %getBalance address (contract nat)))))
        (or (or (pair %getTotalSupply unit (contract nat))
                (pair %mint (address %address) (nat %value)))
            (or (address %setAdministrator)
                (or (bool %setPause) (pair %transfer (address %from) (pair (address %to) (nat %value))))))) ;
  code { LAMBDA
           (pair address
                 (pair (pair address (big_map address (pair (map address nat) nat))) (pair bool nat)))
           (pair (list operation)
                 (pair unit
                       (pair (pair address (big_map address (pair (map address nat) nat))) (pair bool nat))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             MEM ;
             IF { DIG 2 ; DROP }
                { UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)) ;
                  DIG 5 ;
                  CAR ;
                  UPDATE ;
                  SWAP ;
                  PAIR ;
                  PAIR } ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DUG 2 ;
                     SENDER ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     DUP 3 ;
                     GET 3 ;
                     IF { PUSH string "Paused" ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 32 ; FAILWITH } {} ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True } { PUSH nat 0 ; DUP 3 ; CDR ; COMPARE ; EQ } ;
                     IF {} { PUSH string "UnsafeAllowanceChange" ; FAILWITH } ;
                     DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 34 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     DUP 8 ;
                     CDR ;
                     SOME ;
                     DIG 8 ;
                     CAR ;
                     UPDATE ;
                     UPDATE 1 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NotAdministrator" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Insufficient Balance" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 5 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                     DUP 6 ;
                     CDR ;
                     DIG 7 ;
                     CAR ;
                     CDR ;
                     DUP 8 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                     UPDATE 2 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 79 ; FAILWITH } {} ;
                     UPDATE 4 ;
                     NIL operation } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 49 ; FAILWITH } {} ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } {} ;
                         SWAP ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 44 ; FAILWITH } {} ;
                         CDR ;
                         SWAP ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS } } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NotAdministrator" ; FAILWITH } ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PAIR ;
                     EXEC ;
                     DUP ;
                     GET 4 ;
                     DUG 2 ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     ITER { CONS } ;
                     DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 6 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 70 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     DUP 8 ;
                     CDR ;
                     ADD ;
                     UPDATE 2 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     GET 4 ;
                     DIG 3 ;
                     CDR ;
                     ADD ;
                     UPDATE 4 ;
                     SWAP } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "NotAdministrator" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "NotAdministrator" ; FAILWITH } ;
                         UPDATE 3 ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         IF { PUSH string "Paused" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { DUP ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH bool True }
                                 { DUP ;
                                   GET 4 ;
                                   DUP 3 ;
                                   CAR ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 14 ; FAILWITH } {} ;
                                   CAR ;
                                   SENDER ;
                                   GET ;
                                   IF_NONE { PUSH int 14 ; FAILWITH } {} ;
                                   COMPARE ;
                                   GE } } ;
                         IF {} { PUSH string "NotAllowed" ; FAILWITH } ;
                         DUP 3 ;
                         DUG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         NIL operation ;
                         SWAP ;
                         ITER { CONS } ;
                         DUP 5 ;
                         DIG 4 ;
                         DUP 5 ;
                         GET 3 ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 4 ;
                         DUP ;
                         CAR ;
                         ITER { DIG 2 ; SWAP ; CONS ; SWAP } ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 4 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 21 ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         GE ;
                         IF {} { PUSH string "InsufficientBalance" ; FAILWITH } ;
                         DUP 3 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUP 6 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 22 ; FAILWITH } {} ;
                         DUP 7 ;
                         GET 4 ;
                         DIG 8 ;
                         CAR ;
                         CDR ;
                         DUP 9 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 22 ; FAILWITH } {} ;
                         CDR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 22 ; FAILWITH } {} ;
                         UPDATE 2 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP ;
                         DUP 6 ;
                         GET 3 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 23 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         DUP 8 ;
                         GET 4 ;
                         ADD ;
                         UPDATE 2 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         SENDER ;
                         DUP 3 ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { DUP 3 ; CAR ; CAR ; SENDER ; COMPARE ; NEQ } { PUSH bool False } ;
                         IF { DIG 3 ;
                              DROP ;
                              DUP 3 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              DUP ;
                              DUP 6 ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 25 ; FAILWITH } {} ;
                              DUP ;
                              CAR ;
                              DUP 8 ;
                              GET 4 ;
                              DIG 9 ;
                              CAR ;
                              CDR ;
                              DIG 9 ;
                              CAR ;
                              GET ;
                              IF_NONE { PUSH int 25 ; FAILWITH } {} ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 25 ; FAILWITH } {} ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH int 25 ; FAILWITH } {} ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              UPDATE 1 ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ; DROP ; DIG 2 ; DROP } } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
