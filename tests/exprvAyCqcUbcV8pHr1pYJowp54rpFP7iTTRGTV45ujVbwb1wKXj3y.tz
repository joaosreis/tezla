{ parameter
    (or (or (or (pair %changeOwner address bool) (list %generateCardSequence int))
            (or (unit %participate) (unit %provideFund)))
        (or (unit %startGame) (mutez %withDraw))) ;
  storage
    (pair (pair (pair (bool %available) (mutez %bet))
                (pair (list %cardSequence int) (map %owners address bool)))
          (pair (pair (address %player) (int %playerHand)) (bool %ready))) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair bool mutez) (pair (list int) (map address bool)))
                       (pair (pair address int) bool)))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT OWNER" ; FAILWITH } {} ;
             PUSH string "Owner privilege Revoke" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DROP ;
                     PUSH string "GAME ALREADY STARTED" ;
                     PUSH bool False ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND SEND TO CONTRACT" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND IN CONTRACT TO PLAY" ;
                     PUSH nat 3 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     BALANCE ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     PUSH int 0 ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DROP ;
                     PUSH string "YOU MUST SEND FUND" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { DROP ;
                 PUSH string "CARD SEQUENCE NOT SET BY THE ADMINISTRATOR" ;
                 PUSH bool False ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "NOT ENOUGH FUND IN CONTRACT TO PLAY" ;
                 PUSH nat 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 MUL ;
                 BALANCE ;
                 COMPARE ;
                 LT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP ; DIG 2 ; SWAP ; EXEC } { SWAP ; DROP ; PUSH unit Unit } ;
                 DROP ;
                 DUP ;
                 DIG 2 ;
                 PUSH bool False ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        DUP 3 ;
                        CAR ;
                        CAR ;
                        CAR ;
                        DUP 3 ;
                        DUP 3 ;
                        DUP 3 ;
                        PAIR ;
                        PAIR ;
                        PUSH bool False ;
                        DIG 2 ;
                        COMPARE ;
                        EQ ;
                        PUSH int 21 ;
                        DUP 5 ;
                        CDR ;
                        CAR ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        AND ;
                        IF { DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CONTRACT unit ;
                             IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                             PUSH nat 3 ;
                             DIG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             MUL ;
                             UNIT ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 3 ;
                             DIG 2 ;
                             CONS ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             CDR ;
                             PUSH bool True ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DROP ;
                             PUSH int 21 ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             COMPARE ;
                             LT ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  DUP 4 ;
                                  CDR ;
                                  DUP 4 ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  ADD ;
                                  DUP 4 ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 2 ;
                                  CAR ;
                                  PAIR }
                                { SWAP } ;
                             SWAP ;
                             CAR ;
                             PAIR } ;
                        DUP ;
                        CDR ;
                        DIG 2 ;
                        CAR ;
                        UNPAIR ;
                        CDR ;
                        DUP 4 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        DIG 3 ;
                        CAR ;
                        CDR ;
                        DIG 2 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        CAR ;
                        PAIR } ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH bool True ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PUSH bool False ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "TO HIGH VALUE TO WITHDRAW" ;
                 BALANCE ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 DUG 2 ;
                 CONS ;
                 PAIR } } } }
