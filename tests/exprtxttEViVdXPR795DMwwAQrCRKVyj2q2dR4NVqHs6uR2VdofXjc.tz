{ parameter (or (or (unit %claim) (nat %deposit)) (nat %withdraw)) ;
  storage
    (pair (pair (pair (nat %accumulatedRewardPerShare)
                      (pair %claimedRewards (nat %paid) (nat %unpaid)))
                (pair (big_map %delegators address (pair (nat %balance) (nat %stakingStart)))
                      (nat %farmTokenBalance)))
          (pair (pair (nat %lastBlockUpdate) (address %lpTokenContract))
                (pair (pair %plannedRewards (nat %rewardPerBlock) (nat %totalBlocks))
                      (address %rewardTokenContract)))) ;
  code { LAMBDA
           (pair nat nat)
           nat
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "NotEnoughStakedTokenBalance" ; FAILWITH } ;
             SUB ;
             ABS } ;
         LAMBDA
           (pair address
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair nat nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "DelegatorNotKnown" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair address nat)
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                 (pair (pair nat address) (pair (pair nat nat) address)))
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DIG 2 ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             DIG 3 ;
             PAIR ;
             DUG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 4 ;
             SOME ;
             DIG 4 ;
             UPDATE ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                 (pair (pair nat address) (pair (pair nat nat) address)))
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                 (pair (pair nat address) (pair (pair nat nat) address)))
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                 (pair (pair nat address) (pair (pair nat nat) address)))
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR } ;
         PUSH nat 1000000000000 ;
         DIG 3 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         PAIR ;
         LAMBDA
           (pair (pair (pair nat
                             (lambda
                                (pair nat
                                      (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                                            (pair (pair nat address) (pair (pair nat nat) address))))
                                (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                                      (pair (pair nat address) (pair (pair nat nat) address)))))
                       (lambda
                          (pair nat
                                (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                                      (pair (pair nat address) (pair (pair nat nat) address))))
                          (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                                (pair (pair nat address) (pair (pair nat nat) address)))))
                 (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                       (pair (pair nat address) (pair (pair nat nat) address))))
           (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                 (pair (pair nat address) (pair (pair nat nat) address)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             LEVEL ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             SWAP ;
             COMPARE ;
             NEQ ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  CAR ;
                  CDR ;
                  CDR ;
                  COMPARE ;
                  EQ ;
                  IF { PUSH unit Unit ; RIGHT unit ; LEFT unit }
                     { PUSH unit Unit ; RIGHT (or unit unit) } }
                { DROP ; PUSH unit Unit ; LEFT unit ; LEFT unit } ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT { DROP 2 ; SWAP ; DROP } { DROP ; PAIR ; EXEC } }
               { DROP ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SUB ;
                 ABS ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 MUL ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 ADD ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 MUL ;
                 DUP ;
                 DIG 2 ;
                 COMPARE ;
                 GT ;
                 IF { DIG 2 ; DROP ; SUB ; ABS } { DROP 2 } ;
                 DIG 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 ADD ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 DIG 2 ;
                 SWAP ;
                 DIG 4 ;
                 DIG 2 ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         DIG 3 ;
         PAIR ;
         PAIR ;
         LAMBDA
           (pair (pair (pair nat
                             (lambda
                                (pair address
                                      (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                                            (pair (pair nat address) (pair (pair nat nat) address))))
                                (pair nat nat)))
                       (lambda (pair nat nat) nat))
                 (pair address
                       (pair (pair (pair nat (pair nat nat)) (pair (big_map address (pair nat nat)) nat))
                             (pair (pair nat address) (pair (pair nat nat) address)))))
           nat
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             DIG 2 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             SWAP ;
             CAR ;
             SWAP ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address address) (pair nat address))
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DIG 2 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
             IF_NONE { PUSH string "NoContractFound" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 2 ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             PAIR ;
             TRANSFER_TOKENS } ;
         DIG 8 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SENDER ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 SWAP ;
                 CAR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 DIG 2 ;
                 SELF_ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { SWAP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 EXEC ;
                 SENDER ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 GET ;
                 IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                 DUP ;
                 IF { DIG 2 ;
                      DIG 6 ;
                      SWAP ;
                      EXEC ;
                      SENDER ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      PAIR ;
                      DIG 7 ;
                      SWAP ;
                      EXEC ;
                      DUG 2 ;
                      DUP ;
                      DUG 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      PAIR ;
                      DIG 12 ;
                      DUP ;
                      DUG 13 ;
                      SWAP ;
                      EXEC ;
                      DIG 2 ;
                      SWAP ;
                      CAR ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      DIG 12 ;
                      SWAP ;
                      EXEC ;
                      PAIR ;
                      DIG 8 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      ADD ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      PAIR ;
                      DIG 3 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      PAIR ;
                      DIG 2 ;
                      SELF_ADDRESS ;
                      PAIR ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      NIL operation ;
                      DIG 2 ;
                      CONS ;
                      PAIR }
                    { DIG 5 ;
                      DROP ;
                      DIG 5 ;
                      DROP ;
                      DIG 6 ;
                      DROP ;
                      DIG 8 ;
                      DROP ;
                      DIG 2 ;
                      NIL operation ;
                      PAIR } ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 DIG 2 ;
                 IF { SWAP ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      PAIR ;
                      DIG 10 ;
                      SWAP ;
                      EXEC ;
                      DIG 2 ;
                      SWAP ;
                      CAR ;
                      ADD ;
                      DIG 2 ;
                      SWAP ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      SWAP ;
                      EXEC }
                    { DIG 7 ;
                      DROP ;
                      SWAP ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      SWAP ;
                      PUSH nat 0 ;
                      ADD ;
                      DIG 2 ;
                      SWAP ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      SWAP ;
                      EXEC } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 SELF_ADDRESS ;
                 DIG 4 ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DIG 2 ;
                 SWAP ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUG 2 ;
                 CONS ;
                 PAIR } }
           { SWAP ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             SENDER ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             CAR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             PAIR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             SWAP ;
             EXEC ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             DIG 2 ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             EXEC ;
             SWAP ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             SENDER ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             SWAP ;
             EXEC ;
             DROP ;
             DIG 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 10 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 9 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "NotEnoughStakedTokenBalance" ; FAILWITH } ;
             SUB ;
             ABS ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             CAR ;
             CDR ;
             DIG 4 ;
             PAIR ;
             DIG 2 ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUG 2 ;
             CONS ;
             PAIR } } }
