{ storage
    (pair (pair (pair (pair (address %counterparty) (timestamp %epoch)) (bytes %hashedSecret))
                (mutez %notional))
          (address %owner)) ;
  parameter (or (or (unit %allSigned) (unit %cancelSwap)) (bytes %knownSecret)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { PUSH mutez 0 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   COMPARE ;
                   NEQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } } ;
                   SENDER ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } } ;
                   NIL operation ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CONTRACT unit ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CDR ;
                   PUSH unit Unit ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CAR ;
                   PUSH mutez 0 ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   DUG 3 ;
                   DIG 2 ;
                   DROP ;
                   SWAP ;
                   DROP } }
               { { PUSH mutez 0 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   COMPARE ;
                   NEQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } } ;
                   SENDER ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } } ;
                   NOW ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   COMPARE ;
                   LT ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.epoch < sp.now" ; FAILWITH } } ;
                   NIL operation ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   CONTRACT unit ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CAR ;
                   CDR ;
                   PUSH unit Unit ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CAR ;
                   PUSH mutez 0 ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   DUG 3 ;
                   DIG 2 ;
                   DROP ;
                   SWAP ;
                   DROP } } }
           { { PUSH mutez 0 ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               CDR ;
               COMPARE ;
               NEQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.notional != sp.tez(0)" ; FAILWITH } } ;
               SENDER ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               CAR ;
               CAR ;
               CAR ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.counterparty == sp.sender" ;
                      FAILWITH } } ;
               DUP ;
               BLAKE2B ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               CAR ;
               CDR ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.hashedSecret == sp.blake2b(params.secret)" ;
                      FAILWITH } } ;
               NIL operation ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               CAR ;
               CAR ;
               CAR ;
               CONTRACT unit ;
               IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CAR ;
               CDR ;
               PUSH unit Unit ;
               TRANSFER_TOKENS ;
               CONS ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               CAR ;
               PUSH mutez 0 ;
               SWAP ;
               PAIR ;
               PAIR ;
               DUG 3 ;
               DIG 2 ;
               DROP ;
               SWAP ;
               DROP } } ;
         PAIR } }
