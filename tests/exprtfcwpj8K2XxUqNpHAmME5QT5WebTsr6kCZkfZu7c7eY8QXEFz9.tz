{ parameter
    (or (or (or (address %init_) (unit %notStopped))
            (or (address %onlyAdmin) (address %onlyOwner)))
        (or (pair %onlyRole address string)
            (pair %updateStorage
               (pair (pair (pair (list %adminRoles string) (address %allowable))
                           (pair (option %configurator address) (address %owner)))
                     (pair (pair (address %registry) (bool %roleApproval))
                           (pair (set %roleNames string)
                                 (big_map %roleUsers
                                    string
                                    (pair (pair (map %addRoleInitiators address address)
                                                (map %removeRoleInitiators address address))
                                          (set %users address))))))
               (pair (pair (pair (option %startInitiator address) (option %stopInitiator address))
                           (pair (bool %stopped) (bool %transferOwnershipApproval)))
                     (map %transferOwnershipInitiator address address))))) ;
  storage
    (pair (pair (pair (pair (list %adminRoles string) (address %allowable))
                      (pair (option %configurator address) (address %owner)))
                (pair (pair (address %registry) (bool %roleApproval))
                      (pair (set %roleNames string)
                            (big_map %roleUsers
                               string
                               (pair (pair (map %addRoleInitiators address address)
                                           (map %removeRoleInitiators address address))
                                     (set %users address))))))
          (pair (pair (pair (option %startInitiator address) (option %stopInitiator address))
                      (pair (bool %stopped) (bool %transferOwnershipApproval)))
                (map %transferOwnershipInitiator address address))) ;
  code { PUSH string "Access is denied" ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair (list string) address) (pair (option address) address))
                             (pair (pair address bool)
                                   (pair (set string)
                                         (big_map string (pair (pair (map address address) (map address address)) (set address))))))
                       (pair (pair (pair (option address) (option address)) (pair bool bool)) (map address address))))
           bool
           { DUP ;
             CDR ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             COMPARE ;
             EQ ;
             DIP { DROP } } ;
         LAMBDA
           (pair (pair address string)
                 (pair (pair (pair (pair (list string) address) (pair (option address) address))
                             (pair (pair address bool)
                                   (pair (set string)
                                         (big_map string (pair (pair (map address address) (map address address)) (set address))))))
                       (pair (pair (pair (option address) (option address)) (pair bool bool)) (map address address))))
           bool
           { DUP ;
             CDR ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE
               { PUSH bool False }
               { DUP ; CDR ; DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; MEM ; DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (pair (pair (pair (pair (list string) address) (pair (option address) address))
                       (pair (pair address bool)
                             (pair (set string)
                                   (big_map string (pair (pair (map address address) (map address address)) (set address))))))
                 (pair (pair (pair (option address) (option address)) (pair bool bool)) (map address address)))
           unit
           { DUP ;
             CDR ;
             CAR ;
             CDR ;
             CAR ;
             IF { PUSH string "Contract is stopped" ; FAILWITH } { PUSH unit Unit } ;
             DIP { DROP } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     IF { DIG 9 ; DUP ; DUG 10 ; FAILWITH } { PUSH unit Unit } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     IF_NONE { PUSH unit Unit } { PUSH string "Already initialized" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     SOME ;
                     DIP { DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           CDR ;
                           CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIP { DROP 4 } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SWAP ;
                     EXEC ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     SWAP ;
                     EXEC ;
                     IF { PUSH bool True }
                        { DUP ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          PAIR ;
                          PAIR ;
                          PUSH bool False ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 14 ;
                                 DUP ;
                                 DUG 15 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 OR ;
                                 DIP { DROP } } ;
                          DIP { DROP } } ;
                     NOT ;
                     DIP { DROP 3 } ;
                     IF { DIG 10 ; DUP ; DUG 11 ; FAILWITH } { PUSH unit Unit } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIP { DROP 4 } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     PAIR ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     IF { DIG 10 ; DUP ; DUG 11 ; FAILWITH } { PUSH unit Unit } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIP { DROP 4 } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 EXEC ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 PAIR ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 SWAP ;
                 EXEC ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIG 13 ;
                 DUP ;
                 DUG 14 ;
                 SWAP ;
                 EXEC ;
                 OR ;
                 NOT ;
                 DIP { DROP 3 } ;
                 IF { DIG 9 ; DUP ; DUG 10 ; FAILWITH } { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIP { DROP 4 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 IF_NONE { DIG 8 ; DUP ; DUG 9 ; FAILWITH } { DUP ; DIP { DROP } } ;
                 DUP ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DIG 9 ; DUP ; DUG 10 ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIP { DROP 4 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 6 } } }
