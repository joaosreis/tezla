{ storage
    (pair (map %multisigs
             int
             (pair (pair (list %groups
                            (pair (pair (int %contractWeight)
                                        (pair (bool %ok)
                                              (list %participants (pair (bool %hasVoted) (pair (address %id) (int %weight))))))
                                  (pair (pair (int %thresholdVoters) (int %thresholdWeight))
                                        (pair (int %voters) (int %weight)))))
                         (pair (int %groupsOK) (string %name)))
                   (pair (pair (bool %ok) (int %thresholdGroupsOK))
                         (pair (int %thresholdWeight) (int %weight)))))
          (int %nbMultisigs)) ;
  parameter
    (or (pair %build
           (pair (list %groups
                    (pair (pair (int %contractWeight)
                                (pair (bool %ok)
                                      (list %participants (pair (bool %hasVoted) (pair (address %id) (int %weight))))))
                          (pair (pair (int %thresholdVoters) (int %thresholdWeight))
                                (pair (int %voters) (int %weight)))))
                 (pair (int %groupsOK) (string %name)))
           (pair (pair (bool %ok) (int %thresholdGroupsOK))
                 (pair (int %thresholdWeight) (int %weight))))
        (pair %sign (int %contractId) (pair (string %contractName) (address %id)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             CDR ;
             DIG 3 ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH int 1 ;
             ADD ;
             SWAP ;
             PAIR }
           { DUP ;
             CDR ;
             CDR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "WrongCondition: params.id == sp.sender" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 24 ; FAILWITH } {} ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string
                       "WrongCondition: params.contractName == self.data.multisigs[params.contractId].name" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 24 ; FAILWITH } {} ;
             CAR ;
             CAR ;
             MAP { DUP ;
                   CAR ;
                   CDR ;
                   CDR ;
                   MAP { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { DUP ;
                              CAR ;
                              IF { PUSH string "WrongCondition: ~ participant.hasVoted" ; FAILWITH } {} ;
                              CDR ;
                              PUSH bool True ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              PUSH int 1 ;
                              ADD ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              IF { PUSH bool False }
                                 { SWAP ;
                                   DUP ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   COMPARE ;
                                   LE } ;
                              IF { SWAP ;
                                   DUP ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   COMPARE ;
                                   LE }
                                 { PUSH bool False } ;
                              IF { SWAP ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   CDR ;
                                   PUSH bool True ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   DIG 3 ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DUP ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   DIG 8 ;
                                   DUP ;
                                   DUG 9 ;
                                   CAR ;
                                   CAR ;
                                   ADD ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DUP ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 39 ; FAILWITH } {} ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   PUSH int 1 ;
                                   ADD ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   DUP ;
                                   DUG 4 ;
                                   CAR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   IF { PUSH bool False }
                                      { DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        COMPARE ;
                                        LE } ;
                                   IF { DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 24 ; FAILWITH } {} ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        LE }
                                      { PUSH bool False } ;
                                   IF { DIG 3 ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        CAR ;
                                        DUP ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                                        DUP ;
                                        CAR ;
                                        SWAP ;
                                        CDR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        CAR ;
                                        CDR ;
                                        PUSH bool True ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DUG 3 }
                                      {} }
                                 {} }
                            {} } ;
                   SWAP ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR ;
                   DIG 3 ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR } ;
             DIG 2 ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 4 ;
             CAR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 28 ; FAILWITH } {} ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             CDR ;
             DIG 5 ;
             PAIR ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR } ;
         NIL operation ;
         PAIR } }
