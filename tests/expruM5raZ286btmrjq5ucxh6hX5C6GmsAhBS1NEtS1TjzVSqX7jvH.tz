{ parameter
    (or (or (pair %add (nat %x) (nat %y)) (or (nat %factorial) (nat %log2)))
        (or (pair %multiply (nat %x) (nat %y)) (or (nat %square) (nat %squareRoot)))) ;
  storage nat ;
  code { { DUP ;
           CDR ;
           SWAP ;
           CAR ;
           IF_LEFT
             { { IF_LEFT
                   { { DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; ADD ; DUG 2 ; DROP 2 } }
                   { { IF_LEFT
                         { { PUSH nat 1 ;
                             DUG 2 ;
                             SWAP ;
                             DROP ;
                             DUP ;
                             PUSH nat 1 ;
                             ADD ;
                             PUSH nat 1 ;
                             DUP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             COMPARE ;
                             GT ;
                             LOOP { { DUP ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      MUL ;
                                      DUG 4 ;
                                      DIG 3 ;
                                      DROP ;
                                      PUSH nat 1 ;
                                      ADD ;
                                      DUP ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      COMPARE ;
                                      GT } } ;
                             DROP 3 } }
                         { { PUSH nat 0 ;
                             DUG 2 ;
                             SWAP ;
                             DROP ;
                             DUP ;
                             DUP ;
                             PUSH nat 1 ;
                             COMPARE ;
                             LT ;
                             LOOP { { PUSH nat 1 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      ADD ;
                                      DUG 3 ;
                                      DIG 2 ;
                                      DROP ;
                                      DUP ;
                                      PUSH nat 2 ;
                                      SWAP ;
                                      EDIV ;
                                      { IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { { CAR } } } ;
                                      SWAP ;
                                      DROP ;
                                      DUP ;
                                      PUSH nat 1 ;
                                      COMPARE ;
                                      LT } } ;
                             DROP 2 } } } } } }
             { { IF_LEFT
                   { { DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; MUL ; DUG 2 ; DROP 2 } }
                   { { IF_LEFT
                         { { DUP ; DUP ; MUL ; DUG 2 ; DROP 2 } }
                         { { DUP ;
                             PUSH nat 0 ;
                             SWAP ;
                             COMPARE ;
                             GE ;
                             IF {} { { PUSH string "WrongCondition: params >= 0" ; FAILWITH } } ;
                             DUP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             DUP ;
                             MUL ;
                             COMPARE ;
                             GT ;
                             LOOP { { DUP ;
                                      PUSH nat 2 ;
                                      SWAP ;
                                      DUP ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      EDIV ;
                                      { IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { { CAR } } } ;
                                      ADD ;
                                      EDIV ;
                                      { IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { { CAR } } } ;
                                      SWAP ;
                                      DROP ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DUP ;
                                      MUL ;
                                      COMPARE ;
                                      GT } } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             DUP ;
                             MUL ;
                             COMPARE ;
                             LE ;
                             IF { { DUP ;
                                    PUSH nat 1 ;
                                    ADD ;
                                    PUSH nat 1 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    ADD ;
                                    MUL ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    COMPARE ;
                                    LT } }
                                { { PUSH bool False } } ;
                             IF {}
                                { { PUSH string
                                         "WrongCondition: ((y.value * y.value) <= params) & (params < ((y.value + 1) * (y.value + 1)))" ;
                                    FAILWITH } } ;
                             DUG 2 ;
                             DROP 2 } } } } } } ;
           NIL operation ;
           PAIR } } }
