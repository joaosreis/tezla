{ storage
    (pair (pair (pair (big_map %addressToName address string) (address %admin))
                (pair (string %name) (big_map %ownerToBalance address int)))
          (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string)))
                (pair (big_map %tokenIDToScore string int)
                      (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))))) ;
  parameter
    (or (string %burnCertificate)
        (pair %mintCertificate
           (pair (address %address) (string %name))
           (pair (int %score) (string %token_id)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CDR ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               MEM ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)" ;
                      FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               PUSH bool False ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               UPDATE ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               NONE address ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               UPDATE ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               NONE int ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               UPDATE ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               DROP 2 } }
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CDR ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               CDR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               MEM ;
               IF { { PUSH string
                           "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))" ;
                      FAILWITH } }
                  { {} } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               PUSH bool True ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CDR ;
               CDR ;
               UPDATE ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CDR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               MEM ;
               IF { {} }
                  { { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      PUSH (option (set string)) (Some {}) ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      DROP } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CAR ;
               SENDER ;
               MEM ;
               IF { {} }
                  { { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      SOME ;
                      SENDER ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      DROP } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CAR ;
               CAR ;
               DUP ;
               DUG 2 ;
               GET ;
               IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
               PUSH bool True ;
               DIG 7 ;
               DUP ;
               DUG 8 ;
               CDR ;
               CDR ;
               UPDATE ;
               SOME ;
               SWAP ;
               UPDATE ;
               SWAP ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DIG 4 ;
               DUP ;
               DUG 5 ;
               CDR ;
               CAR ;
               SOME ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CDR ;
               CDR ;
               UPDATE ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CAR ;
               CAR ;
               SOME ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CDR ;
               CDR ;
               UPDATE ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CDR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               MEM ;
               IF { {} }
                  { { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      PUSH (option int) (Some 0) ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      DROP } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               PUSH int 1 ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CAR ;
               CDR ;
               CDR ;
               DIG 6 ;
               DUP ;
               DUG 7 ;
               CAR ;
               CAR ;
               GET ;
               IF_NONE { { PUSH string "Get-item:38" ; FAILWITH } } {} ;
               ADD ;
               SOME ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CAR ;
               CAR ;
               UPDATE ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               DUG 2 ;
               DROP 2 } } ;
         NIL operation ;
         PAIR } }
