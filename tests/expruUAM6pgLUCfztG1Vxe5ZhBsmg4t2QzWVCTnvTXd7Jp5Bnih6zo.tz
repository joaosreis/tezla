{ parameter
    (or (or (or (or (pair %addLiquidity (pair address nat) (pair nat timestamp))
                    (pair %approve (pair address nat) nat))
                (or (unit %default)
                    (pair %removeLiquidity
                       (pair (pair address address) (pair nat mutez))
                       (pair nat timestamp))))
            (or (or (pair %setBaker (option key_hash) bool)
                    (pair %tokenToXtz (pair (pair address address) (pair nat mutez)) timestamp))
                (or (unit %updateTokenPool) (nat %updateTokenPoolInternal))))
        (pair %xtzToToken (pair address nat) timestamp)) ;
  storage
    (pair (big_map %accounts address (pair (map %allowances address nat) (nat %balance)))
          (pair %s
             (pair (pair (bool %called_by_dexter) (bool %freeze_baker))
                   (pair (nat %lqt_total) (address %manager)))
             (pair (pair (address %token_address) (nat %token_pool)) (mutez %xtz_pool)))) ;
  code { EMPTY_MAP address nat ;
         DUP ;
         NIL operation ;
         SWAP ;
         LAMBDA
           mutez
           nat
           { PUSH mutez 1 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DROP } } ;
         SWAP ;
         LAMBDA
           nat
           mutez
           { PUSH mutez 1 ; DIG 1 ; DUP ; DUG 2 ; MUL ; DIP { DROP } } ;
         SWAP ;
         LAMBDA
           (pair (map address nat) (pair address (big_map address (pair (map address nat) nat))))
           (pair (map address nat) nat)
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE
               { PUSH nat 0 ; DIG 2 ; DUP ; DUG 3 ; PAIR }
               { DUP ; DIP { DROP } } ;
             DIP { DROP 2 } } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         NIL operation ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH unit Unit }
                            { PUSH string "add_liquidity: the current time must be less than the deadline." ;
                              FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string "add_liquidity: max_tokens_deposited must be greater than zero." ;
                              FAILWITH } ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string
                                   "add_liquidity: the amount of XTZ sent to the contract to be greater than zero." ;
                              FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string "add_liquidity: min_lqt_minted must be greater than zero." ;
                              FAILWITH } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         PAIR ;
                         PUSH nat 0 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 19 ;
                              DUP ;
                              DUG 20 ;
                              SWAP ;
                              EXEC ;
                              AMOUNT ;
                              DIG 20 ;
                              DUP ;
                              DUG 21 ;
                              SWAP ;
                              EXEC ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 10 ;
                              DUP ;
                              DUG 11 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 12 ;
                              DUP ;
                              DUG 13 ;
                              COMPARE ;
                              GE ;
                              IF { PUSH unit Unit }
                                 { PUSH string
                                        "add_liquidity: max_tokens_deposited must be greater than or equal to tokens_deposited." ;
                                   FAILWITH } ;
                              DIG 13 ;
                              DUP ;
                              DUG 14 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GE ;
                              IF { PUSH unit Unit }
                                 { PUSH string "add_liquidity: lqt_minted must be greater than min_lqt_minted." ;
                                   FAILWITH } ;
                              DIG 12 ;
                              DUP ;
                              DUG 13 ;
                              CAR ;
                              DIG 16 ;
                              DUP ;
                              DUG 17 ;
                              PAIR ;
                              DIG 23 ;
                              DUP ;
                              DUG 24 ;
                              SWAP ;
                              EXEC ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              ADD ;
                              DIG 14 ;
                              DUP ;
                              DUG 15 ;
                              DIG 15 ;
                              DUP ;
                              DUG 16 ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              PAIR ;
                              DIG 20 ;
                              DUP ;
                              DUG 21 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              ADD ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              ADD ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              AMOUNT ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              ADD ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CONTRACT %transfer (pair address (pair address nat)) ;
                              IF_NONE
                                { PUSH string "bad address for get_entrypoint (%transfer)" ; FAILWITH }
                                {} ;
                              DUP ;
                              PUSH mutez 0 ;
                              DIG 12 ;
                              DUP ;
                              DUG 13 ;
                              SELF ;
                              ADDRESS ;
                              PAIR ;
                              DIG 25 ;
                              DUP ;
                              DUG 26 ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              NIL operation ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CONS ;
                              DIG 15 ;
                              DUP ;
                              DUG 16 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 15 } }
                            { PUSH mutez 1000000 ;
                              AMOUNT ;
                              COMPARE ;
                              GE ;
                              IF { PUSH unit Unit }
                                 { PUSH string
                                        "add_liquidity: the initial liquidity amount must be greater than or equal to zero." ;
                                   FAILWITH } ;
                              AMOUNT ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              ADD ;
                              DIG 20 ;
                              DUP ;
                              DUG 21 ;
                              SWAP ;
                              EXEC ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 26 ;
                              DUP ;
                              DUG 27 ;
                              PAIR ;
                              DIG 15 ;
                              DUP ;
                              DUG 16 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              DIG 12 ;
                              DUP ;
                              DUG 13 ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              AMOUNT ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              ADD ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CONTRACT %transfer (pair address (pair address nat)) ;
                              IF_NONE
                                { PUSH string "bad address for get_entrypoint (%transfer)" ; FAILWITH }
                                {} ;
                              DUP ;
                              PUSH mutez 0 ;
                              DIG 16 ;
                              DUP ;
                              DUG 17 ;
                              SELF ;
                              ADDRESS ;
                              PAIR ;
                              DIG 19 ;
                              DUP ;
                              DUG 20 ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              NIL operation ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CONS ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 9 } } ;
                         DUP ;
                         DIP { DROP 13 } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         NEQ ;
                         IF { DUP ;
                              CAR ;
                              SENDER ;
                              PAIR ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              SWAP ;
                              EXEC ;
                              DUP ;
                              CAR ;
                              PUSH nat 0 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              GET ;
                              IF_NONE
                                { DIG 1 ; DUP ; DUG 2 }
                                { DIG 2 ; DUP ; DUG 3 ; DIG 1 ; DUP ; DUG 2 ; DIP { DROP 2 } } ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   CAR ;
                                   CDR ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   SWAP ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CAR ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CDR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   PAIR ;
                                   SOME ;
                                   SENDER ;
                                   UPDATE ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   DIP { DROP 2 } }
                                 { PUSH string "approve: current_allowance must equal account.allowances[spender]." ;
                                   FAILWITH } ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DIP { DROP 6 } }
                            { PUSH string
                                   "approve: the spender must not be the sender. The owner already has rights to all of the LQT." ;
                              FAILWITH } ;
                         DUP ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         PAIR ;
                         DIP { DROP 5 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         AMOUNT ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 3 } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         NIL operation ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH unit Unit }
                            { PUSH string "remove_liquidity: the current time must be less than the deadline." ;
                              FAILWITH } ;
                         PUSH mutez 0 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string "remove_liquidity: min_xtz_withdrawn must be greater than zero." ;
                              FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string "remove_liquidity: min_tokens_withdrawn must be greater than zero." ;
                              FAILWITH } ;
                         PUSH nat 0 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH unit Unit }
                            { PUSH string "remove_liquidity: lqt_burned must be greater than zero." ;
                              FAILWITH } ;
                         PUSH nat 0 ;
                         DUP ;
                         PUSH nat 0 ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CAR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         GET ;
                         IF_NONE
                           { PUSH string
                                  "remove_liquidity: the owner does not have any liquidity in this contract." ;
                             FAILWITH }
                           { DIG 13 ;
                             DUP ;
                             DUG 14 ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { DUP ;
                                  CAR ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE
                                    { PUSH string
                                           "remove_liquidity: the sender does not have an allowance from the give owner in this contract." ;
                                      FAILWITH }
                                    { DUP ;
                                      DIG 13 ;
                                      DUP ;
                                      DUG 14 ;
                                      COMPARE ;
                                      GT ;
                                      IF { PUSH string
                                                "remove_liquidity: lqt_burned cannot be greater than the sender's allowance." ;
                                           FAILWITH }
                                         { PUSH unit Unit } ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      DIP { DROP 3 } } ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  DIP { DROP 2 } }
                                { DIG 2 ; DUP ; DUG 3 } ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             SWAP ;
                             CDR ;
                             SWAP ;
                             PAIR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DIP { DROP 2 } } ;
                         DUP ;
                         CAR ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string
                                   "remove_liquidity: lqt_burned cannot be greater than the owner's balance." ;
                              FAILWITH }
                            { PUSH unit Unit } ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 25 ;
                         DUP ;
                         DUG 26 ;
                         SWAP ;
                         EXEC ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 23 ;
                         DUP ;
                         DUG 24 ;
                         SWAP ;
                         EXEC ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit }
                            { PUSH string
                                   "remove_liquidity: the amount of xtz withdrawn must be greater than or equal to min_xtz_withdrawn." ;
                              FAILWITH } ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit }
                            { PUSH string
                                   "remove_liquidity: the amount of tokens withdrawn must be greater than or equal to min_tokens_withdrawn." ;
                              FAILWITH } ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         CAR ;
                         DIG 19 ;
                         DUP ;
                         DUG 20 ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SUB ;
                         PUSH nat 0 ;
                         PUSH int 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         GE ;
                         IF { DUP ; DIG 2 ; DUP ; DUG 3 ; ABS ; DIP { DROP } }
                            { PUSH string
                                   "add_liquidity: account.balance - lqt_burned resulted in a negative number." ;
                              FAILWITH } ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         DIG 18 ;
                         DUP ;
                         DUG 19 ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         PAIR ;
                         DIG 25 ;
                         DUP ;
                         DUG 26 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         DIG 21 ;
                         DUP ;
                         DUG 22 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SUB ;
                         PUSH int 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              ABS ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP } }
                            { PUSH string
                                   "add_liquidity: storage.s.lqt_total - lqt_burned in a negative number." ;
                              FAILWITH } ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SUB ;
                         PUSH int 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              ABS ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP } }
                            { PUSH string
                                   "add_liquidity: storage.s.token_pool - tokens_withdrawn resulted in a negative number." ;
                              FAILWITH } ;
                         SENDER ;
                         DIG 28 ;
                         DUP ;
                         DUG 29 ;
                         COMPARE ;
                         NEQ ;
                         IF { DIG 25 ;
                              DUP ;
                              DUG 26 ;
                              DIG 15 ;
                              DUP ;
                              DUG 16 ;
                              CDR ;
                              SUB ;
                              PUSH int 0 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              GE ;
                              IF { DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   DIG 29 ;
                                   DUP ;
                                   DUG 30 ;
                                   PAIR ;
                                   DIG 36 ;
                                   DUP ;
                                   DUG 37 ;
                                   SWAP ;
                                   EXEC ;
                                   DUP ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   ABS ;
                                   SOME ;
                                   SENDER ;
                                   UPDATE ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 34 ;
                                   DUP ;
                                   DUG 35 ;
                                   SWAP ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIP { DROP 3 } }
                                 { PUSH string
                                        "remove_liquidity: sender_allowance - lqt_burned resulted in a negative number" ;
                                   FAILWITH } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DROP 3 } }
                            { DUP } ;
                         DUP ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SUB ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 28 ;
                         DUP ;
                         DUG 29 ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DUP ;
                         DIG 16 ;
                         DUP ;
                         DUG 17 ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (pair address (pair address nat)) ;
                         IF_NONE
                           { PUSH string "bad address for get_entrypoint (%transfer)" ; FAILWITH }
                           {} ;
                         DUP ;
                         PUSH mutez 0 ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         DIG 34 ;
                         DUP ;
                         DUG 35 ;
                         PAIR ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CONS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CONS ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 37 } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              PAIR ;
                              PUSH bool False ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              COMPARE ;
                              EQ ;
                              IF { NIL operation ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CAR ;
                                   SET_DELEGATE ;
                                   CONS ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   CAR ;
                                   CDR ;
                                   DIP { DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   DIP { DROP } }
                                 { PUSH string "set_baker: the baker is frozen." ; FAILWITH } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { PUSH string "set_baker: only the manager can set the baker." ; FAILWITH } ;
                         DUP ;
                         DIP { DROP 6 } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         NIL operation ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH unit Unit }
                            { PUSH string "token_to_xtz: the current time must be less than the deadline." ;
                              FAILWITH } ;
                         PUSH nat 997 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         MUL ;
                         PUSH nat 1000 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         MUL ;
                         ADD ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 997 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         MUL ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { PUSH unit Unit }
                            { PUSH string
                                   "token_to_xtz: xtz_bought must be greater than or equal to min_xtz_bought." ;
                              FAILWITH } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DIP { DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SUB ;
                         DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (pair address (pair address nat)) ;
                         IF_NONE
                           { PUSH string "bad address for get_entrypoint (%transfer)" ; FAILWITH }
                           {} ;
                         DUP ;
                         PUSH mutez 0 ;
                         DIG 12 ;
                         DUP ;
                         DUG 13 ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CONS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CONS ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 15 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { SELF %updateTokenPoolInternal ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %getBalance (pair address (contract nat)) ;
                         IF_NONE
                           { PUSH string "bad address for get_entrypoint (%getBalance)" ; FAILWITH }
                           {} ;
                         DUP ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         NIL operation ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         PUSH bool True ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 6 } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         NIL operation ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOT ;
                         OR ;
                         IF { PUSH string
                                   "update_token_pool_internal: this entrypoint may only be called by dexter itself via getBalance of tokenAddress." ;
                              FAILWITH }
                            { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              DIP { DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DROP } ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              CDR ;
                              PUSH bool False ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DIP { DROP 5 } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             NOW ;
             COMPARE ;
             LT ;
             IF { PUSH unit Unit }
                { PUSH string "xtz_to_token: the current time must be less than the deadline." ;
                  FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             SWAP ;
             EXEC ;
             AMOUNT ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             SWAP ;
             EXEC ;
             PUSH nat 997 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             MUL ;
             PUSH nat 1000 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MUL ;
             ADD ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             PUSH nat 997 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MUL ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { PUSH unit Unit }
                { PUSH string
                       "xtz_to_token: tokens_bought must be greater than or equal to min_tokens_bought." ;
                  FAILWITH } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             CDR ;
             CAR ;
             CDR ;
             SUB ;
             PUSH int 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF { DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  ABS ;
                  DIP { DUP ;
                        CAR ;
                        SWAP ;
                        CDR ;
                        DUP ;
                        CAR ;
                        SWAP ;
                        CDR ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        CAR } ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  DIP { DROP } }
                { PUSH string "xtz_to_token: token_pool - tokens_bought is negative." ;
                  FAILWITH } ;
             DUP ;
             AMOUNT ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CDR ;
             ADD ;
             DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CAR ;
             CAR ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE
               { PUSH string "bad address for get_entrypoint (%transfer)" ; FAILWITH }
               {} ;
             DUP ;
             PUSH mutez 0 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIG 14 ;
             DUP ;
             DUG 15 ;
             CAR ;
             CAR ;
             PAIR ;
             SELF ;
             ADDRESS ;
             PAIR ;
             TRANSFER_TOKENS ;
             NIL operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CONS ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIP { DROP 15 } } ;
         DIP { DROP 7 } } }
