{ storage
    (pair (pair (address %admin) (nat %all_auctions))
          (pair (big_map %auctions
                   nat
                   (pair (pair (pair (address %author) (pair (address %bidder) (nat %cut)))
                               (pair (timestamp %end_timestamp) (pair (address %nft_address) (nat %nft_id))))
                         (pair (pair (bytes %payment_data) (pair (string %payment_method) (nat %price)))
                               (pair (address %seller) (pair (timestamp %start_timestamp) (address %user))))))
                (set %operators address))) ;
  parameter
    (or (or (pair %bid
               (pair (nat %auction_id) (pair (address %bidder) (bytes %payment_data)))
               (pair (string %payment_method) (pair (nat %price) (address %user))))
            (pair %create_auction
               (pair (pair (address %author) (nat %cut))
                     (pair (timestamp %end_timestamp) (address %nft_address)))
               (pair (pair (nat %nft_id) (nat %price))
                     (pair (address %seller) (timestamp %start_timestamp)))))
        (or (list %update_operator (pair (address %operator) (bool %valid))) (nat %withdraw))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                 SWAP ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "AUC_INVALID_ADDRESS" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "AUC_SELLER_CANNOT_BID" ; FAILWITH } ;
                 PUSH nat 10 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 GET 3 ;
                 GET 4 ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 GET 7 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_NOT_START" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "AUC_AUCTION_IS_OVER" ; FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 CONTRACT %lock (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                 IF_NONE { PUSH int 891 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 GET 4 ;
                 PAIR %data %method ;
                 DUP 5 ;
                 GET 5 ;
                 PAIR %amount ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 GET 5 ;
                 DUP 4 ;
                 GET 3 ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                      GET 8 ;
                      CONTRACT %unlock (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                      IF_NONE { PUSH int 895 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DUP 5 ;
                      GET 3 ;
                      DUP 5 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 3 ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                      GET 3 ;
                      CAR ;
                      PAIR %data %method ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 4 ;
                      PAIR %amount ;
                      TRANSFER_TOKENS ;
                      CONS }
                    {} ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 898 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 10 ;
                 CAR ;
                 GET 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 899 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 DUP 10 ;
                 GET 5 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 900 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 DUP 10 ;
                 GET 6 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 901 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 10 ;
                 GET 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 902 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 CDR ;
                 DUP 9 ;
                 CAR ;
                 GET 4 ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 PUSH int 300 ;
                 NOW ;
                 DUP 5 ;
                 GET 3 ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SUB ;
                 COMPARE ;
                 LT ;
                 IF { DIG 2 ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      DUP ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 905 ; FAILWITH } {} ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      CDR ;
                      NOW ;
                      PUSH int 300 ;
                      ADD ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 }
                    {} ;
                 DUP 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 5 ;
                 GET 3 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 884 ; FAILWITH } {} ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 NOW ;
                 PUSH int 60 ;
                 DUP ;
                 PUSH int 1 ;
                 MUL ;
                 MUL ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                 NOW ;
                 PUSH int 60 ;
                 DUP ;
                 PUSH int 168 ;
                 MUL ;
                 MUL ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_LATE" ; FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 CDR ;
                 PUSH nat 100 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                 IF_NONE { PUSH int 859 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                 NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                 DUP 6 ;
                 GET 3 ;
                 CAR ;
                 SELF_ADDRESS ;
                 PAIR %to_ %token_id ;
                 PUSH nat 1 ;
                 PAIR %amount ;
                 CONS ;
                 DUP 6 ;
                 GET 5 ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 4 ;
                 DUP ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 GET 6 ;
                 PAIR %start_timestamp %user ;
                 DUP 6 ;
                 GET 5 ;
                 PAIR %seller ;
                 DUP 6 ;
                 GET 3 ;
                 CDR ;
                 PUSH string "" ;
                 PAIR %payment_method %price ;
                 PUSH bytes 0x ;
                 PAIR %payment_data ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 GET 4 ;
                 PAIR %nft_address %nft_id ;
                 DUP 7 ;
                 CAR ;
                 GET 3 ;
                 PAIR %end_timestamp ;
                 DIG 6 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 8 ;
                 GET 5 ;
                 PAIR %bidder %cut ;
                 DIG 7 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR %author ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 PUSH nat 1 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 ITER { DUP ;
                        CDR ;
                        IF { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             PUSH bool True ;
                             DIG 4 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             PUSH bool False ;
                             DIG 4 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } ;
                 DROP ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_IS_ONGOING" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 GET 5 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF { NIL operation ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 8 ;
                      CONTRACT %unlock (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                      IF_NONE { PUSH int 917 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DUP 5 ;
                      GET 3 ;
                      DUP 5 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 3 ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      CAR ;
                      PAIR %data %method ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 4 ;
                      PAIR %amount ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 8 ;
                      CONTRACT %pay (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                      IF_NONE { PUSH int 920 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DUP 5 ;
                      GET 3 ;
                      DUP 5 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 3 ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      CAR ;
                      PAIR %data %method ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 4 ;
                      PAIR %amount ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CAR ;
                      CONTRACT %update_balance (pair (nat %amount) (bool %increase)) ;
                      IF_NONE { PUSH int 924 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      PUSH bool True ;
                      PUSH nat 100 ;
                      DUP 7 ;
                      GET 3 ;
                      DUP 7 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      GET 4 ;
                      DUP 8 ;
                      GET 3 ;
                      DUP 8 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 4 ;
                      MUL ;
                      EDIV ;
                      IF_NONE { PUSH int 923 ; FAILWITH } { CAR } ;
                      PAIR %amount %increase ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                      GET 5 ;
                      CONTRACT %update_balance (pair (nat %amount) (bool %increase)) ;
                      IF_NONE
                        {}
                        { DROP ;
                          DUP 3 ;
                          GET 3 ;
                          DUP 3 ;
                          GET ;
                          IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                          GET 5 ;
                          CONTRACT %update_balance (pair (nat %amount) (bool %increase)) ;
                          IF_NONE { PUSH int 929 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          PUSH bool True ;
                          PUSH nat 100 ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          DUP 8 ;
                          GET 3 ;
                          DUP 8 ;
                          GET ;
                          IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                          GET 3 ;
                          GET 4 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 923 ; FAILWITH } { CAR } ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                          GET 3 ;
                          GET 4 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 929 ; FAILWITH } {} ;
                          PAIR %amount %increase ;
                          TRANSFER_TOKENS ;
                          CONS } }
                    { NIL operation } ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 CAR ;
                 GET 5 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                 NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                 DUP 7 ;
                 GET 3 ;
                 DUP 7 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 CAR ;
                 GET 6 ;
                 DUP 8 ;
                 GET 3 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 912 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 PAIR %to_ %token_id ;
                 PUSH nat 1 ;
                 PAIR %amount ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 NONE (pair (pair (pair (address %author) (pair (address %bidder) (nat %cut)))
                                  (pair (timestamp %end_timestamp) (pair (address %nft_address) (nat %nft_id))))
                            (pair (pair (bytes %payment_data) (pair (string %payment_method) (nat %price)))
                                  (pair (address %seller) (pair (timestamp %start_timestamp) (address %user))))) ;
                 DIG 5 ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
