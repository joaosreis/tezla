{ parameter
    (or (pair %listInstrument (address %address) (pair (string %isin) (string %name)))
        (string %unlistInstrument)) ;
  storage
    (pair (pair (address %eventSinkContractAddress) (address %registrarAddress))
          (pair (map %tokensByIsinCode
                   string
                   (pair (address %address) (pair (string %isin) (string %name))))
                (map %tokensByName
                   string
                   (pair (address %address) (pair (string %isin) (string %name)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SOURCE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "Source is not registrar" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             MEM ;
             IF { PUSH string "Token with this name already exists" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             MEM ;
             IF { PUSH string "Token with this isin already exists" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             DUP ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 5 ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 3 ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 5 ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CONTRACT %InstrumentListed
               (pair (address %address) (pair (string %isin) (string %name))) ;
             IF_NONE { PUSH string "test error" ; FAILWITH } { DROP } ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CONTRACT %InstrumentListed
               (pair (address %address) (pair (string %isin) (string %name))) ;
             IF_NONE { PUSH int 61 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             TRANSFER_TOKENS ;
             CONS }
           { SOURCE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "Source is not registrar" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             MEM ;
             IF {} { PUSH string "No Token with this isin exists" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CONTRACT %InstrumentUnlisted
               (pair (address %address) (pair (string %isin) (string %name))) ;
             IF_NONE { PUSH string "test error" ; FAILWITH } { DROP } ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CONTRACT %InstrumentUnlisted
               (pair (address %address) (pair (string %isin) (string %name))) ;
             IF_NONE { PUSH int 61 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CAR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             GET ;
             IF_NONE { PUSH int 33 ; FAILWITH } {} ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             NONE (pair (address %address) (pair (string %isin) (string %name))) ;
             DIG 6 ;
             CDR ;
             CAR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             GET ;
             IF_NONE { PUSH int 33 ; FAILWITH } {} ;
             CDR ;
             CDR ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             NONE (pair (address %address) (pair (string %isin) (string %name))) ;
             DIG 5 ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP } ;
         PAIR } }
