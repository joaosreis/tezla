{ storage
    (pair (pair (pair (address %administrator) (nat %currentTokenId))
                (pair (big_map %ledger address (set nat)) (string %name)))
          (pair (pair (big_map %operators (pair (address %owner) (address %operator)) unit)
                      (bool %paused))
                (pair (string %symbol)
                      (big_map %tokens
                         nat
                         (pair (pair (nat %amount) (nat %interestRate))
                               (pair (timestamp %issueTime) (pair (address %owner) (nat %period)))))))) ;
  parameter
    (or (or (pair %mint (nat %amout) (pair (nat %period) (address %to)))
            (address %set_administrator))
        (or (bool %set_pause)
            (or (list %transfer (pair (address %from_) (pair (address %to_) (nat %token_id))))
                (list %update_operators
                   (or (pair %add_operator (address %operator) (address %owner))
                       (pair %remove_operator (address %operator) (address %owner))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   MEM ;
                   IF { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CDR ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
                          PUSH bool True ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          UPDATE ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } }
                      { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          PUSH (set nat) {} ;
                          PUSH bool True ;
                          DIG 7 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          UPDATE ;
                          SOME ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CDR ;
                          CDR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } } ;
                   DUP ;
                   CDR ;
                   CAR ;
                   PUSH nat 12 ;
                   SWAP ;
                   COMPARE ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CDR ;
                   CAR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CDR ;
                   CDR ;
                   PAIR %owner %period ;
                   NOW ;
                   PAIR %issueTime ;
                   PUSH nat 100 ;
                   DIG 6 ;
                   CAR ;
                   PAIR %amount %interestRate ;
                   PAIR ;
                   SOME ;
                   DIG 5 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUP ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CAR ;
                   PUSH nat 1 ;
                   DIG 4 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   ADD ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   PAIR } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CDR ;
                   DIG 3 ;
                   PAIR ;
                   PAIR ;
                   PAIR } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   CAR ;
                   DIG 3 ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR } }
               { IF_LEFT
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       IF { { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } }
                          { {} } ;
                       DUP ;
                       ITER { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH bool True } { { DUP ; CAR ; SENDER ; COMPARE ; EQ } } ;
                              IF { PUSH bool True }
                                 { { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     SENDER ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     PAIR %owner %operator ;
                                     MEM } } ;
                              IF { {} } { { PUSH string "NOT_OPERATOR" ; FAILWITH } } ;
                              DUP ;
                              CAR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH string "Get-item:71" ; FAILWITH } } {} ;
                              CDR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { {} } { { PUSH string "NOT_OWNER" ; FAILWITH } } ;
                              DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
                              PUSH bool False ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 ;
                              DIG 2 ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              CDR ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUG 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              MEM ;
                              IF { { DIG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     CDR ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { { PUSH string "set_in_top-nil-some" ; FAILWITH } } {} ;
                                     PUSH bool True ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CDR ;
                                     CDR ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 } }
                                 { { DIG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CAR ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     PUSH (set nat) {} ;
                                     PUSH bool True ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CDR ;
                                     CDR ;
                                     UPDATE ;
                                     SOME ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     CDR ;
                                     CAR ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 } } ;
                              DROP } ;
                       DROP } }
                   { { DUP ;
                       ITER { DUP ;
                              IF_LEFT
                                { { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                    CDR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } } ;
                                    IF { {} }
                                       { { PUSH string
                                                "WrongCondition: (update.open_variant('add_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                           FAILWITH } } ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    PUSH (option unit) (Some Unit) ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                    CAR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    IF_LEFT { {} } { { DROP ; PUSH unit Unit ; FAILWITH } } ;
                                    DIG 9 ;
                                    DROP ;
                                    CDR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DUG 2 } }
                                { { DROP ;
                                    DUP ;
                                    SENDER ;
                                    SWAP ;
                                    IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                    CDR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } } ;
                                    IF { {} }
                                       { { PUSH string
                                                "WrongCondition: (update.open_variant('remove_operator').owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                           FAILWITH } } ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                    CAR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    IF_LEFT { { DROP ; PUSH unit Unit ; FAILWITH } } { {} } ;
                                    DIG 9 ;
                                    DROP ;
                                    CDR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    DUG 2 } } ;
                              DROP } ;
                       DROP } } } } ;
         NIL operation ;
         PAIR } }
