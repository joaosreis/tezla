{ parameter (pair (bytes %pack) (signature %signature)) ;
  storage (pair (pair (int %counter) (key %pk)) (string %string01)) ;
  code { NIL operation ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         PUSH bool True ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CDR ;
         CHECK_SIGNATURE ;
         COMPARE ;
         EQ ;
         IF { DIG 1 ;
              DUP ;
              DUG 2 ;
              UNPACK (pair (pair (int %counter) (key %pk)) (string %string01)) ;
              IF_NONE
                { PUSH string "no storage object" ; FAILWITH }
                { DUP ; DIP { DROP } } ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              CAR ;
              CAR ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              CAR ;
              CAR ;
              COMPARE ;
              EQ ;
              IF { DUP ;
                   PUSH int 1 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   ADD ;
                   DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                   PAIR ;
                   PAIR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DIP { DROP } ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   DIP { DROP 2 } }
                 { PUSH string "counter wrong" ; FAILWITH } ;
              DIG 2 ;
              DUP ;
              DUG 3 ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              DIP { DROP 3 } }
            { PUSH string "invalid signature" ; FAILWITH } ;
         DUP ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         PAIR ;
         DIP { DROP 5 } } }
