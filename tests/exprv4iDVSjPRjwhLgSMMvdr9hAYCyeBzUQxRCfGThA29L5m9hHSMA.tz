{ parameter
    (or (or (or (or (pair %balance_of
                       (list %requests (pair (address %owner) (nat %token_id)))
                       (contract %callback
                          (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                    (nat %call_add_allowed_activity))
                (or (address %call_change_admin) (nat %call_suspend_allowed_activity)))
            (or (or (address %change_activity_log) (address %change_admin_this))
                (or (list %register_tandem_claims
                       (pair (or %helpees
                                (list %admin_helpee address)
                                (list %signed_helpee (pair (pair (address %address) (key %pk)) (signature %signature))))
                             (pair (set %helpers address) (pair (set %activities nat) (nat %minutes)))))
                    (contract %token_metadata_registry address))))
        (or (list %transfer
               (pair (address %from_)
                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator))
                   (pair %remove_operator (address %owner) (address %operator)))))) ;
  storage
    (pair (pair (pair (address %admin) (map %allowed_activities nat bool))
                (pair (address %external_contract_address)
                      (big_map %ledger address (pair (set %allowances address) (map %balances nat nat)))))
          (pair (big_map %nonces address nat)
                (big_map %token_metadata
                   nat
                   (pair (pair (pair (nat %decimals) (map %extras string string))
                               (pair (string %name) (string %symbol)))
                         (nat %token_id))))) ;
  code { LAMBDA
           (pair address
                 (pair (pair (pair address (map nat bool))
                             (pair address (big_map address (pair (set address) (map nat nat)))))
                       (pair (big_map address nat)
                             (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))))
           (pair (set address) (map nat nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { EMPTY_MAP nat nat ; EMPTY_SET address ; PAIR } {} } ;
         LAMBDA
           (pair (pair nat address)
                 (pair (pair (pair address (map nat bool))
                             (pair address (big_map address (pair (set address) (map nat nat)))))
                       (pair (big_map address nat)
                             (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))))
           nat
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } ;
             PUSH nat 0 ;
             SWAP ;
             DIG 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             GET ;
             IF_NONE { DROP } { CDR ; SWAP ; GET ; IF_NONE {} { SWAP ; DROP } } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         LAMBDA
           (pair (lambda
                    (pair address
                          (pair (pair (pair address (map nat bool))
                                      (pair address (big_map address (pair (set address) (map nat nat)))))
                                (pair (big_map address nat)
                                      (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))))
                    (pair (set address) (map nat nat)))
                 (pair (pair (pair (pair (pair address (map nat bool))
                                         (pair address (big_map address (pair (set address) (map nat nat)))))
                                   (pair (big_map address nat)
                                         (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
                             address)
                       nat))
           (pair (pair (pair address (map nat bool))
                       (pair address (big_map address (pair (set address) (map nat nat)))))
                 (pair (big_map address nat)
                       (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             PUSH nat 0 ;
             GET ;
             IF_NONE
               { DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH nat 1 ;
                 GET ;
                 IF_NONE { DIG 4 } { DIG 5 ; ADD } ;
                 SOME ;
                 PUSH nat 1 ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 5 ;
                      DIG 2 ;
                      SUB ;
                      ABS ;
                      SOME ;
                      PUSH nat 0 ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH nat 0 ;
                      SOME ;
                      PUSH nat 0 ;
                      UPDATE ;
                      DIG 2 ;
                      CAR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH nat 1 ;
                      GET ;
                      IF_NONE { DIG 2 ; DIG 5 ; SUB ; ABS } { DIG 3 ; DIG 6 ; SUB ; ABS ; ADD } ;
                      SOME ;
                      PUSH nat 1 ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         LAMBDA
           (pair (lambda
                    (pair address
                          (pair (pair (pair address (map nat bool))
                                      (pair address (big_map address (pair (set address) (map nat nat)))))
                                (pair (big_map address nat)
                                      (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))))
                    (pair (set address) (map nat nat)))
                 (pair (pair (pair (pair (pair address (map nat bool))
                                         (pair address (big_map address (pair (set address) (map nat nat)))))
                                   (pair (big_map address nat)
                                         (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
                             address)
                       nat))
           (pair (pair (pair address (map nat bool))
                       (pair address (big_map address (pair (set address) (map nat nat)))))
                 (pair (big_map address nat)
                       (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             CDR ;
             PUSH nat 1 ;
             GET ;
             IF_NONE
               { DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH nat 0 ;
                 GET ;
                 IF_NONE { DIG 4 } { DIG 5 ; ADD } ;
                 SOME ;
                 PUSH nat 0 ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 5 ;
                      DIG 2 ;
                      SUB ;
                      ABS ;
                      SOME ;
                      PUSH nat 1 ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH nat 0 ;
                      SOME ;
                      PUSH nat 1 ;
                      UPDATE ;
                      DIG 2 ;
                      CAR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH nat 0 ;
                      GET ;
                      IF_NONE { DIG 2 ; DIG 5 ; SUB ; ABS } { DIG 3 ; DIG 6 ; SUB ; ABS ; ADD } ;
                      SOME ;
                      PUSH nat 0 ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DIG 4 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "This contract does not accept tezi deposits" ; FAILWITH }
            {} ;
         IF_LEFT
           { DIG 5 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         NIL (pair (pair address nat) nat) ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         ITER { SWAP ;
                                DUP ;
                                CDR ;
                                DUP ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                CDR ;
                                PAIR ;
                                PAIR ;
                                DIG 6 ;
                                DUP ;
                                DUG 7 ;
                                SWAP ;
                                EXEC ;
                                DIG 3 ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DIG 2 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 3 ;
                                CDR ;
                                PAIR ;
                                CONS ;
                                PAIR } ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH bool True ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONTRACT %add_allowed_activity nat ;
                         IF_NONE { PUSH string "not a correct contract" ; FAILWITH } {} ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONTRACT %change_admin address ;
                         IF_NONE { PUSH string "not a correct contract" ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { PUSH string "ACTIVITY_DOES_NOT_EXIST" ; FAILWITH }
                           { DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PUSH bool False ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 4 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR } ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONTRACT %suspend_allowed_activity nat ;
                         IF_NONE { PUSH string "not a correct contract" ; FAILWITH } {} ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } } }
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { IF_LEFT
                       { MAP { DUP ;
                               CDR ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               DIG 2 ;
                               CDR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               PAIR } ;
                         DUP ;
                         DUG 2 ;
                         ITER { DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                IF_LEFT
                                  { DUP ;
                                    SIZE ;
                                    SWAP ;
                                    SIZE ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    CDR ;
                                    EDIV ;
                                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                    CAR ;
                                    PAIR }
                                  { DUP ;
                                    SIZE ;
                                    SWAP ;
                                    SIZE ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    CDR ;
                                    EDIV ;
                                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                    CAR ;
                                    PAIR } ;
                                DUP ;
                                CAR ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                CDR ;
                                CAR ;
                                SIZE ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                CDR ;
                                CDR ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                CDR ;
                                CDR ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                CDR ;
                                CAR ;
                                SIZE ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                MUL ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH string "INCONSISTENT_MINUTES_PER_RECIPIENT" ; FAILWITH } {} ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                CDR ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                MUL ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH string "INCONSISTENT_MINUTES_PER_SENDER" ; FAILWITH } {} ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                CDR ;
                                IF_LEFT
                                  { DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    NEQ ;
                                    IF { PUSH string "CALLER_NOT_ADMIN" ; FAILWITH } {} ;
                                    DIG 3 ;
                                    SWAP ;
                                    ITER { SWAP ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DUG 2 ;
                                           PAIR ;
                                           PAIR ;
                                           DIG 6 ;
                                           DUP ;
                                           DUG 7 ;
                                           SWAP ;
                                           EXEC } ;
                                    DIG 2 ;
                                    DROP ;
                                    DIG 2 ;
                                    CDR ;
                                    CAR ;
                                    ITER { SWAP ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DUG 2 ;
                                           PAIR ;
                                           PAIR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           SWAP ;
                                           EXEC } ;
                                    SWAP ;
                                    DROP }
                                  { NIL (pair (pair (pair (set nat) nat) (pair key (set address))) (pair address signature)) ;
                                    SWAP ;
                                    ITER { DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           DIG 6 ;
                                           DUP ;
                                           DUG 7 ;
                                           CDR ;
                                           CAR ;
                                           DIG 3 ;
                                           CAR ;
                                           CDR ;
                                           PAIR ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           DIG 7 ;
                                           DUP ;
                                           DUG 8 ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           CONS } ;
                                    DIG 2 ;
                                    DROP ;
                                    DIG 3 ;
                                    DROP ;
                                    DIG 2 ;
                                    SWAP ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CDR ;
                                           CAR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CAR ;
                                           GET ;
                                           IF_NONE { PUSH nat 0 } {} ;
                                           DUP ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           DUP ;
                                           CAR ;
                                           CDR ;
                                           CAR ;
                                           HASH_KEY ;
                                           IMPLICIT_ACCOUNT ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           SWAP ;
                                           ADDRESS ;
                                           COMPARE ;
                                           EQ ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DIG 5 ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           PACK ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CDR ;
                                           DIG 3 ;
                                           CAR ;
                                           CDR ;
                                           CAR ;
                                           CHECK_SIGNATURE ;
                                           AND ;
                                           NOT ;
                                           IF { PUSH string "INVALID_SIGNATURE" ; FAILWITH } {} ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CDR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CDR ;
                                           CAR ;
                                           PUSH nat 1 ;
                                           DIG 3 ;
                                           ADD ;
                                           DIG 4 ;
                                           DUP ;
                                           DUG 5 ;
                                           CDR ;
                                           CAR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           PAIR ;
                                           SWAP ;
                                           CAR ;
                                           PAIR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           SWAP ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DUG 2 ;
                                           PAIR ;
                                           PAIR ;
                                           DIG 5 ;
                                           DUP ;
                                           DUG 6 ;
                                           SWAP ;
                                           EXEC ;
                                           SWAP ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           ITER { SWAP ;
                                                  DIG 2 ;
                                                  DUP ;
                                                  DUG 3 ;
                                                  DUG 2 ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DIG 3 ;
                                                  DUP ;
                                                  DUG 4 ;
                                                  SWAP ;
                                                  EXEC } } ;
                                    SWAP ;
                                    DROP } } ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         NIL (list (pair nat nat)) ;
                         DIG 2 ;
                         ITER { DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                SIZE ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CDR ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR ;
                                NIL (pair nat nat) ;
                                DIG 3 ;
                                CAR ;
                                CAR ;
                                ITER { SWAP ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       GET ;
                                       IF_NONE
                                         { PUSH string "UNKNOWN_ACTIVITY" ; FAILWITH }
                                         { IF {} { PUSH string "ACTIVITY_SUSPENDED" ; FAILWITH } } ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       DIG 2 ;
                                       PAIR ;
                                       CONS } ;
                                SWAP ;
                                DROP ;
                                CONS } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONTRACT %update_activity_balance (list (list (pair nat nat))) ;
                         IF_NONE { PUSH string "not a correct contract" ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             IF_LEFT
               { ITER { DUP ;
                        DUG 2 ;
                        CAR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        CDR ;
                        ITER { SWAP ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               DUP ;
                               SENDER ;
                               COMPARE ;
                               NEQ ;
                               IF { SWAP ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    SWAP ;
                                    GET ;
                                    IF_NONE { PUSH string "NoAccount" ; FAILWITH } {} ;
                                    CAR ;
                                    SENDER ;
                                    MEM ;
                                    IF { PUSH unit Unit } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } }
                                  { DROP 2 ; PUSH unit Unit } ;
                               DROP ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               CAR ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               DIG 4 ;
                               CDR ;
                               CDR ;
                               PAIR ;
                               PAIR ;
                               PUSH nat 0 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               IF {} { PUSH string "CAN_ONLY_TRANSFER_TOKENID_0" ; FAILWITH } ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               PUSH nat 0 ;
                               PAIR ;
                               PAIR ;
                               DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               SWAP ;
                               EXEC ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               COMPARE ;
                               LT ;
                               IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               PAIR ;
                               DIG 6 ;
                               DUP ;
                               DUG 7 ;
                               SWAP ;
                               EXEC ;
                               DUP ;
                               CDR ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CAR ;
                               DIG 3 ;
                               SUB ;
                               ABS ;
                               SOME ;
                               PUSH nat 0 ;
                               UPDATE ;
                               SWAP ;
                               CAR ;
                               PAIR ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CDR ;
                               DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               DIG 2 ;
                               DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 4 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               DUP ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               CDR ;
                               PAIR ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               SWAP ;
                               EXEC ;
                               DUP ;
                               CDR ;
                               PUSH nat 1 ;
                               GET ;
                               IF_NONE
                                 { DUP ;
                                   CDR ;
                                   PUSH nat 0 ;
                                   GET ;
                                   IF_NONE
                                     { DUP ;
                                       CDR ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       CAR ;
                                       CAR ;
                                       SOME ;
                                       PUSH nat 0 ;
                                       UPDATE ;
                                       SWAP ;
                                       CAR ;
                                       PAIR }
                                     { SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       CAR ;
                                       CAR ;
                                       DIG 2 ;
                                       ADD ;
                                       SOME ;
                                       PUSH nat 0 ;
                                       UPDATE ;
                                       SWAP ;
                                       CAR ;
                                       PAIR } }
                                 { DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CAR ;
                                   CAR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   GE ;
                                   IF { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        CAR ;
                                        DIG 2 ;
                                        SUB ;
                                        ABS ;
                                        SOME ;
                                        PUSH nat 1 ;
                                        UPDATE ;
                                        SWAP ;
                                        CAR ;
                                        PAIR }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        PUSH nat 0 ;
                                        SOME ;
                                        PUSH nat 1 ;
                                        UPDATE ;
                                        DIG 2 ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        PUSH nat 0 ;
                                        GET ;
                                        IF_NONE
                                          { DIG 2 ; DIG 4 ; DUP ; DUG 5 ; CAR ; CAR ; SUB ; ABS }
                                          { DIG 3 ; DIG 5 ; DUP ; DUG 6 ; CAR ; CAR ; SUB ; ABS ; ADD } ;
                                        SOME ;
                                        PUSH nat 0 ;
                                        UPDATE ;
                                        SWAP ;
                                        CAR ;
                                        PAIR } } ;
                               DIG 3 ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               DIG 3 ;
                               DIG 5 ;
                               CAR ;
                               CDR ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               PAIR } ;
                        CAR } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 NIL operation ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 ITER { SWAP ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        LAMBDA
                          (pair (lambda
                                   (pair address
                                         (pair (pair (pair address (map nat bool))
                                                     (pair address (big_map address (pair (set address) (map nat nat)))))
                                               (pair (big_map address nat)
                                                     (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat)))))
                                   (pair (set address) (map nat nat)))
                                (pair (pair (pair (pair (pair address (map nat bool))
                                                        (pair address (big_map address (pair (set address) (map nat nat)))))
                                                  (pair (big_map address nat)
                                                        (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
                                            (pair address address))
                                      bool))
                          (pair (pair (pair address (map nat bool))
                                      (pair address (big_map address (pair (set address) (map nat nat)))))
                                (pair (big_map address nat)
                                      (big_map nat (pair (pair (pair nat (map string string)) (pair string string)) nat))))
                          { DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            DIG 2 ;
                            CDR ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            SWAP ;
                            DROP ;
                            SENDER ;
                            COMPARE ;
                            NEQ ;
                            IF { PUSH string "Only owner can update operators" ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            PAIR ;
                            DIG 4 ;
                            SWAP ;
                            EXEC ;
                            DUP ;
                            CAR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            DIG 3 ;
                            CDR ;
                            DIG 6 ;
                            IF { DIG 3 ; DIG 4 ; DUP ; DUG 5 ; CAR ; PUSH bool True ; SWAP ; UPDATE }
                               { DIG 3 ; DIG 4 ; DUP ; DUG 5 ; CAR ; PUSH bool False ; SWAP ; UPDATE } ;
                            PAIR ;
                            DIG 3 ;
                            CDR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DIG 2 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR } ;
                        SWAP ;
                        APPLY ;
                        DIG 2 ;
                        IF_LEFT { LEFT (pair address address) } { RIGHT (pair address address) } ;
                        IF_LEFT
                          { PUSH bool True ; SWAP ; DIG 3 ; PAIR ; PAIR ; EXEC }
                          { PUSH bool False ; SWAP ; DIG 3 ; PAIR ; PAIR ; EXEC } } ;
                 SWAP ;
                 DROP ;
                 NIL operation ;
                 PAIR } } } }
