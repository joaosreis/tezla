{ parameter
    (or (or (or (unit %ammend)
                (pair %origin_entry
                   (pair (string %ocasion) (string %proposal))
                   (timestamp %time_out)))
            (unit %parties_join))
        (string %vote)) ;
  storage
    (pair (pair (pair (pair (pair (pair (string %ammendment) (bool %immutability)) (string %ocasion))
                            (list %parties address))
                      (string %proposal))
                (timestamp %time_out))
          (map %votes address string)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DROP }
                   { PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CAR ; CAR ; CAR ; CAR ; CAR ; CDR } ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.immutability == False" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     { CAR ; CDR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     { CAR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CAR } ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     DROP ;
                     DROP } }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CDR } ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string "WrongCondition: sp.now < self.data.time_out" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR ; CAR ; CDR } ;
                 ITER { DUP ;
                        SENDER ;
                        COMPARE ;
                        NEQ ;
                        IF {} { PUSH string "WrongCondition: e != sp.sender" ; FAILWITH } ;
                        DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CAR } ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 { CAR ; CAR ; CAR ; CDR } ;
                 SENDER ;
                 CONS ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 DROP ;
                 DROP } }
           { SWAP ;
             DUP ;
             DUG 2 ;
             { CAR ; CDR } ;
             NOW ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: sp.now < self.data.time_out" ; FAILWITH } ;
             DUP ;
             PUSH string "Y" ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True } { DUP ; PUSH string "N" ; COMPARE ; EQ } ;
             IF { PUSH bool True } { DUP ; PUSH string "Abs" ; COMPARE ; EQ } ;
             IF {}
                { PUSH string
                       "WrongCondition: ( ( params.vote == 'Y' ) | ( params.vote == 'N' ) ) | ( params.vote == 'Abs' ) " ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             ITER { CAR ;
                    DUP ;
                    SENDER ;
                    COMPARE ;
                    NEQ ;
                    IF {} { PUSH string "WrongCondition: e != sp.sender" ; FAILWITH } ;
                    DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SOME ;
             SENDER ;
             UPDATE ;
             SWAP ;
             PAIR ;
             DUG 2 ;
             DROP ;
             DROP } ;
         NIL operation ;
         PAIR } }
