{ parameter
    (or (or (or (unit %addLiquidity) (unit %deposit))
            (or (int %updateExchangeRate) (address %updateTokenAddress)))
        (unit %withdraw)) ;
  storage
    (pair (pair (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                      (int %exchangeRate))
                (pair (mutez %liquidity) (address %owner)))
          (address %tokenAddress)) ;
  code { LAMBDA
           mutez
           nat
           { DUP ;
             PUSH mutez 1000000 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DROP } } ;
         LAMBDA nat int { DUP ; PUSH int 0 ; ADD ; DIP { DROP } } ;
         DUP ;
         LAMBDA
           int
           nat
           { DUP ;
             PUSH nat 0 ;
             PAIR ;
             DIP { DUP } ;
             SWAP ;
             PUSH int 0 ;
             SWAP ;
             COMPARE ;
             GE ;
             IF { DUP ; DIP 2 { DUP } ; DIG 2 ; ABS ; SWAP ; CDR ; SWAP ; PAIR }
                { PUSH string "Not posible to conver from negative values" ; FAILWITH } ;
             DUP ;
             CAR ;
             DIP { DROP 3 } } ;
         SWAP ;
         NIL operation ;
         SWAP ;
         LAMBDA
           bool
           address
           { DUP ;
             SENDER ;
             SWAP ;
             IF { PUSH address "tz1MZ4GPjAA2gZxKTozJt8Cu5Gvu6WU2ikZ4" } { DUP } ;
             DIP { DROP 2 } } ;
         SWAP ;
         LAMBDA
           (pair (lambda nat int)
                 (pair (pair (int %0) (mutez %1))
                       (pair %2
                          (pair (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                      (int %exchangeRate))
                                (pair (mutez %liquidity) (address %owner)))
                          (address %tokenAddress))))
           mutez
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             PUSH int 100 ;
             SWAP ;
             MUL ;
             PUSH int 522119 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             CDR ;
             PUSH mutez 1 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIP { DIP 3 { DUP } ; DIG 3 } ;
             EXEC ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DIP 3 { DUP } ; DIG 3 ; CDR ; CAR ; CAR ; CDR } ;
             MUL ;
             DIP { DUP } ;
             MUL ;
             PUSH int 10000 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             ADD ;
             DUP ;
             ABS ;
             PUSH mutez 1 ;
             SWAP ;
             MUL ;
             DUP ;
             DIP { DROP 8 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (or %0
                    (or (or (or (address %addOwner) (pair %approve (address %0) (nat %1)))
                            (or (nat %burn) (pair %getAllowance (pair (address %0) (address %1)) (contract %2 nat))))
                        (or (or (pair %getBalance (address %0) (contract %1 nat))
                                (pair %getTotalSupply (unit %0) (contract %1 nat)))
                            (or (nat %mint) (pair %mintTo (address %0) (nat %1)))))
                    (pair %transfer (pair (address %0) (address %1)) (nat %2)))
                 (pair %1
                    (pair (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                (int %exchangeRate))
                          (pair (mutez %liquidity) (address %owner)))
                    (address %tokenAddress)))
           operation
           { DUP ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (or (address %addOwner) (pair %approve (address %0) (nat %1)))
                           (or (nat %burn) (pair %getAllowance (pair (address %0) (address %1)) (contract %2 nat))))
                       (or (or (pair %getBalance (address %0) (contract %1 nat))
                               (pair %getTotalSupply (unit %0) (contract %1 nat)))
                           (or (nat %mint) (pair %mintTo (address %0) (nat %1)))))
                   (pair %transfer (pair (address %0) (address %1)) (nat %2))) ;
             IF_NONE
               { PUSH string "Contract not found." ; FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DUP ; PUSH mutez 0 } ;
             TRANSFER_TOKENS ;
             DUP ;
             DIP { DROP 3 } } ;
         DIP 7 { DUP } ;
         DIG 7 ;
         CDR ;
         DIP 8 { DUP } ;
         DIG 8 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIP 3 { DUP } ;
                     DIG 3 ;
                     DUP ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to add liquidity" ;
                          FAILWITH }
                        { DIP { DUP } ;
                          SWAP ;
                          PUSH mutez 0 ;
                          AMOUNT ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH string "No tez transferred!" ; FAILWITH }
                             { DIP 2 { DUP } ;
                               DIG 2 ;
                               DIP 3 { DUP } ;
                               DIG 3 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               AMOUNT ;
                               ADD ;
                               DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               DIP { DUP } ;
                               SWAP ;
                               DIP { DUP } ;
                               SWAP ;
                               DIP { DROP 2 } } ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP { DUP } ;
                          SWAP ;
                          DIP { DROP 3 } } ;
                     DIP 10 { DUP } ;
                     DIG 10 ;
                     DIP { DUP } ;
                     PAIR ;
                     DIP { DROP 4 } }
                   { DIP 3 { DUP } ;
                     DIG 3 ;
                     DIP 6 { DUP } ;
                     DIG 6 ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     PAIR ;
                     DIP { DIP 9 { DUP } ; DIG 9 ; DIP { DIP 10 { DUP } ; DIG 10 } ; PAIR } ;
                     PAIR ;
                     DIP { DUP ;
                           NIL operation ;
                           PAIR ;
                           DIP { DIP 11 { DUP } ; DIG 11 ; DIP { DIP 5 { DUP } ; DIG 5 } ; PAIR } ;
                           PAIR } ;
                     PAIR ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "No tez transferred!" ; FAILWITH }
                        { DIP 8 { DUP } ;
                          DIG 8 ;
                          PUSH bool False ;
                          EXEC ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIP 9 { DUP } ;
                          DIG 9 ;
                          DIP { DUP } ;
                          PAIR ;
                          DIP { DIP { DUP } ; SWAP ; DIP { DIP 3 { DUP } ; DIG 3 } ; PAIR } ;
                          PAIR ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP { DIP { DUP } ; SWAP } ;
                          GET ;
                          IF_NONE
                            { DIP 4 { DUP } ;
                              DIG 4 ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              AMOUNT ;
                              ADD ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { AMOUNT ; NOW ; PAIR ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                              UPDATE ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              CAR ;
                              NOW ;
                              SUB ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              CDR ;
                              DIP { DIP { DUP } ;
                                    SWAP ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                    PAIR ;
                                    DIP { DIP 7 { DUP } ; DIG 7 } ;
                                    PAIR ;
                                    DIP { DIP 13 { DUP } ; DIG 13 } ;
                                    EXEC } ;
                              ADD ;
                              AMOUNT ;
                              ADD ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              DIP { DUP ; CDR ; NOW ; PAIR ; SOME ; DIP { DIP 4 { DUP } ; DIG 4 } } ;
                              UPDATE ;
                              DIP 8 { DUP } ;
                              DIG 8 ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              CDR ;
                              CAR ;
                              AMOUNT ;
                              ADD ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 6 { DUP } ;
                              DIG 6 ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 6 } } ;
                          DUP ;
                          CDR ;
                          CDR ;
                          DIP 17 { DUP } ;
                          DIG 17 ;
                          AMOUNT ;
                          EXEC ;
                          DUP ;
                          DIP { DIP 17 { DUP } ; DIG 17 } ;
                          EXEC ;
                          DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CDR } ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DUP ;
                          DIP { DIP 17 { DUP } ; DIG 17 } ;
                          EXEC ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          CDR ;
                          CAR ;
                          DIP { PUSH int 2000000000000000000 ; ABS } ;
                          PAIR ;
                          RIGHT nat ;
                          RIGHT (or (pair (address %0) (contract %1 nat)) (pair (unit %0) (contract %1 nat))) ;
                          RIGHT
                            (or (or address (pair (address %0) (nat %1)))
                                (or nat (pair (pair (address %0) (address %1)) (contract %2 nat)))) ;
                          LEFT (pair (pair (address %0) (address %1)) (nat %2)) ;
                          DIP { DIP 3 { DUP } ; DIG 3 } ;
                          PAIR ;
                          DIP { DIP 14 { DUP } ; DIG 14 } ;
                          EXEC ;
                          DIP 9 { DUP } ;
                          DIG 9 ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          CDR ;
                          CDR ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 5 { DUP } ;
                          DIG 5 ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIP { DUP } ;
                          SWAP ;
                          NIL operation ;
                          SWAP ;
                          CONS ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DIP { DROP 9 } } ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIP { DUP ; CDR ; CAR ; CDR } ;
                     PAIR ;
                     DIP { DROP 4 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to update the exchange rate" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CAR } ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to update the token address" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CAR } ;
                     PAIR ;
                     DIP { DROP 6 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIP { DUP } ;
             SWAP ;
             DIP 5 { DUP } ;
             DIG 5 ;
             PUSH bool False ;
             EXEC ;
             DUP ;
             DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CAR } ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             NOW ;
             SUB ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP { DUP ;
                   DIP { DIP { DUP } ; SWAP ; CDR } ;
                   PAIR ;
                   DIP { DIP 3 { DUP } ; DIG 3 } ;
                   PAIR ;
                   DIP { DIP 7 { DUP } ; DIG 7 } ;
                   EXEC } ;
             ADD ;
             DIP 3 { DUP } ;
             DIG 3 ;
             NIL operation ;
             PAIR ;
             DIP { DIP 4 { DUP } ; DIG 4 ; DIP { DUP } ; PAIR } ;
             PAIR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DIP 5 { DUP } ; DIG 5 ; CAR ; CDR ; CAR } ;
             COMPARE ;
             GT ;
             IF { PUSH string "No tez to withdraw!" ; FAILWITH }
                { DIP 4 { DUP } ;
                  DIG 4 ;
                  DIP { DIP 5 { DUP } ;
                        DIG 5 ;
                        CAR ;
                        CAR ;
                        CAR ;
                        NONE (pair (timestamp %blockTimestamp) (mutez %tezAmount)) } ;
                  UPDATE ;
                  DIP 6 { DUP } ;
                  DIG 6 ;
                  DIP { DUP } ;
                  SWAP ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  CDR ;
                  CAR ;
                  DIP { DIP 4 { DUP } ; DIG 4 } ;
                  SUB ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  DIP 7 { DUP } ;
                  DIG 7 ;
                  CONTRACT unit ;
                  IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                  DIP 5 { DUP } ;
                  DIG 5 ;
                  DIP { DUP } ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  DIP 5 { DUP } ;
                  DIG 5 ;
                  DIP 4 { DUP } ;
                  DIG 4 ;
                  DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  DIP 3 { DUP } ;
                  DIG 3 ;
                  DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  DIP { DUP } ;
                  SWAP ;
                  NIL operation ;
                  SWAP ;
                  CONS ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                  PAIR ;
                  PAIR ;
                  DIP { DROP 5 } } ;
             DUP ;
             CAR ;
             CAR ;
             DIP { DUP ; CDR ; CAR } ;
             PAIR ;
             DIP { DROP 8 } } ;
         DIP { DROP 9 } } }
