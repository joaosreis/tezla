{ parameter
    (or (or (or (or (or (pair %getAdministrator unit (contract address))
                        (or (address %setAdministrator) (unit %acceptOwnership)))
                    (or (or (address %setBurningManager) (pair %getBurningManager unit (contract address)))
                        (or (address %setMintingManager) (pair %getMintingManager unit (contract address)))))
                (or (or (address %setAdjustingManager)
                        (or (pair %getAdjustingManager unit (contract address))
                            (address %addActivatingManager)))
                    (or (or (address %removeActivatingManager)
                            (pair %getActivatingManagers unit (contract (set address))))
                        (or (address %setDeactivatingManager)
                            (pair %getDeactivatingManager unit (contract address))))))
            (or (or (or (pair %transfer (address :from) (pair (address :to) (nat :value)))
                        (or (pair %approve (address :spender) (nat :value))
                            (pair %getAllowance (pair (address :owner) (address :spender)) (contract nat))))
                    (or (pair %getBalance (address :owner) (contract nat))
                        (or (pair %getTotalMinted unit (contract nat))
                            (pair %getHardCap unit (lambda nat nat)))))
                (or (or (pair %getCapReduction unit (lambda nat nat))
                        (or (pair %getEffectiveCap unit (lambda nat nat)) (bool %setPause)))
                    (or (or (pair %getPause unit (lambda bool bool)) (pair %mint (address :to) (nat :value)))
                        (or (list %mintBatch (pair (address :to) (nat :value)))
                            (pair %burn (address :from) (nat :value)))))))
        (or (or (address %activateWallet)
                (or (address %deactivateWallet) (pair %checkActiveWallet address (lambda bool bool))))
            (or (or (address %suspendWallet)
                    (or (address %unsuspendWallet)
                        (pair %checkSuspendedWallet address (lambda bool bool))))
                (or (or (address %adjustCapTable)
                        (pair %setDistributionSource (address :source) (nat :totalAmount)))
                    (or (pair %getDistributionList unit (lambda (option address) (option address)))
                        (or (nat :size %nextBatchTransfer)
                            (list %performBatchTransfer (pair (address :to) (nat :value))))))))) ;
  storage
    (pair (pair (big_map address (pair nat (pair (map address nat) bool)))
                (pair (pair address (pair (option address) address))
                      (pair (pair address address) (pair (set address) address))))
          (pair (pair (pair nat nat) (pair nat bool))
                (pair (option address) (pair (option address) nat)))) ;
  code { CAST (pair (or (or (or (or (or (pair unit (contract address)) (or address unit))
                                    (or (or address (pair unit (contract address))) (or address (pair unit (contract address)))))
                                (or (or address (or (pair unit (contract address)) address))
                                    (or (or address (pair unit (contract (set address))))
                                        (or address (pair unit (contract address))))))
                            (or (or (or (pair address (pair address nat))
                                        (or (pair address nat) (pair (pair address address) (contract nat))))
                                    (or (pair address (contract nat)) (or (pair unit (contract nat)) (pair unit (lambda nat nat)))))
                                (or (or (pair unit (lambda nat nat)) (or (pair unit (lambda nat nat)) bool))
                                    (or (or (pair unit (lambda bool bool)) (pair address nat))
                                        (or (list (pair address nat)) (pair address nat))))))
                        (or (or address (or address (pair address (lambda bool bool))))
                            (or (or address (or address (pair address (lambda bool bool))))
                                (or (or address (pair address nat))
                                    (or (pair unit (lambda (option address) (option address))) (or nat (list (pair address nat))))))))
                    (pair (pair (big_map address (pair nat (pair (map address nat) bool)))
                                (pair (pair address (pair (option address) address))
                                      (pair (pair address address) (pair (set address) address))))
                          (pair (pair (pair nat nat) (pair nat bool))
                                (pair (option address) (pair (option address) nat))))) ;
         NIL operation ;
         SWAP ;
         DUP ;
         CAR ;
         DIP { CDR } ;
         DUP ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { DUP ;
                             CDR ;
                             AMOUNT ;
                             DIP 5 { DUP } ;
                             DIG 5 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             TRANSFER_TOKENS ;
                             DUG 4 ;
                             DIP 4 { CONS } ;
                             DROP }
                           { IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 SOME ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP }
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 IF_NONE
                                   { UNIT ; PUSH string "NoNewAdmin" ; PAIR ; FAILWITH }
                                   { DUP ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     IF {} { UNIT ; PUSH string "SenderNotNewAdmin" ; PAIR ; FAILWITH } ;
                                     DROP } ;
                                 SENDER ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 NONE address ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP } } }
                       { IF_LEFT
                           { IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP }
                               { DUP ;
                                 CDR ;
                                 AMOUNT ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 TRANSFER_TOKENS ;
                                 DUG 4 ;
                                 DIP 4 { CONS } ;
                                 DROP } }
                           { IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP }
                               { DUP ;
                                 CDR ;
                                 AMOUNT ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 TRANSFER_TOKENS ;
                                 DUG 4 ;
                                 DIP 4 { CONS } ;
                                 DROP } } } }
                   { IF_LEFT
                       { IF_LEFT
                           { DIP 3 { DUP } ;
                             DIG 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                             DUP ;
                             DUG 3 ;
                             DIP 3
                                 { DIP { DUP ; CAR ; CDR } ;
                                   DIP { DUP ; DIP { CAR } ; CDR } ;
                                   DIP { DUP ; DIP { CDR } ; CAR } ;
                                   DIP { DUP ; DIP { CAR } ; CDR } ;
                                   DIP { DROP } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   DIP { DUP ; DIP { CDR } ; CAR } ;
                                   DIP { DUP ; DIP { CAR } ; CDR } ;
                                   DIP { DROP } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR } ;
                             DROP }
                           { IF_LEFT
                               { DUP ;
                                 CDR ;
                                 AMOUNT ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 TRANSFER_TOKENS ;
                                 DUG 4 ;
                                 DIP 4 { CONS } ;
                                 DROP }
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 DUP ;
                                 DIP 2 { DUP } ;
                                 DIG 2 ;
                                 MEM ;
                                 NOT ;
                                 IF {} { UNIT ; PUSH string "AlreadyActivMgr" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 DIP 2 { DUP } ;
                                 DIG 2 ;
                                 DIP { PUSH bool True } ;
                                 UPDATE ;
                                 DUG 4 ;
                                 DIP 4
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP ;
                                 DROP } } }
                       { IF_LEFT
                           { IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 DUP ;
                                 DIP 2 { DUP } ;
                                 DIG 2 ;
                                 MEM ;
                                 IF {} { UNIT ; PUSH string "NotActivMgg" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 DIP 2 { DUP } ;
                                 DIG 2 ;
                                 DIP { PUSH bool False } ;
                                 UPDATE ;
                                 DUG 4 ;
                                 DIP 4
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DROP } ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP ;
                                 DROP }
                               { DUP ;
                                 CDR ;
                                 AMOUNT ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 TRANSFER_TOKENS ;
                                 DUG 4 ;
                                 DIP 4 { CONS } ;
                                 DROP } }
                           { IF_LEFT
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { UNIT ; PUSH string "SenderNotAdmin" ; PAIR ; FAILWITH } ;
                                 DUP ;
                                 DUG 3 ;
                                 DIP 3
                                     { DIP { DUP ; CAR ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DIP { DUP ; DIP { CDR } ; CAR } ;
                                       DIP { DUP ; DIP { CAR } ; CDR } ;
                                       DIP { DROP } ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR } ;
                                 DROP }
                               { DUP ;
                                 CDR ;
                                 AMOUNT ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 TRANSFER_TOKENS ;
                                 DUG 4 ;
                                 DIP 4 { CONS } ;
                                 DROP } } } } ;
                 DROP }
               { DROP } }
           { IF_LEFT { DROP } { IF_LEFT { DROP } { DROP } } } ;
         DROP ;
         SWAP ;
         PAIR } }
