{ parameter
    (or (or (or (unit %addLiquidity) (unit %deposit))
            (or (int %updateCollateralRatio) (int %updateExchangeRatio)))
        (or (or (address %updateTokenAddress) (nat %updateTokenDecimals)) (nat %withdraw))) ;
  storage
    (pair (pair (pair (big_map %borrows address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                      (int %collateralRatio))
                (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                      (int %exchangeRatio)))
          (pair (pair (mutez %liquidity) (address %owner))
                (pair %token (address %contractAddress) (nat %tokenDecimals)))) ;
  code { LAMBDA
           mutez
           nat
           { DUP ;
             PUSH mutez 1000000 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DROP } } ;
         LAMBDA nat int { DUP ; PUSH int 0 ; ADD ; DIP { DROP } } ;
         DUP ;
         LAMBDA
           int
           nat
           { DUP ;
             PUSH nat 0 ;
             PAIR ;
             DIP { DUP } ;
             SWAP ;
             PUSH int 0 ;
             SWAP ;
             COMPARE ;
             GE ;
             IF { DUP ; DIP 2 { DUP } ; DIG 2 ; ABS ; SWAP ; CDR ; SWAP ; PAIR }
                { PUSH string "Not posible to conver from negative values" ; FAILWITH } ;
             DUP ;
             CAR ;
             DIP { DROP 3 } } ;
         SWAP ;
         LAMBDA
           (pair (int %0) (int %1))
           int
           { DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             PAIR ;
             PUSH int 1 ;
             SWAP ;
             PAIR ;
             PUSH (lambda
                     (pair (pair (int %baseNumber) (int %exponent)) (int %result))
                     (pair (bool %0) (pair %1 (pair (int %baseNumber) (int %exponent)) (int %result))))
                  { {} ;
                    {} ;
                    {} ;
                    { { { { { DUP ; DIP { {} } } ; CAR } ; DIP { {} } } ; CDR } ;
                      { { { DUP ; DIP { { {} ; PUSH int 0 } } } ; { COMPARE ; NEQ } } ;
                        IF { { { { { { { { { DIP { DUP } ; SWAP } ; DIP { {} } } ; CDR } ;
                                       DIP { { { { { { { DIP { DUP } ; SWAP } ; DIP { {} } } ; CAR } ;
                                                   DIP { {} } } ;
                                                 CAR } ;
                                               DIP { {} } } } } ;
                                     MUL } ;
                                   { { {} ;
                                       { DIP 2 { DUP } ; DIG 2 } ;
                                       {} ;
                                       { {} ;
                                         { DIP 3 { DUP } ; DIG 3 } ;
                                         {} ;
                                         { DIP 2 { DUP } ; DIG 2 } ;
                                         {} ;
                                         { DIP { { DUP ; CAR ; SWAP ; CDR } ; DROP } ; { SWAP ; PAIR } } ;
                                         {} } ;
                                       {} ;
                                       DIP { DROP } ;
                                       {} } ;
                                     { { { { DIP 2 { DUP } ; DIG 2 } ; DIP { { {} ; PUSH int 1 } } } ;
                                         SUB } ;
                                       { {} ;
                                         { DIP { DUP } ; SWAP } ;
                                         {} ;
                                         { {} ;
                                           { DIP 2 { DUP } ; DIG 2 } ;
                                           {} ;
                                           { DIP 2 { DUP } ; DIG 2 } ;
                                           {} ;
                                           { DIP { { DUP ; CDR ; SWAP ; CAR } } ;
                                             { DIP { { DUP ; CAR ; SWAP ; CDR } ; DROP } ; { SWAP ; PAIR } } ;
                                             PAIR } ;
                                           {} } ;
                                         {} ;
                                         DIP { DROP } ;
                                         {} } ;
                                       {} ;
                                       DIP { DROP } } ;
                                     {} ;
                                     DIP { DROP } } ;
                                   {} ;
                                   DIP { DROP } } ;
                                 DIP { {} } } ;
                               { PUSH bool True ; PAIR } } }
                           { { { { DIP { DUP } ; SWAP } ; DIP { {} } } ;
                               { PUSH bool False ; PAIR } } } } ;
                      {} ;
                      DIP { DROP } } ;
                    {} ;
                    DIP { DROP } ;
                    {} } ;
             SWAP ;
             PUSH bool True ;
             LOOP { DIP { DUP } ; EXEC ; DUP ; CDR ; SWAP ; CAR } ;
             SWAP ;
             DROP ;
             DUP ;
             CDR ;
             DIP { DROP 2 } } ;
         SWAP ;
         NIL operation ;
         SWAP ;
         LAMBDA
           bool
           address
           { DUP ;
             SENDER ;
             SWAP ;
             IF { PUSH address "tz1MZ4GPjAA2gZxKTozJt8Cu5Gvu6WU2ikZ4" } { DUP } ;
             DIP { DROP 2 } } ;
         SWAP ;
         LAMBDA
           (pair (lambda nat int)
                 (pair (pair (int %0) (mutez %1))
                       (pair %2
                          (pair (pair (big_map %borrows address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                      (int %collateralRatio))
                                (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                      (int %exchangeRatio)))
                          (pair (pair (mutez %liquidity) (address %owner))
                                (pair %token (address %contractAddress) (nat %tokenDecimals))))))
           mutez
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             PUSH int 100 ;
             SWAP ;
             MUL ;
             PUSH int 522119 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             CDR ;
             PUSH mutez 1 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DIP { DIP 3 { DUP } ; DIG 3 } ;
             EXEC ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DIP 3 { DUP } ; DIG 3 ; CDR ; CAR ; CDR ; CDR } ;
             MUL ;
             DIP { DUP } ;
             MUL ;
             PUSH int 10000 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             ADD ;
             DUP ;
             ABS ;
             PUSH mutez 1 ;
             SWAP ;
             MUL ;
             DUP ;
             DIP { DROP 8 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (or %0
                    (or (or (or (address %addOwner) (pair %approve (address %0) (nat %1)))
                            (or (nat %burn) (pair %decimals (unit %0) (contract %1 nat))))
                        (or (or (pair %getAllowance (pair (address %0) (address %1)) (contract %2 nat))
                                (pair %getBalance (address %0) (contract %1 nat)))
                            (or (pair %getTotalSupply (unit %0) (contract %1 nat)) (nat %mint))))
                    (or (or (pair %mintTo (address %0) (nat %1)) (pair %name (unit %0) (contract %1 string)))
                        (or (pair %symbol (unit %0) (contract %1 string))
                            (pair %transfer (pair (address %0) (address %1)) (nat %2)))))
                 (pair %1
                    (pair (pair (big_map %borrows address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                (int %collateralRatio))
                          (pair (big_map %deposits address (pair (timestamp %blockTimestamp) (mutez %tezAmount)))
                                (int %exchangeRatio)))
                    (pair (pair (mutez %liquidity) (address %owner))
                          (pair %token (address %contractAddress) (nat %tokenDecimals)))))
           operation
           { DUP ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             CONTRACT
               (or (or (or (or (address %addOwner) (pair %approve (address %0) (nat %1)))
                           (or (nat %burn) (pair %decimals (unit %0) (contract %1 nat))))
                       (or (or (pair %getAllowance (pair (address %0) (address %1)) (contract %2 nat))
                               (pair %getBalance (address %0) (contract %1 nat)))
                           (or (pair %getTotalSupply (unit %0) (contract %1 nat)) (nat %mint))))
                   (or (or (pair %mintTo (address %0) (nat %1)) (pair %name (unit %0) (contract %1 string)))
                       (or (pair %symbol (unit %0) (contract %1 string))
                           (pair %transfer (pair (address %0) (address %1)) (nat %2))))) ;
             IF_NONE
               { PUSH string "Contract not found." ; FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DUP ; PUSH mutez 0 } ;
             TRANSFER_TOKENS ;
             DUP ;
             DIP { DROP 3 } } ;
         DIP 8 { DUP } ;
         DIG 8 ;
         CDR ;
         DIP 9 { DUP } ;
         DIG 9 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIP 3 { DUP } ;
                     DIG 3 ;
                     DUP ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to add liquidity" ;
                          FAILWITH }
                        { DIP { DUP } ;
                          SWAP ;
                          PUSH mutez 0 ;
                          AMOUNT ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH string "No tez transferred!" ; FAILWITH }
                             { DIP 2 { DUP } ;
                               DIG 2 ;
                               DIP 3 { DUP } ;
                               DIG 3 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               AMOUNT ;
                               ADD ;
                               DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DIP { DUP } ;
                               SWAP ;
                               DIP { DUP } ;
                               SWAP ;
                               DIP { DROP 2 } } ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP { DUP } ;
                          SWAP ;
                          DIP { DROP 3 } } ;
                     DIP 10 { DUP } ;
                     DIG 10 ;
                     DIP { DUP } ;
                     PAIR ;
                     DIP { DROP 4 } }
                   { DIP 3 { DUP } ;
                     DIG 3 ;
                     DIP 6 { DUP } ;
                     DIG 6 ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     PAIR ;
                     DIP { DIP 10 { DUP } ;
                           DIG 10 ;
                           DIP { DIP 11 { DUP } ; DIG 11 } ;
                           PAIR } ;
                     PAIR ;
                     DIP { DIP 9 { DUP } ;
                           DIG 9 ;
                           NIL operation ;
                           PAIR ;
                           DIP { DUP ; DIP { DIP 12 { DUP } ; DIG 12 } ; PAIR } ;
                           PAIR } ;
                     PAIR ;
                     DIP { DIP 5 { DUP } ; DIG 5 } ;
                     PAIR ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "No tez transferred!" ; FAILWITH }
                        { DIP 8 { DUP } ;
                          DIG 8 ;
                          PUSH bool False ;
                          EXEC ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DIP 9 { DUP } ;
                          DIG 9 ;
                          DIP { DUP } ;
                          PAIR ;
                          DIP { DIP { DUP } ; SWAP ; DIP { DIP 3 { DUP } ; DIG 3 } ; PAIR } ;
                          PAIR ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP { DIP { DUP } ; SWAP } ;
                          GET ;
                          IF_NONE
                            { DIP 4 { DUP } ;
                              DIG 4 ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              AMOUNT ;
                              ADD ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { AMOUNT ; NOW ; PAIR ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                              UPDATE ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              CAR ;
                              NOW ;
                              SUB ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              CDR ;
                              DIP { DIP { DUP } ;
                                    SWAP ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                    PAIR ;
                                    DIP { DIP 7 { DUP } ; DIG 7 } ;
                                    PAIR ;
                                    DIP { DIP 13 { DUP } ; DIG 13 } ;
                                    EXEC } ;
                              ADD ;
                              AMOUNT ;
                              ADD ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIP 5 { DUP } ;
                              DIG 5 ;
                              DIP { DUP ; CDR ; NOW ; PAIR ; SOME ; DIP { DIP 4 { DUP } ; DIG 4 } } ;
                              UPDATE ;
                              DIP 8 { DUP } ;
                              DIG 8 ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              CAR ;
                              CAR ;
                              AMOUNT ;
                              ADD ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP 6 { DUP } ;
                              DIG 6 ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DUP } ;
                              SWAP ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DIP { DROP 6 } } ;
                          DUP ;
                          CDR ;
                          CDR ;
                          DIP 18 { DUP } ;
                          DIG 18 ;
                          AMOUNT ;
                          EXEC ;
                          DUP ;
                          DIP { DIP 18 { DUP } ; DIG 18 } ;
                          EXEC ;
                          DIP { DIP { DUP } ; SWAP ; CAR ; CDR ; CDR } ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIP { DIP { DUP } ;
                                SWAP ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DIP { DIP 18 { DUP } ; DIG 18 } ;
                                EXEC ;
                                PUSH int 10 ;
                                PAIR ;
                                DIP { DIP 16 { DUP } ; DIG 16 } ;
                                EXEC } ;
                          MUL ;
                          DUP ;
                          DIP { DIP 18 { DUP } ; DIG 18 } ;
                          EXEC ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          CDR ;
                          CAR ;
                          DIP { DUP } ;
                          PAIR ;
                          LEFT (pair (unit %0) (contract %1 string)) ;
                          LEFT (or (pair (unit %0) (contract %1 string)) (pair (pair (address %0) (address %1)) (nat %2))) ;
                          RIGHT
                            (or (or (or address (pair (address %0) (nat %1))) (or nat (pair (unit %0) (contract %1 nat))))
                                (or (or (pair (pair (address %0) (address %1)) (contract %2 nat))
                                        (pair (address %0) (contract %1 nat)))
                                    (or (pair (unit %0) (contract %1 nat)) nat))) ;
                          DIP { DIP 3 { DUP } ; DIG 3 } ;
                          PAIR ;
                          DIP { DIP 14 { DUP } ; DIG 14 } ;
                          EXEC ;
                          DIP 9 { DUP } ;
                          DIG 9 ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          CDR ;
                          CDR ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DIP 5 { DUP } ;
                          DIG 5 ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DIP 6 { DUP } ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                CDR } ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DIP { DUP } ;
                          SWAP ;
                          NIL operation ;
                          SWAP ;
                          CONS ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                CDR } ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DIP { DROP 9 } } ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIP { DUP ; CAR ; CDR ; CDR ; CAR } ;
                     PAIR ;
                     DIP { DROP 4 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string
                               "You must be the owner of the contract to update the collateral ratio" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CAR } ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to update the exchange ratio" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 4 { DUP } ;
                          DIG 4 ;
                          DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CAR } ;
                     PAIR ;
                     DIP { DROP 6 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     DIP { DUP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to update the token address" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 3 { DUP } ;
                          DIG 3 ;
                          CDR ;
                          CDR ;
                          DIP 5 { DUP } ;
                          DIG 5 ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CDR } ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { DUP ;
                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "You must be the owner of the contract to update the token decimals" ;
                          FAILWITH }
                        { DUP ;
                          DIP 2 { DUP } ;
                          DIG 2 ;
                          DIP 3 { DUP } ;
                          DIG 3 ;
                          CDR ;
                          CDR ;
                          DIP 5 { DUP } ;
                          DIG 5 ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR } ;
                     DIP 12 { DUP } ;
                     DIG 12 ;
                     DIP { DUP ; CAR } ;
                     PAIR ;
                     DIP { DROP 6 } } ;
                 DIP { DROP } }
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 DIP 6 { DUP } ;
                 DIG 6 ;
                 PUSH bool False ;
                 EXEC ;
                 DUP ;
                 DIP { DIP { DUP } ; SWAP ; CAR ; CDR ; CAR } ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 NOW ;
                 SUB ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DIP { DUP ;
                       DIP { DIP { DUP } ; SWAP ; CDR } ;
                       PAIR ;
                       DIP { DIP 3 { DUP } ; DIG 3 } ;
                       PAIR ;
                       DIP { DIP 8 { DUP } ; DIG 8 } ;
                       EXEC } ;
                 ADD ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 NIL operation ;
                 PAIR ;
                 DIP { DIP 4 { DUP } ; DIG 4 ; DIP { DUP } ; PAIR } ;
                 PAIR ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 5 { DUP } ; DIG 5 ; CDR ; CAR ; CAR } ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "No tez to withdraw!" ; FAILWITH }
                    { DIP 4 { DUP } ;
                      DIG 4 ;
                      DIP { DIP 5 { DUP } ;
                            DIG 5 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            NONE (pair (timestamp %blockTimestamp) (mutez %tezAmount)) } ;
                      UPDATE ;
                      DIP 6 { DUP } ;
                      DIG 6 ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      DIP { DUP } ;
                      SWAP ;
                      CDR ;
                      CAR ;
                      CAR ;
                      DIP { DIP 4 { DUP } ; DIG 4 } ;
                      SUB ;
                      DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DIP 7 { DUP } ;
                      DIG 7 ;
                      CONTRACT unit ;
                      IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                      DIP 5 { DUP } ;
                      DIG 5 ;
                      DIP { DUP } ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      DIP 5 { DUP } ;
                      DIG 5 ;
                      DIP 4 { DUP } ;
                      DIG 4 ;
                      DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DIP { DUP } ;
                      SWAP ;
                      NIL operation ;
                      SWAP ;
                      CONS ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP 5 } } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIP { DUP ; CDR ; CAR } ;
                 PAIR ;
                 DIP { DROP 8 } } ;
             DIP { DROP } } ;
         DIP { DROP 10 } } }
