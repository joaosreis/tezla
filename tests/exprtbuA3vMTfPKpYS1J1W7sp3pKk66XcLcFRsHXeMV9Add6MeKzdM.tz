{ parameter
    (or % (list %assertTransfers (pair (address :from) (list :tos address)))
          (list %assertReceivers address)) ;
  storage (pair (set (pair address address)) (set address)) ;
  code { CAST (pair (or (list (pair address (list address))) (list address))
                    (pair (set (pair address address)) (set address))) ;
         NIL operation ;
         SWAP ;
         DUP ;
         CAR ;
         DIP { CDR ; DUP ; CAR ; DIP { CDR } } ;
         DUP ;
         IF_LEFT
           { DUP ;
             ITER { DUP ;
                    PUSH bool False ;
                    SWAP ;
                    CDR ;
                    ITER { DIP 5 { DUP } ;
                           DIG 5 ;
                           ITER { DIP { DUP } ;
                                  SWAP ;
                                  DIP { DUP } ;
                                  SWAP ;
                                  CDR ;
                                  COMPARE ;
                                  EQ ;
                                  DIP 4 { DUP } ;
                                  DIG 4 ;
                                  CAR ;
                                  DIP 2 { DUP } ;
                                  DIG 2 ;
                                  CAR ;
                                  COMPARE ;
                                  EQ ;
                                  AND ;
                                  IF { PUSH bool True ; DIP 3 { DROP } ; DUG 2 } {} ;
                                  DROP } ;
                           DROP } ;
                    DUP ;
                    IF {} { UNIT ; PUSH string "AssertionFailure" ; PAIR ; FAILWITH } ;
                    DROP ;
                    DROP } ;
             DROP }
           { DUP ;
             ITER { DIP 4 { DUP } ;
                    DIG 4 ;
                    DIP { DUP } ;
                    SWAP ;
                    MEM ;
                    IF {} { UNIT ; PUSH string "AssertionFailure" ; PAIR ; FAILWITH } ;
                    DROP } ;
             DROP } ;
         DROP ;
         PAIR ;
         SWAP ;
         PAIR } }
