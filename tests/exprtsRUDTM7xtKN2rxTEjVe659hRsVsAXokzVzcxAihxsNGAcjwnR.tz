{ storage
    (pair (address %administrator)
          (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                (int %totalSupply))) ;
  parameter
    (or (or (pair %approve (int %amount) (pair (address %destination) (address %origin)))
            (pair %burn (address %address) (int %amount)))
        (or (pair %mint (address %address) (int %amount))
            (pair %transfer (int %amount) (pair (address %destination) (address %origin))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: params.origin == sp.sender" ; FAILWITH } ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 23 ; FAILWITH } {} ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True } { DUP ; CAR ; PUSH int 0 ; COMPARE ; EQ } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (self.data.balances[params.origin].approvals.get(params.destination, default_value = 0) == 0) | (params.amount == 0)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 25 ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 SOME ;
                 DIG 7 ;
                 CDR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 42 ; FAILWITH } {} ;
                 CDR ;
                 COMPARE ;
                 GE ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.balances[params.address].balance >= params.amount" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 SWAP ;
                 SUB ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 CDR ;
                 SWAP ;
                 SUB ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF {}
                    { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 34 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { DUP ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True }
                    { DUP ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      GET ;
                      IF_NONE { PUSH int 10 ; FAILWITH } {} ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 10 ; FAILWITH } {} ;
                      COMPARE ;
                      GE } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (params.origin == sp.sender) | (self.data.balances[params.origin].approvals[sp.sender] >= params.amount)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF {}
                    { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CAR ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP } ;
                 DUP ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 13 ; FAILWITH } {} ;
                 CDR ;
                 COMPARE ;
                 GE ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.balances[params.origin].balance >= params.amount" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 14 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 SWAP ;
                 SUB ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 15 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      SENDER ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                      DIG 8 ;
                      CAR ;
                      SWAP ;
                      SUB ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { DROP } } } ;
         NIL operation ;
         PAIR } }
