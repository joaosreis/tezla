{ parameter
    (or (pair %register
           (address %address)
           (map %proofs string (pair (timestamp %register_date) (bool %verified))))
        (unit %signup)) ;
  storage
    (pair (map %participants address int)
          (pair (list %requiredProofs string) (address %tezid))) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Only TezID can register" ; FAILWITH } {} ;
             NIL string ;
             DUP 3 ;
             GET 3 ;
             ITER { DUP 3 ;
                    CDR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    MEM ;
                    IF { DUP 3 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 252 ; FAILWITH } {} ;
                         CDR ;
                         IF { CONS } { DROP } }
                       { DROP } } ;
             SIZE ;
             DUP 3 ;
             GET 3 ;
             SIZE ;
             COMPARE ;
             EQ ;
             IF { SWAP ;
                  DUP ;
                  CAR ;
                  PUSH (option int) (Some 1) ;
                  DIG 3 ;
                  CAR ;
                  UPDATE ;
                  UPDATE 1 }
                { DROP } ;
             NIL operation }
           { DROP ;
             DUP ;
             GET 4 ;
             CONTRACT %getProofs (pair address (pair address string)) ;
             IF_NONE { PUSH int 259 ; FAILWITH } {} ;
             NIL operation ;
             SWAP ;
             PUSH mutez 0 ;
             PUSH string "register" ;
             SELF_ADDRESS ;
             SENDER ;
             PAIR 3 ;
             TRANSFER_TOKENS ;
             CONS } ;
         PAIR } }
