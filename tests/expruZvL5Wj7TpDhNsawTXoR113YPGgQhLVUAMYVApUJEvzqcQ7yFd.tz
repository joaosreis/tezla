{ parameter
    (or (address %is_Registered)
        (pair %register
           (pair (pair (nat %decimals) (map %extras string string))
                 (pair (string %name) (string %symbol)))
           (nat %token_id))) ;
  storage (pair (set %collectibles address) (nat %last_token_id)) ;
  code { DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DUP ; CAR } ;
             MEM ;
             IF { PUSH unit Unit }
                { PUSH string "Contract is not registered." ; FAILWITH } ;
             DIP { DUP } ;
             SWAP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 4 } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             PUSH nat 1 ;
             ADD ;
             SWAP ;
             CAR ;
             PAIR ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (pair (pair (pair (nat %decimals) (map %extras string string))
                               (pair (string %name) (string %symbol)))
                         (nat %token_id)) ;
                 storage
                   (pair (pair (pair (nat %decimals) (map %extras string string))
                               (pair (string %name) (string %symbol)))
                         (nat %token_id)) ;
                 code { DUP ; CAR ; NIL operation ; PAIR ; DIP { DROP } } } ;
             PAIR ;
             DUP ;
             CAR ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIP { DIP { DUP } ;
                   SWAP ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR ;
                   DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; PUSH bool True } ;
                   UPDATE ;
                   SWAP ;
                   CDR ;
                   SWAP ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 5 } } ;
         DIP { DROP 2 } } }
