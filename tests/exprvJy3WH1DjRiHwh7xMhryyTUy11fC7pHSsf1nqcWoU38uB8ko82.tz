{ parameter
    (or (or (unit %contribute)
            (pair %init
               (pair (address %admin) (address %oracle))
               (pair (address %protocol) (nat %token_id))))
        (or (unit %oracle_delegation) (unit %withdraw))) ;
  storage
    (pair (pair (address %admin) (address %oracle))
          (pair (address %protocol) (nat %token_id))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DUP ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender != self.data.admin" ; FAILWITH } ;
                 PUSH mutez 5000000 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(5)" ; FAILWITH } ;
                 DUP ;
                 { CDR ; CAR } ;
                 CONTRACT %mint (pair (address %address) (pair (nat %amount) (nat %token_id))) ;
                 NIL operation ;
                 SWAP ;
                 { IF_NONE { PUSH int 30 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR } ;
                 PUSH mutez 1000000 ;
                 AMOUNT ;
                 EDIV ;
                 { IF_NONE { PUSH int 29 ; FAILWITH } {} } ;
                 CAR ;
                 PAIR %amount %token_id ;
                 SENDER ;
                 PAIR %address ;
                 TRANSFER_TOKENS ;
                 CONS }
               { SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CDR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CAR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CDR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 2 ;
                 { CDR ; CDR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation } }
           { IF_LEFT { DROP } { DROP } ; NIL operation } ;
         PAIR } }
