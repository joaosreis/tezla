{ storage (big_map bytes bytes) ;
  parameter
    (or (or (pair %approve (int %amount) (pair (address %f) (address %t)))
            (pair %burn (address %address) (int %amount)))
        (or (pair %mint (address %address) (int %amount))
            (or (pair %setEntrypoints
                   (pair (pair (bytes %adminBytes) (pair (bytes %administrator) (bytes %approve)))
                         (pair (bytes %approveScript) (pair (bytes %burn) (bytes %burnScript))))
                   (pair (pair (bytes %mint) (pair (bytes %mintScript) (bytes %totalSupply)))
                         (pair (bytes %totalSupplyBytes) (pair (bytes %trasnfer) (bytes %trasnferScript)))))
                (pair %transfer (int %amount) (pair (address %f) (address %t)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   PUSH string "callApprove" ;
                   PACK ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:76" ; FAILWITH } } {} ;
                   UNPACK
                     (lambda
                        (pair (pair (int %amount) (big_map %data bytes bytes))
                              (pair (address %f) (pair (address %sender) (address %t))))
                        (big_map bytes bytes)) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   SENDER ;
                   PAIR %sender %t ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   CAR ;
                   PAIR %f ;
                   DIG 3 ;
                   DIG 3 ;
                   CAR ;
                   PAIR %amount %data ;
                   PAIR ;
                   EXEC } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   PUSH string "callBurn" ;
                   PACK ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:42" ; FAILWITH } } {} ;
                   UNPACK
                     (lambda
                        (pair (pair (address %address) (int %amount))
                              (pair (big_map %data bytes bytes) (address %sender)))
                        (big_map bytes bytes)) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   SENDER ;
                   DIG 3 ;
                   PAIR %data %sender ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   DIG 3 ;
                   CAR ;
                   PAIR %address %amount ;
                   PAIR ;
                   EXEC } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   PUSH string "callMint" ;
                   PACK ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:26" ; FAILWITH } } {} ;
                   UNPACK
                     (lambda
                        (pair (pair (address %address) (int %amount))
                              (pair (big_map %data bytes bytes) (address %sender)))
                        (big_map bytes bytes)) ;
                   IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                   SENDER ;
                   DIG 3 ;
                   PAIR %data %sender ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   DIG 3 ;
                   CAR ;
                   PAIR %address %amount ;
                   PAIR ;
                   EXEC } }
               { IF_LEFT
                   { { DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SOME ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       SOME ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CDR ;
                       SOME ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SOME ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SOME ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CDR ;
                       CDR ;
                       SOME ;
                       DIG 2 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       UPDATE } }
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       PUSH string "callTransfer" ;
                       PACK ;
                       GET ;
                       IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                       UNPACK
                         (lambda
                            (pair (pair (int %amount) (big_map %data bytes bytes))
                                  (pair (address %f) (pair (address %sender) (address %t))))
                            (big_map bytes bytes)) ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CDR ;
                       SENDER ;
                       PAIR %sender %t ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       CAR ;
                       PAIR %f ;
                       DIG 3 ;
                       DIG 3 ;
                       CAR ;
                       PAIR %amount %data ;
                       PAIR ;
                       EXEC } } } } ;
         NIL operation ;
         PAIR } }
