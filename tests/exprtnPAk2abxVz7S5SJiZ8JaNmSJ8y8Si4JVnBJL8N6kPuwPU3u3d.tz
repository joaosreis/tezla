{ storage
    (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
          (pair (address %owner) (nat %totalSupply))) ;
  parameter
    (or (or (pair %Approve (address %spender) (nat %value))
            (or (nat %Burn)
                (pair %GetAllowance (contract %contr nat) (pair (address %owner) (address %spender)))))
        (or (or (pair %GetBalance (address %account_from) (contract %contr nat))
                (contract %GetTotalSupply nat))
            (or (nat %Mint)
                (pair %transfer (address %account_from) (pair (address %destination) (nat %value)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH int 94 ; FAILWITH } { DROP } ;
                 DUP ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      UNPAIR ;
                      DUP ;
                      SENDER ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 98 ; FAILWITH } {} ;
                      UNPAIR ;
                      DIG 6 ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 95 ; FAILWITH } {} ;
                      CDR ;
                      SOME ;
                      DIG 6 ;
                      CAR ;
                      UPDATE ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      DUP ;
                      UNPAIR ;
                      DIG 2 ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 97 ; FAILWITH } {} ;
                      SOME ;
                      SENDER ;
                      UPDATE ;
                      PAIR }
                    { DROP } ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "You must be the owner of the contract to burn tokens" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "Owner balance is too low" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DUP ;
                     DUP 5 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 80 ; FAILWITH } {} ;
                     CAR ;
                     DUP 5 ;
                     DIG 6 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 80 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                     CAR ;
                     ITER { CAR ;
                            DUP 3 ;
                            UNPAIR ;
                            DUP ;
                            DUP 6 ;
                            GET 3 ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                            UNPAIR ;
                            DIG 7 ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 9 ;
                            GET 3 ;
                            GET ;
                            IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                            CAR ;
                            SIZE ;
                            DUP 8 ;
                            EDIV ;
                            IF_NONE { PUSH int 84 ; FAILWITH } { CAR } ;
                            DIG 8 ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            GET 3 ;
                            GET ;
                            IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                            CAR ;
                            DUP 8 ;
                            GET ;
                            IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                            SOME ;
                            DIG 6 ;
                            UPDATE ;
                            PAIR ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            PAIR ;
                            SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                     SOME ;
                     DIG 4 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DIG 3 ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 88 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation }
                   { DUP ;
                     CAR ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     CAR ;
                     DUP 5 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 106 ; FAILWITH } {} ;
                     CAR ;
                     DIG 4 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 107 ; FAILWITH } {} ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { IF_LEFT
               { IF_LEFT
                   { DUP ;
                     CDR ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 114 ; FAILWITH } {} ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DUP 4 ;
                     GET 4 ;
                     TRANSFER_TOKENS ;
                     CONS } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "You must be the owner of the contract to mint tokens" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     GET ;
                     IF_NONE
                       { PUSH (pair (map %allowances address nat) (nat %balance)) (Pair {} 0) }
                       {} ;
                     SOME ;
                     DIG 4 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DUP ;
                     DIG 4 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 6 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 3 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "Source balance is too low" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DUP ;
                     DUP 4 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                     CAR ;
                     DUP 5 ;
                     GET 4 ;
                     DIG 6 ;
                     CAR ;
                     DUP 7 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     CDR ;
                     SUB ;
                     ABS ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     SOME ;
                     DUP 4 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     GET ;
                     IF_NONE
                       { PUSH (pair (map %allowances address nat) (nat %balance)) (Pair {} 0) }
                       {} ;
                     SOME ;
                     DUP 4 ;
                     GET 3 ;
                     UPDATE ;
                     DUP ;
                     DUP 4 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 50 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 6 ;
                     GET 4 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH int 52 ; FAILWITH } {} ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP ;
                          DUP 5 ;
                          CAR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                          UNPAIR ;
                          DUP 7 ;
                          GET 4 ;
                          DIG 6 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     SOME ;
                     DIG 3 ;
                     CAR ;
                     UPDATE ;
                     PAIR } ;
                 NIL operation } } ;
         PAIR } }
