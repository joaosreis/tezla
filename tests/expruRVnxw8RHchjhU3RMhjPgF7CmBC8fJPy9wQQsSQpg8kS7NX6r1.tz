{ parameter
    (or (unit %getStorage)
        (pair %updateStorage
           (pair (pair (pair (big_map %allowed address bool) (key_hash %delegated))
                       (pair (address %factoryAddress) (nat %feeRate)))
                 (pair (pair (nat %invariant) (key_hash %nextDelegated))
                       (pair (big_map %shares address nat) (nat %tezPool))))
           (pair (pair (pair (address %tokenAddress) (nat %tokenPool))
                       (pair (nat %totalShares) (nat %veto)))
                 (pair (pair (big_map %vetoVoters address nat) (big_map %vetos key_hash bool))
                       (pair (big_map %voters
                                address
                                (pair (map %allowances address bool) (option %candidate key_hash)))
                             (big_map %votes key_hash nat)))))) ;
  storage
    (pair (pair (pair (pair (big_map %allowed address bool) (key_hash %delegated))
                      (pair (address %factoryAddress) (nat %feeRate)))
                (pair (pair (nat %invariant) (key_hash %nextDelegated))
                      (pair (big_map %shares address nat) (nat %tezPool))))
          (pair (pair (pair (address %tokenAddress) (nat %tokenPool))
                      (pair (nat %totalShares) (nat %veto)))
                (pair (pair (big_map %vetoVoters address nat) (big_map %vetos key_hash bool))
                      (pair (big_map %voters
                               address
                               (pair (map %allowances address bool) (option %candidate key_hash)))
                            (big_map %votes key_hash nat))))) ;
  code { DUP ;
         CAR ;
         IF_LEFT
           { DIG 1 ; DUP ; DUG 2 ; CDR ; NIL operation ; PAIR ; DIP { DROP } }
           { DUP ; NIL operation ; PAIR ; DIP { DROP } } ;
         DIP { DROP } } }
