{ storage
    (pair (pair (pair (address %administrator) (set %all_tokens nat))
                (pair (big_map %initial_hodlers address nat)
                      (big_map %ledger (pair (address %owner) (nat %token_id)) nat)))
          (pair (pair (big_map %metadata string bytes)
                      (big_map %offer
                         nat
                         (pair (bool %is_for_sale) (pair (mutez %sale_value) (address %seller)))))
                (pair (bool %paused)
                      (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))) ;
  parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (map %mint string bytes))
        (or (address %set_administrator)
            (or (bool %set_pause)
                (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { NIL (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)) ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 ITER { SWAP ;
                        DUP 4 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DIG 2 ;
                        DUP ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 4 ;
                        CAR ;
                        PAIR %owner %token_id ;
                        GET ;
                        IF_NONE { PUSH nat 0 } {} ;
                        DIG 2 ;
                        PAIR %request %balance ;
                        CONS } ;
                 NIL operation ;
                 DIG 2 ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 IF { PUSH string "CONTRACT IS PAUSED" ; FAILWITH } {} ;
                 PUSH nat 10000 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "CRYPTOBOT_CREATION_LIMIT_EXCEEDED" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF { PUSH nat 5 ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 121 ; FAILWITH } {} ;
                      COMPARE ;
                      LT ;
                      IF { SWAP ;
                           UNPAIR ;
                           UNPAIR ;
                           SWAP ;
                           UNPAIR ;
                           DUP ;
                           SENDER ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE { PUSH int 122 ; FAILWITH } {} ;
                           PUSH nat 1 ;
                           ADD ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           SWAP }
                         { PUSH string "CRYPTOBOT_CREATION_LIMIT_EXCEEDED" ; FAILWITH } }
                    { SWAP ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      PUSH (option nat) (Some 1) ;
                      SENDER ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 MEM ;
                 IF { PUSH string "CRYPTOBOT_CANT_MINT_SAME_TOKEN_TWICE" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 PUSH (option nat) (Some 1) ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 SENDER ;
                 PAIR %owner %token_id ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 4 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 PAIR %token_id %token_info ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 PUSH bool True ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     IF { PUSH string "CONTRACT IS PAUSED" ; FAILWITH } {} ;
                     DUP ;
                     ITER { DUP ;
                            CDR ;
                            ITER { SENDER ;
                                   DUP 3 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 3 ;
                                   MEM ;
                                   IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                   DUP ;
                                   GET 4 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DUP ;
                                        GET 4 ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET 3 ;
                                        DUP 5 ;
                                        CAR ;
                                        PAIR %owner %token_id ;
                                        GET ;
                                        IF_NONE { PUSH int 157 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                        DUP 4 ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP 5 ;
                                        GET 4 ;
                                        DIG 8 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 7 ;
                                        GET 3 ;
                                        DUP 9 ;
                                        CAR ;
                                        PAIR %owner %token_id ;
                                        GET ;
                                        IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                                        SOME ;
                                        DUP 6 ;
                                        GET 3 ;
                                        DUP 8 ;
                                        CAR ;
                                        PAIR %owner %token_id ;
                                        UPDATE ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        PAIR %owner %token_id ;
                                        MEM ;
                                        IF { DUP 4 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DUP 5 ;
                                             GET 4 ;
                                             DIG 8 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DIG 6 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 8 ;
                                             CAR ;
                                             PAIR %owner %token_id ;
                                             GET ;
                                             IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                                             ADD ;
                                             SOME ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             PAIR %owner %token_id ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 3 }
                                           { DIG 3 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DUP 5 ;
                                             GET 4 ;
                                             SOME ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             PAIR %owner %token_id ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 3 } }
                                      {} ;
                                   DUP 4 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 3 ;
                                   DUP 4 ;
                                   CAR ;
                                   PAIR %owner %token_id ;
                                   MEM ;
                                   IF { DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        MEM ;
                                        IF { DIG 3 ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             NONE (pair (bool %is_for_sale) (pair (mutez %sale_value) (address %seller))) ;
                                             DIG 5 ;
                                             GET 3 ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DUG 2 }
                                           { DROP } }
                                      { DROP } } ;
                            DROP } ;
                     DROP } } ;
             NIL operation } ;
         PAIR } }
