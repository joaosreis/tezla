{ parameter
    (or (address %register)
        (or (pair %add_idea (bytes %ititle) (bytes %description))
            (or (pair %vote (nat %n) (nat %weight)) (unit %terminate)))) ;
  storage
    (pair (address %chairman)
          (pair (nat %maxvotes)
                (pair (nat %_state)
                      (pair (map %idea
                               nat
                               (pair (bytes %title)
                                     (pair (bytes %desc) (pair (nat %nbvotes) (pair (timestamp %creation) (address %author))))))
                            (pair (map %voter address nat) (set %selected nat)))))) ;
  code { UNPAIR ;
         DIP 1
             { UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP } ;
         IF_LEFT
           { DIG 6 ;
             DUP ;
             DUG 7 ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
             PUSH nat 0 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCondition: r0" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             MEM ;
             IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  SOME ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  UPDATE ;
                  DIP 1 { DIG 2 ; DROP 1 } ;
                  DUG 2 } ;
             DROP 1 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             NIL operation ;
             PAIR }
           { IF_LEFT
               { UNPAIR ;
                 SWAP ;
                 PUSH nat 0 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: r1" ; FAILWITH } {} ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 SIZE ;
                 MEM ;
                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                    { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SENDER ;
                      NOW ;
                      PAIR ;
                      PUSH nat 0 ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      PAIR ;
                      SOME ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      SIZE ;
                      UPDATE ;
                      DIP 1 { DIG 4 ; DROP 1 } ;
                      DUG 4 } ;
                 DROP 2 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SENDER ;
                     MEM ;
                     NOT ;
                     IF { PUSH string "InvalidCondition: r2" ; FAILWITH } {} ;
                     DUP ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     COMPARE ;
                     GE ;
                     NOT ;
                     IF { PUSH string "InvalidCondition: r3" ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCondition: r4" ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PUSH int 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     INT ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SUB ;
                     COMPARE ;
                     GE ;
                     IF { DIG 2 ; DUP ; DUG 3 ; INT ; DIG 2 ; DUP ; DUG 3 ; SUB ; ABS }
                        { PUSH string "AssignNat" ; FAILWITH } ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DIP 1 { DIG 4 ; DROP 1 } ;
                     DUG 4 ;
                     DROP 1 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     GET ;
                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DROP 1 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     UPDATE ;
                     DIP 1 { DIG 5 ; DROP 1 } ;
                     DUG 5 ;
                     DROP 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DROP 1 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DUP ;
                     PUSH nat 0 ;
                     COMPARE ;
                     EQ ;
                     IF { NIL nat ;
                          NIL nat ;
                          PUSH nat 0 ;
                          PAIR ;
                          NIL nat ;
                          NIL nat ;
                          NIL nat ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          ITER { UNPAIR ;
                                 DIG 12 ;
                                 DUP ;
                                 DUG 13 ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 COMPARE ;
                                 GT ;
                                 IF { DIG 2 ; DUP ; DUG 3 ; DIG 1 ; DUP ; DUG 2 ; CONS }
                                    { DIG 2 ; DUP ; DUG 3 } ;
                                 DIP 1 { DIG 2 ; DROP 1 } ;
                                 DUG 2 ;
                                 DROP 2 } ;
                          ITER { DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CONS ;
                                 DIP 1 { DIG 1 ; DROP 1 } ;
                                 DUG 1 ;
                                 DROP 1 } ;
                          ITER { DIG 7 ;
                                 DUP ;
                                 DUG 8 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                 NIL nat ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 SOME ;
                                 PAIR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 ITER { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        IF_NONE
                                          { DUP ; DIG 3 ; DUP ; DUG 4 ; CONS ; DIG 2 ; DUP ; DUG 3 ; PAIR }
                                          { PUSH int 0 ;
                                            DIG 14 ;
                                            DUP ;
                                            DUG 15 ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            GET ;
                                            IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            CDR ;
                                            CDR ;
                                            CAR ;
                                            DIG 1 ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            CDR ;
                                            CAR ;
                                            COMPARE ;
                                            LT ;
                                            IF { PUSH int 1 } { PUSH int 0 } ;
                                            DIP 1 { DROP 1 } ;
                                            COMPARE ;
                                            GT ;
                                            IF { DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 DIG 7 ;
                                                 DUP ;
                                                 DUG 8 ;
                                                 CONS ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 CONS ;
                                                 NONE nat ;
                                                 PAIR }
                                               { DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 CONS ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 PAIR } ;
                                            SWAP ;
                                            DROP 1 } ;
                                        DIP 1 { DROP 1 } ;
                                        DIP 1 { DROP 1 } ;
                                        DIP 1 { DIG 1 ; DROP 1 } ;
                                        DUG 1 ;
                                        DROP 1 } ;
                                 DUP ;
                                 CAR ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 NIL nat ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 IF_NONE
                                   { DIG 1 ; DUP ; DUG 2 }
                                   { DIG 2 ; DUP ; DUG 3 ; DIG 7 ; DUP ; DUG 8 ; CONS ; SWAP ; DROP 1 } ;
                                 ITER { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        CONS ;
                                        DIP 1 { DIG 1 ; DROP 1 } ;
                                        DUG 1 ;
                                        DROP 1 } ;
                                 DIP 1 { DROP 1 } ;
                                 DIP 1 { DROP 1 } ;
                                 DIP 1 { DROP 1 } ;
                                 DIP 1 { DROP 1 } ;
                                 DIP 1 { DIG 1 ; DROP 1 } ;
                                 DUG 1 ;
                                 DROP 1 } ;
                          ITER { PUSH nat 3 ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 COMPARE ;
                                 LT ;
                                 IF { DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CONS ;
                                      PUSH nat 1 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      ADD ;
                                      PAIR }
                                    { DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      PUSH nat 1 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      ADD ;
                                      PAIR } ;
                                 DIP 1 { DIG 1 ; DROP 1 } ;
                                 DUG 1 ;
                                 DROP 1 } ;
                          CDR ;
                          ITER { DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 CONS ;
                                 DIP 1 { DIG 1 ; DROP 1 } ;
                                 DUG 1 ;
                                 DROP 1 } ;
                          ITER { DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 MEM ;
                                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                                    { DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      PUSH bool True ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      UPDATE ;
                                      DIP 1 { DIG 2 ; DROP 1 } ;
                                      DUG 2 } ;
                                 DROP 1 } ;
                          PUSH nat 1 ;
                          DIP 1 { DIG 4 ; DROP 1 } ;
                          DUG 4 }
                        { PUSH string "InvalidState" ; FAILWITH } ;
                     DROP 1 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } } } }
