{ parameter
    (or (or (or (int %endGame) (pair %manageAdmin bool address))
            (or (pair %manageBlackList bool address) (unit %newGame)))
        (or (int %newPlayer) (mutez %withDraw))) ;
  storage
    (pair (pair (pair (set %admins address) (mutez %amountValue))
                (pair (bool %available) (set %blackList address)))
          (map %loto int (set address))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair (set address) mutez) (pair bool (set address))) (map int (set address))))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             PUSH string "NOT AN OWNER" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "VALUE TOO LOW" ;
                     PUSH int 1 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "VALUE TOO HIGH" ;
                     PUSH int 1000 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     NIL operation ;
                     DUP 3 ;
                     CDR ;
                     DIG 2 ;
                     GET ;
                     IF_NONE { EMPTY_SET address } {} ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            CONTRACT unit ;
                            IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                            BALANCE ;
                            UNIT ;
                            TRANSFER_TOKENS ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            CONS } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "ALREADY AN OWNER" ;
                          PUSH bool True ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          CDR ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR }
                        { PUSH string "ALREADY NOT AN OWNER" ;
                          PUSH bool False ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          CDR ;
                          PUSH bool False ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "ALREADY BLACKLISTED" ;
                          PUSH bool True ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          CDR ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR }
                        { PUSH string "ALREADY NOT BLACKLISTED" ;
                          PUSH bool False ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          CDR ;
                          PUSH bool False ;
                          SWAP ;
                          UPDATE ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { DIG 3 ;
                     DROP 2 ;
                     DUP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     EMPTY_MAP int (set address) ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 MEM ;
                 PUSH string "YOU ARE BLACKLISTED" ;
                 PUSH bool True ;
                 DIG 2 ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "VALUE TOO HIGH" ;
                 PUSH int 1000 ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "VALUE TOO LOW" ;
                 PUSH int 1 ;
                 DUP 3 ;
                 COMPARE ;
                 LT ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "NOT ENOUGH FUND" ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE
                   { EMPTY_SET address ; PUSH bool True ; SENDER ; UPDATE }
                   { PUSH bool True ; SENDER ; UPDATE } ;
                 DUP 3 ;
                 CDR ;
                 SWAP ;
                 DIG 2 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "NO ENOUGH FUND IN CONTRACT TO WITHDRAW" ;
                 BALANCE ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SENDER ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
