{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value)) (nat %burn))
            (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                (pair %getBalance (address %owner) (contract nat))))
        (or (or (pair %getTotalSupply unit (contract nat)) (nat %mint))
            (pair %transfer (address %from) (pair (address %to) (nat %value))))) ;
  storage
    (pair (pair (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
                      (big_map %metadata string bytes))
                (pair (address %owner)
                      (big_map %token_metadata
                         nat
                         (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
          (nat %totalSupply)) ;
  code { DUP ;
         CDR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "This contract do not accept token" ; FAILWITH } {} ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ; DROP ; SWAP ; DROP }
                        { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          DIG 5 ;
                          CAR ;
                          DIG 7 ;
                          CAR ;
                          CDR ;
                          DIG 7 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          PUSH string "You must be the owner of the contract to burn tokens" ;
                          FAILWITH }
                        { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                          DUP ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          COMPARE ;
                          GT ;
                          IF { PUSH string "Owner balance is too low" ; FAILWITH } {} ;
                          DIG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SUB ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          DIG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PUSH int 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SUB ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     CDR ;
                     PAIR ;
                     NIL operation ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          PUSH string "You must be the owner of the contract to mint tokens" ;
                          FAILWITH }
                        { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                          DIG 2 ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          DIG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PUSH int 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ADD ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP }
                    { DUP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      DUP ;
                      SENDER ;
                      COMPARE ;
                      NEQ ;
                      IF { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           SWAP ;
                           GET ;
                           IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                           CAR ;
                           SENDER ;
                           GET ;
                           IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                           SWAP ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           COMPARE ;
                           GE }
                         { DROP 2 ; PUSH bool True } ;
                      IF {}
                         { PUSH string "Sender not allowed to spend token from source" ; FAILWITH } ;
                      DUP ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DUP ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      COMPARE ;
                      GT ;
                      IF { PUSH string "Source balance is too low" ; FAILWITH } {} ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      SUB ;
                      ABS ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      GET ;
                      IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      ADD ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE
                        { DIG 3 ; DROP ; DIG 2 }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          DIG 5 ;
                          DIG 3 ;
                          SUB ;
                          ABS ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR } ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 5 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DIG 7 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DIG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR } ;
                 NIL operation ;
                 PAIR } } } }
