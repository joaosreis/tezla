{ parameter (or (mutez %openAuction) (or (unit %bid) (unit %claim))) ;
  storage
    (pair (bytes %assetId)
          (pair (address %owner)
                (pair (address %bestbidder)
                      (pair (mutez %bestbid) (pair (timestamp %endofbid) (nat %_state)))))) ;
  code { NIL operation ;
         DIG 1 ;
         UNPAIR ;
         DIP 1
             { UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP } ;
         IF_LEFT
           { DIG 5 ;
             DUP ;
             DUG 6 ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIP 1 { DIG 4 ; DROP 1 } ;
                  DUG 4 ;
                  PUSH int 300 ;
                  NOW ;
                  ADD ;
                  DIP 1 { DIG 3 ; DROP 1 } ;
                  DUG 3 ;
                  PUSH nat 1 ;
                  DIP 1 { DIG 2 ; DROP 1 } ;
                  DUG 2 }
                { PUSH string "InvalidState" ; FAILWITH } ;
             DROP 2 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { DROP 1 ;
                 PUSH nat 1 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "Asset not for sale" ; FAILWITH } {} ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: r2" ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: r3" ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      COMPARE ;
                      NEQ ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      COMPARE ;
                      GT ;
                      AND ;
                      IF { DIG 6 ;
                           DUP ;
                           DUG 7 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           CONTRACT unit ;
                           IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           UNIT ;
                           TRANSFER_TOKENS ;
                           CONS ;
                           DIP 1 { DIG 6 ; DROP 1 } ;
                           DUG 6 }
                         {} ;
                      SENDER ;
                      DIP 1 { DIG 3 ; DROP 1 } ;
                      DUG 3 ;
                      AMOUNT ;
                      DIP 1 { DIG 2 ; DROP 1 } ;
                      DUG 2 ;
                      PUSH int 120 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      ADD ;
                      DIP 1 { DIG 1 ; DROP 1 } ;
                      DUG 1 }
                    {} ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { DROP 1 ;
                 DUP ;
                 DUP ;
                 PUSH nat 1 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      NOW ;
                      COMPARE ;
                      GT ;
                      IF { PUSH mutez 0 ;
                           BALANCE ;
                           COMPARE ;
                           GT ;
                           IF { DIG 7 ;
                                DUP ;
                                DUG 8 ;
                                DIG 6 ;
                                DUP ;
                                DUG 7 ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                                BALANCE ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                DIP 1 { DIG 7 ; DROP 1 } ;
                                DUG 7 }
                              {} ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           DIP 1 { DIG 5 ; DROP 1 } ;
                           DUG 5 ;
                           PUSH nat 0 ;
                           DIP 1 { DIG 1 ; DROP 1 } ;
                           DUG 1 }
                         {} }
                    { PUSH string "InvalidState" ; FAILWITH } ;
                 DROP 1 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR } } } }
