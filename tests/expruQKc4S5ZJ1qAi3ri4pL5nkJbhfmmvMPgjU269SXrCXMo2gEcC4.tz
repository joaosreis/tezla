{ storage
    (pair (pair (pair (address %FA2_address) (address %admin))
                (pair (bool %allow_operations) (timestamp %genesis)))
          (pair (pair (mutez %green_field_lot_right) (big_map %metadata string bytes))
                (pair (nat %n_lots)
                      (pair (big_map %swaps nat (pair (address %issuer) (pair (nat %lot_id) (mutez %xtz_per_lot))))
                            (address %tuDAO_address))))) ;
  parameter
    (or (or (or (bool %allow_operations) (nat %cancel_swap))
            (or (nat %colonize) (or (nat %colonize_green_field_lot) (mutez %management_rewards))))
        (or (or (address %set_administrator) (key_hash %set_baker))
            (or (mutez %set_green_field_lot_right)
                (or (nat %set_n_lots) (pair %swap (nat %lot_id) (mutez %xtz_per_lot)))))) ;
  code { CAST (pair (or (or (or bool nat) (or nat (or nat mutez)))
                        (or (or address key_hash) (or mutez (or nat (pair nat mutez)))))
                    (pair (pair (pair address address) (pair bool timestamp))
                          (pair (pair mutez (big_map string bytes))
                                (pair nat (pair (big_map nat (pair address (pair nat mutez))) address))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 64 ; FAILWITH } {} ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.swaps[params].issuer" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %transfer (list (pair address (list (pair address nat)))) ;
                     IF_NONE { PUSH int 89 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat))) ;
                     NIL (pair address nat) ;
                     DUP 7 ;
                     GET 7 ;
                     DUP 7 ;
                     GET ;
                     IF_NONE { PUSH int 65 ; FAILWITH } {} ;
                     GET 3 ;
                     SENDER ;
                     PAIR ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 7 ;
                     NONE (pair address (pair nat mutez)) ;
                     DIG 4 ;
                     UPDATE ;
                     UPDATE 7 ;
                     SWAP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     IF {} { PUSH string "operations_are_currently_not_allowed" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 79 ; FAILWITH } {} ;
                     GET 4 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "amount of XTZ is lower than asked" ; FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %transfer (list (pair address (list (pair address nat)))) ;
                     IF_NONE { PUSH int 89 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat))) ;
                     NIL (pair address nat) ;
                     DUP 6 ;
                     SENDER ;
                     PAIR ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     GET 7 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 84 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     PUSH nat 25 ;
                     PUSH mutez 1000 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH int 82 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     MUL ;
                     AMOUNT ;
                     SUB ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 85 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     PUSH nat 25 ;
                     PUSH mutez 1000 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH int 82 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     GET 7 ;
                     NONE (pair address (pair nat mutez)) ;
                     DIG 4 ;
                     UPDATE ;
                     UPDATE 7 ;
                     SWAP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         IF {} { PUSH string "operations_are_currently_not_allowed" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "Amount of XTZ is lower than green field lot right" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (list (pair address (list (pair address nat)))) ;
                         IF_NONE { PUSH int 89 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address nat))) ;
                         NIL (pair address nat) ;
                         DIG 5 ;
                         SENDER ;
                         PAIR ;
                         CONS ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                         AMOUNT ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                         DIG 2 ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                     SOME ;
                     SET_DELEGATE ;
                     NIL operation ;
                     SWAP ;
                     CONS } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Solely for admin" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GT ;
                         IF {}
                            { PUSH string "WrongCondition: params.n_lots > self.data.n_lots" ; FAILWITH } ;
                         UPDATE 5 ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         IF {} { PUSH string "operations_are_currently_not_allowed" ; FAILWITH } ;
                         DUP ;
                         CDR ;
                         PUSH mutez 0 ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH string "xtz per lot cannot be 0" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (list (pair address (list (pair address nat)))) ;
                         IF_NONE { PUSH int 89 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address nat))) ;
                         NIL (pair address nat) ;
                         DUP 6 ;
                         CAR ;
                         SELF_ADDRESS ;
                         PAIR ;
                         CONS ;
                         SENDER ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         GET 7 ;
                         DIG 3 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         SENDER ;
                         PAIR 3 ;
                         SOME ;
                         DIG 4 ;
                         CAR ;
                         UPDATE ;
                         UPDATE 7 ;
                         SWAP } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
