{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)))
            (or (pair %getBalance (address %owner) (contract nat))
                (pair %getTotalSupply unit (contract nat))))
        (or (pair %transfer (address %from) (pair (address %to) (nat %value)))
            (pair %transferSigned
               (pair (pair (address %from_) (key %pk)) (pair (signature %signed) (address %to_)))
               (nat %value)))) ;
  storage
    (pair (big_map %ledger
             address
             (pair (pair (map %allowances address nat) (nat %balance)) (nat %counter)))
          (nat %totalSupply)) ;
  code { NIL operation ;
         LAMBDA
           (pair address (pair (big_map address (pair (pair (map address nat) nat) nat)) nat))
           (pair (pair (map address nat) nat) nat)
           { PUSH nat 0 ;
             PUSH nat 0 ;
             EMPTY_MAP address nat ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             GET ;
             IF_NONE {} { DIP { DROP } } } ;
         LAMBDA
           (pair (pair (pair (pair (map address nat) nat) nat) address)
                 (pair (big_map address (pair (pair (map address nat) nat) nat)) nat))
           nat
           { DUP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair (pair (map address nat) nat) nat) address)
                                (pair (big_map address (pair (pair (map address nat) nat) nat)) nat))
                          nat)
                       (lambda
                          (pair address (pair (big_map address (pair (pair (map address nat) nat) nat)) nat))
                          (pair (pair (map address nat) nat) nat)))
                 (pair (pair (pair address address) (pair nat address))
                       (pair (big_map address (pair (pair (map address nat) nat) nat)) nat)))
           (pair (list operation) (pair (big_map address (pair (pair (map address nat) nat) nat)) nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             COMPARE ;
             EQ ;
             IF { PUSH string "InvalidSelfToSelfTransfer" ; FAILWITH }
                { PUSH unit Unit } ;
             DROP ;
             DUP ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } { PUSH unit Unit } ;
             DROP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             COMPARE ;
             NEQ ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  PAIR ;
                  PAIR ;
                  DIG 7 ;
                  SWAP ;
                  EXEC ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "NotEnoughAllowance" ; FAILWITH } { PUSH unit Unit } ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  DIG 3 ;
                  SUB ;
                  ABS ;
                  DIG 5 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                  PAIR ;
                  PAIR ;
                  DIP { DROP } }
                { DIG 2 ; DROP ; DIG 5 ; DROP } ;
             DUP ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             CAR ;
             CDR ;
             SUB ;
             ABS ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             CAR ;
             DIG 2 ;
             DIG 5 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             DUP ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             DIG 3 ;
             DIG 2 ;
             CAR ;
             CDR ;
             ADD ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             CAR ;
             DIG 2 ;
             DIG 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             NIL operation ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         CAR ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "InvalidSelfToSelfApproval" ; FAILWITH }
                        { PUSH unit Unit } ;
                     DROP ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 4 ;
                     DROP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     NIL operation ;
                     DIG 3 ;
                     CDR ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     NIL operation ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     CDR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     NIL operation ;
                     DIG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { DIG 3 ;
             DROP ;
             DIG 4 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC }
               { DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP ; DIG 4 ; DROP ; DIG 5 ; DROP }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      PAIR ;
                      DIG 10 ;
                      SWAP ;
                      EXEC ;
                      DUP ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      PACK ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      PACK ;
                      DIG 10 ;
                      DUP ;
                      DUG 11 ;
                      PACK ;
                      CONCAT ;
                      CONCAT ;
                      BLAKE2B ;
                      PACK ;
                      SELF ;
                      ADDRESS ;
                      PACK ;
                      CONCAT ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      PACK ;
                      CHAIN_ID ;
                      PACK ;
                      CONCAT ;
                      CONCAT ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      HASH_KEY ;
                      IMPLICIT_ACCOUNT ;
                      ADDRESS ;
                      SWAP ;
                      DIG 11 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 8 ;
                      CHECK_SIGNATURE ;
                      IF { DIG 4 ; SWAP ; DIP { DROP } }
                         { DROP ; PUSH string "InvalidSignature" ; FAILWITH } ;
                      DIG 2 ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      ADD ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DUG 2 ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      CAR ;
                      DIG 3 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR } ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 DIG 2 ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EXEC } } } }
