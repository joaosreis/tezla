{ parameter
    (or (or (or (address %banUser) (pair %bet (nat %betType) (nat %number)))
            (or (unit %fund) (unit %initGame)))
        (or (nat %startRoulette) (address %unbanUser))) ;
  storage
    (pair (pair (pair (pair (set %bannedUsers address) (mutez %betAmount))
                      (pair (map %bets nat (pair (pair (nat %betType) (nat %number)) (address %player)))
                            (address %gameCreator)))
                (pair (pair (bool %gameState) (map %numberRange nat nat))
                      (pair (map %payouts nat nat) (mutez %requiredBalance))))
          (map %winnings address mutez)) ;
  code { LAMBDA
           (pair bool string)
           unit
           { { { DUP ; CAR ; DIP { CDR } } } ;
             IF { DROP } { FAILWITH } ;
             UNIT } ;
         SWAP ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     PUSH string "Tezos.sender = self.gameCreator" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     MEM ;
                     NOT ;
                     IF { DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 5 ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR }
                        { SWAP ;
                          DROP ;
                          PUSH string "Warning: This user is already banned." ;
                          FAILWITH } ;
                     NIL operation ;
                     PAIR }
                   { DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     PUSH string "Tezos.amount = self.betAmount" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "(betType >= 0n) and (betType <= 5n)" ;
                     PUSH nat 5 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     COMPARE ;
                     LE ;
                     PUSH nat 0 ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     COMPARE ;
                     GE ;
                     AND ;
                     PAIR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Out of range" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     COMPARE ;
                     LE ;
                     PUSH nat 0 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     COMPARE ;
                     GE ;
                     AND ;
                     PAIR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     AMOUNT ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     MUL ;
                     DUP ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     PUSH string "provisionalBalance < Tezos.balance" ;
                     BALANCE ;
                     DIG 2 ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ADD ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     DIG 6 ;
                     DIG 7 ;
                     PAIR ;
                     PAIR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SIZE ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIG 2 ; DROP 2 ; NIL operation ; PAIR }
                   { DROP ;
                     PUSH string "gameCreator already exist" ;
                     PUSH bool False ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH mutez 0 ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     EMPTY_MAP nat nat ;
                     PUSH nat 20 ;
                     SOME ;
                     PUSH nat 1 ;
                     UPDATE ;
                     PUSH nat 2 ;
                     SOME ;
                     PUSH nat 0 ;
                     UPDATE ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     EMPTY_MAP nat nat ;
                     PUSH nat 36 ;
                     SOME ;
                     PUSH nat 1 ;
                     UPDATE ;
                     PUSH nat 1 ;
                     SOME ;
                     PUSH nat 0 ;
                     UPDATE ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH mutez 1000000 ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { SWAP ;
                 PUSH string "Tezos.sender = self.gameCreator" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "size(self.bets) > 0n" ;
                 PUSH nat 0 ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH int 0 ;
                 NIL operation ;
                 NIL operation ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 LAMBDA
                   (pair (pair (pair (pair (pair (pair (set address) mutez) (pair (map nat (pair (pair nat nat) address)) address))
                                           (pair (pair bool (map nat nat)) (pair (map nat nat) mutez)))
                                     (map address mutez))
                               nat)
                         (pair (pair (list operation) (list operation)) int))
                   (pair bool (pair (pair (list operation) (list operation)) int))
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     DIG 2 ;
                     DUP ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SIZE ;
                     INT ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          ABS ;
                          GET ;
                          IF_NONE
                            { PUSH address "tz1TdevbKxkZDgFrFuTjzy9uvMmkatjeCsDD" ;
                              PUSH nat 0 ;
                              PUSH nat 0 ;
                              PAIR ;
                              PAIR }
                            {} ;
                          PUSH nat 0 ;
                          { DIP 6 { DUP } ; DIG 7 } ;
                          COMPARE ;
                          EQ ;
                          IF { DIG 5 ;
                               DROP ;
                               PUSH nat 0 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               PUSH nat 1 ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               CAR ;
                               CAR ;
                               COMPARE ;
                               EQ ;
                               AND }
                             { PUSH nat 1 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CAR ;
                               COMPARE ;
                               EQ ;
                               IF { DIG 5 ; SWAP ; DUP ; DUG 2 ; CAR ; CDR ; COMPARE ; EQ }
                                  { PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH nat 0 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         CDR ;
                                         COMPARE ;
                                         EQ ;
                                         IF { PUSH nat 36 ;
                                              { DIP 6 { DUP } ; DIG 7 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 34 ;
                                              { DIP 7 { DUP } ; DIG 8 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 32 ;
                                              { DIP 8 { DUP } ; DIG 9 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 30 ;
                                              { DIP 9 { DUP } ; DIG 10 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 27 ;
                                              { DIP 10 { DUP } ; DIG 11 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 25 ;
                                              { DIP 11 { DUP } ; DIG 12 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 23 ;
                                              { DIP 12 { DUP } ; DIG 13 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 21 ;
                                              { DIP 13 { DUP } ; DIG 14 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 19 ;
                                              { DIP 14 { DUP } ; DIG 15 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 18 ;
                                              { DIP 15 { DUP } ; DIG 16 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 16 ;
                                              { DIP 16 { DUP } ; DIG 17 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 14 ;
                                              { DIP 17 { DUP } ; DIG 18 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 12 ;
                                              { DIP 18 { DUP } ; DIG 19 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 9 ;
                                              { DIP 19 { DUP } ; DIG 20 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 7 ;
                                              { DIP 20 { DUP } ; DIG 21 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 5 ;
                                              { DIP 21 { DUP } ; DIG 22 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 3 ;
                                              { DIP 22 { DUP } ; DIG 23 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 1 ;
                                              DIG 23 ;
                                              COMPARE ;
                                              EQ ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              IF { PUSH bool True } { PUSH bool False } }
                                            { PUSH nat 35 ;
                                              { DIP 6 { DUP } ; DIG 7 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 33 ;
                                              { DIP 7 { DUP } ; DIG 8 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 31 ;
                                              { DIP 8 { DUP } ; DIG 9 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 29 ;
                                              { DIP 9 { DUP } ; DIG 10 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 28 ;
                                              { DIP 10 { DUP } ; DIG 11 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 26 ;
                                              { DIP 11 { DUP } ; DIG 12 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 24 ;
                                              { DIP 12 { DUP } ; DIG 13 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 22 ;
                                              { DIP 13 { DUP } ; DIG 14 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 20 ;
                                              { DIP 14 { DUP } ; DIG 15 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 17 ;
                                              { DIP 15 { DUP } ; DIG 16 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 15 ;
                                              { DIP 16 { DUP } ; DIG 17 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 13 ;
                                              { DIP 17 { DUP } ; DIG 18 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 11 ;
                                              { DIP 18 { DUP } ; DIG 19 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 10 ;
                                              { DIP 19 { DUP } ; DIG 20 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 8 ;
                                              { DIP 20 { DUP } ; DIG 21 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 6 ;
                                              { DIP 21 { DUP } ; DIG 22 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 4 ;
                                              { DIP 22 { DUP } ; DIG 23 } ;
                                              COMPARE ;
                                              EQ ;
                                              PUSH nat 2 ;
                                              DIG 23 ;
                                              COMPARE ;
                                              EQ ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              OR ;
                                              IF { PUSH bool True } { PUSH bool False } } }
                                       { DIG 5 ; DROP ; PUSH bool False } } } ;
                          IF { DIG 3 ;
                               DROP ;
                               DUP ;
                               CDR ;
                               CONTRACT unit ;
                               IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                               { DIP 4 { DUP } ; DIG 5 } ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               CAR ;
                               CAR ;
                               GET ;
                               IF_NONE { PUSH nat 0 } {} ;
                               { DIP 5 { DUP } ; DIG 6 } ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               MUL ;
                               DIG 5 ;
                               CDR ;
                               DIG 3 ;
                               CDR ;
                               GET ;
                               IF_NONE { PUSH mutez 0 } {} ;
                               ADD ;
                               UNIT ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               DUP ;
                               PAIR }
                             { DIG 4 ; DROP 2 ; DIG 2 ; CAR ; CAR ; PAIR } ;
                          PUSH int 1 ;
                          DIG 2 ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          PUSH bool True ;
                          PAIR }
                        { DIG 2 ; DIG 3 ; DROP 3 ; PUSH bool False ; PAIR } } ;
                 SWAP ;
                 APPLY ;
                 SWAP ;
                 PUSH bool True ;
                 LOOP { DIP { DUP } ; EXEC ; { { DUP ; CAR ; DIP { CDR } } } } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 EMPTY_MAP nat (pair (pair nat nat) address) ;
                 PAIR ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 PUSH mutez 0 ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 PAIR }
               { SWAP ;
                 PUSH string "Tezos.sender = self.gameCreator" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 MEM ;
                 IF { DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CAR ;
                      CDR ;
                      { DIP 3 { DUP } ; DIG 4 } ;
                      CAR ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DIG 5 ;
                      PUSH bool False ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      PAIR }
                    { SWAP ;
                      DROP ;
                      PUSH string "Warning: This user has not been banned." ;
                      FAILWITH } ;
                 NIL operation ;
                 PAIR } } } }
