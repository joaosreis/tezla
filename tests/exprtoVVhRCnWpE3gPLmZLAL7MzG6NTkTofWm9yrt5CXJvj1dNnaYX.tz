{ parameter (or (or (unit %claim) (nat %deposit)) (nat %withdraw)) ;
  storage
    (pair (pair (pair (pair (nat %accumulatedSTKRPerShare)
                            (big_map %delegators address (pair (nat %balance) (nat %rewardDebt))))
                      (pair (nat %farmTokenBalance) (nat %lastBlockUpdate)))
                (pair (pair (address %lpTokenContract) (nat %realizedRewards))
                      (pair (nat %rewardPerBlock) (address %stkrTokenContract))))
          (pair (nat %totalBlocks) (nat %unrealizedRewards))) ;
  code { LAMBDA
           (pair nat
                 (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                             (pair (pair address nat) (pair nat address)))
                       (pair nat nat)))
           (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                       (pair (pair address nat) (pair nat address)))
                 (pair nat nat))
           { DUP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair (lambda
                    (pair nat
                          (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                                      (pair (pair address nat) (pair nat address)))
                                (pair nat nat)))
                    (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                                (pair (pair address nat) (pair nat address)))
                          (pair nat nat)))
                 (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                             (pair (pair address nat) (pair nat address)))
                       (pair nat nat)))
           (pair (pair (pair (pair nat (big_map address (pair nat nat))) (pair nat nat))
                       (pair (pair address nat) (pair nat address)))
                 (pair nat nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             LEVEL ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             CAR ;
             COMPARE ;
             NEQ ;
             IF { PUSH nat 0 ;
                  SWAP ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  COMPARE ;
                  EQ ;
                  IF { PUSH unit Unit ; RIGHT unit ; LEFT unit }
                     { PUSH unit Unit ; RIGHT (or unit unit) } }
                { DROP ; PUSH unit Unit ; LEFT unit ; LEFT unit } ;
             IF_LEFT
               { IF_LEFT { DROP 2 ; SWAP ; DROP } { DROP ; PAIR ; EXEC } }
               { DROP ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 MUL ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 ADD ;
                 ADD ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 MUL ;
                 DUP ;
                 DIG 2 ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DROP ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      SUB ;
                      SUB ;
                      ABS }
                    { DROP ; SWAP ; DROP } ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PUSH nat 1000000000000 ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 EXEC } } ;
         SWAP ;
         APPLY ;
         PUSH string "NoContractFound" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 SENDER ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "DelegatorNotKnown" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 MUL ;
                 SUB ;
                 ABS ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ABS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 SENDER ;
                 PAIR ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                 IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { SWAP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MUL ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 SOME ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 SENDER ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                 IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } }
           { DROP ; SWAP ; DROP ; SWAP ; DROP ; NIL operation ; PAIR } } }
