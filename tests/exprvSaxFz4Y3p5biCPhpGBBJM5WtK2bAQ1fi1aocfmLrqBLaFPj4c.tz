{ parameter
    (or (or (or (or (nat %bid) (nat %cancel))
                (or (pair %configure
                       (nat %max_time)
                       (pair (nat %min_time)
                             (pair (nat %ext_time) (pair (nat %max_seller_auctions) (nat %fee)))))
                    (unit %confirm_admin)))
            (or (or (pair %create
                       (mutez %ask)
                       (pair (mutez %bid_step) (pair (nat %duration) (pair (address %kt) (nat %token_id)))))
                    (bool %pause))
                (or (nat %resolve) (option %set_admin address))))
        (pair %set_ban (pair address nat) bool)) ;
  storage
    (pair (pair (pair (pair (big_map %auctions
                               nat
                               (pair (address %seller)
                                     (pair (mutez %bid)
                                           (pair (address %bidder)
                                                 (pair (timestamp %end_time)
                                                       (pair (mutez %ask)
                                                             (pair (mutez %bid_step) (pair (int %duration) (pair (address %kt) (nat %token_id))))))))))
                            (big_map %banned (pair address nat) unit))
                      (pair (big_map %by_seller address (set nat)) (int %ext_time)))
                (pair (pair (nat %fee) (address %fee_address))
                      (pair (nat %max_seller_auctions) (int %max_time))))
          (pair (pair (pair (int %min_time) (nat %next_id))
                      (pair (bool %paused) (option %pending_admin address)))
                (address %zadmin))) ;
  code { PUSH nat 600 ;
         NIL operation ;
         LAMBDA
           (pair (pair (pair address nat) address) address)
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DUP ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "NOT_FA2_CONTRACT" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             NIL (pair address (pair nat nat)) ;
             PUSH nat 1 ;
             DIG 5 ;
             CDR ;
             PAIR ;
             DIG 6 ;
             PAIR ;
             CONS ;
             DIG 4 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair mutez address)
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CONTRACT unit ;
             IF_NONE { PUSH string "NOT_CONTRACT" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS } ;
         DIG 4 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 5 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH string "BID_REJECTED" ;
                         SOURCE ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         PAIR ;
                         PAIR ;
                         PUSH mutez 0 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 11 ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 6 ;
                              DROP ;
                              PUSH string "WRONG_XTZ_AMOUNT" ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 9 ;
                              AMOUNT ;
                              COMPARE ;
                              NEQ ;
                              IF { FAILWITH } { DROP } ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              PUSH nat 1000 ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 9 ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              MUL ;
                              NIL operation ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              PAIR ;
                              { DIP 7 { DUP } ; DIG 8 } ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              DIG 2 ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              GET 9 ;
                              SUB ;
                              PAIR ;
                              DIG 6 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              SENDER ;
                              SELF_ADDRESS ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              GET 16 ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              GET 15 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 6 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              DIG 4 ;
                              DIG 3 ;
                              CAR ;
                              DIG 4 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CDR ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              SWAP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              GET ;
                              IF_NONE { EMPTY_SET nat } {} ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              PUSH bool False ;
                              SWAP ;
                              UPDATE ;
                              DIG 6 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 5 ;
                              NONE (pair address
                                         (pair mutez
                                               (pair address (pair timestamp (pair mutez (pair mutez (pair int (pair address nat)))))))) ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR }
                            { DIG 5 ;
                              DROP ;
                              PUSH timestamp 0 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 7 ;
                              COMPARE ;
                              EQ ;
                              IF { SWAP ; DUP ; GET 13 ; NOW ; ADD ; UPDATE 7 } { SWAP } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DIG 2 ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              PAIR ;
                              PAIR ;
                              PUSH string "AUCTION_ENDED" ;
                              NOW ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 7 ;
                              COMPARE ;
                              LT ;
                              IF { FAILWITH } { DROP } ;
                              PUSH string "SAME_BIDDER" ;
                              SENDER ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 5 ;
                              COMPARE ;
                              EQ ;
                              IF { FAILWITH } { DROP } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 5 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { SWAP ; DUP ; DUG 2 ; GET 9 }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 11 ;
                                   { DIP 2 { DUP } ; DIG 3 } ;
                                   GET 3 ;
                                   ADD } ;
                              PUSH string "BID_TOO_LOW" ;
                              SWAP ;
                              AMOUNT ;
                              COMPARE ;
                              LT ;
                              IF { FAILWITH } { DROP } ;
                              PUSH mutez 0 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 3 ;
                              COMPARE ;
                              GT ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 5 ;
                              COMPARE ;
                              NEQ ;
                              AND ;
                              IF { DIG 5 ;
                                   DROP ;
                                   NIL operation ;
                                   { DIP 2 { DUP } ; DIG 3 } ;
                                   GET 5 ;
                                   { DIP 3 { DUP } ; DIG 4 } ;
                                   GET 3 ;
                                   PAIR ;
                                   DIG 6 ;
                                   SWAP ;
                                   EXEC ;
                                   CONS }
                                 { DIG 4 ; DROP ; DIG 4 } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              AMOUNT ;
                              UPDATE 3 ;
                              DUP ;
                              SENDER ;
                              UPDATE 5 ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              NOW ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 7 ;
                              SUB ;
                              COMPARE ;
                              LT ;
                              IF { DUP ;
                                   { DIP 5 { DUP } ; DIG 6 } ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   { DIP 2 { DUP } ; DIG 3 } ;
                                   GET 7 ;
                                   ADD ;
                                   UPDATE 7 }
                                 { DUP } ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              CDR ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              CAR ;
                              CDR ;
                              { DIP 7 { DUP } ; DIG 8 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              { DIP 8 { DUP } ; DIG 9 } ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 9 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              DIG 10 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CDR ;
                              DIG 5 ;
                              CAR ;
                              CDR ;
                              DIG 5 ;
                              PAIR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              CDR ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              CAR ;
                              PAIR } ;
                         { { DUP ; CAR ; DIP { CDR } } } ;
                         CDR ;
                         PAIR }
                       { DIG 2 ;
                         DIG 4 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ_REJECTED" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH string "AUCTION_IS_STARTED" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         COMPARE ;
                         NEQ ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "NOT_A_SELLER" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { FAILWITH } { DROP } ;
                         DIG 2 ;
                         SENDER ;
                         DIG 3 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         GET ;
                         IF_NONE { EMPTY_SET nat } {} ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         PUSH bool False ;
                         SWAP ;
                         UPDATE ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         NONE (pair address
                                    (pair mutez
                                          (pair address (pair timestamp (pair mutez (pair mutez (pair int (pair address nat)))))))) ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         SENDER ;
                         SELF_ADDRESS ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 16 ;
                         DIG 5 ;
                         GET 15 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         CONS ;
                         PAIR } }
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "MAX_TIME" ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "MIN_TIME" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 3 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "EXT_TIME" ;
                         DIG 4 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 5 ;
                         COMPARE ;
                         LT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "MAX_AUCTIONS" ;
                         PUSH nat 100 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 7 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "FEE" ;
                         PUSH nat 1000 ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         GET 8 ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         INT ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 5 ;
                         INT ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 3 ;
                         INT ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 7 ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         GET 8 ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NOT_PENDING_ADMIN" ; FAILWITH }
                           { DUP ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CAR ;
                                  PAIR ;
                                  SWAP ;
                                  CAR ;
                                  PAIR ;
                                  DUP ;
                                  CDR ;
                                  CDR ;
                                  NONE address ;
                                  { DIP 2 { DUP } ; DIG 3 } ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  PAIR ;
                                  { DIP 2 { DUP } ; DIG 3 } ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  CAR ;
                                  PAIR } } ;
                         SWAP ;
                         PAIR } } }
               { DIG 5 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ_REJECTED" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "TOKEN_IS_BANNED" ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH nat 0 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 7 ;
                         PAIR ;
                         MEM ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         GET 8 ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 7 ;
                         PAIR ;
                         MEM ;
                         OR ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         GET ;
                         IF_NONE { EMPTY_SET nat } {} ;
                         PUSH string "TOO_MANY_AUCTIONS_BY_SELLER" ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SIZE ;
                         COMPARE ;
                         GE ;
                         IF { FAILWITH } { DROP } ;
                         SENDER ;
                         PUSH mutez 0 ;
                         SENDER ;
                         PUSH timestamp 0 ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         GET 3 ;
                         { DIP 7 { DUP } ; DIG 8 } ;
                         GET 5 ;
                         INT ;
                         { DIP 8 { DUP } ; DIG 9 } ;
                         GET 7 ;
                         DIG 9 ;
                         GET 8 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PUSH mutez 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 11 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "BAD_DURATION" ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 13 ;
                              COMPARE ;
                              LT ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 13 ;
                              COMPARE ;
                              GT ;
                              OR ;
                              IF { FAILWITH } { DROP } }
                            { PUSH int 0 ; UPDATE 13 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH bool True ;
                         SWAP ;
                         UPDATE ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         DIG 6 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH nat 1 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         SELF_ADDRESS ;
                         SENDER ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         GET 16 ;
                         DIG 5 ;
                         GET 15 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         NOT ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         PUSH string "XTZ_REJECTED" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 11 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "AUCTION_NOT_ENDED" ;
                              PUSH timestamp 0 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 7 ;
                              COMPARE ;
                              EQ ;
                              NOW ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 7 ;
                              COMPARE ;
                              GE ;
                              OR ;
                              IF { FAILWITH } { DROP } ;
                              PUSH string "NO_BIDS" ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 5 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { FAILWITH } { DROP } ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              PUSH nat 1000 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              GET 3 ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              MUL ;
                              NIL operation ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              PAIR ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              DIG 2 ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 3 ;
                              SUB ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 5 ;
                              SELF_ADDRESS ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              GET 16 ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              GET 15 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              CONS ;
                              DIG 3 ;
                              DIG 2 ;
                              CAR ;
                              DIG 3 ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CDR ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              { DIP 6 { DUP } ; DIG 7 } ;
                              SWAP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              GET ;
                              IF_NONE { EMPTY_SET nat } {} ;
                              { DIP 5 { DUP } ; DIG 6 } ;
                              PUSH bool False ;
                              SWAP ;
                              UPDATE ;
                              DIG 6 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 5 ;
                              NONE (pair address
                                         (pair mutez
                                               (pair address (pair timestamp (pair mutez (pair mutez (pair int (pair address nat)))))))) ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR }
                            { DROP 5 ; PUSH string "NOT_AN_AUCTION" ; FAILWITH } }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 5 ;
             DROP 3 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CDR ;
             CDR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             SWAP ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CAR ;
                  CDR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  { DIP 4 { DUP } ; DIG 5 } ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  PUSH unit Unit ;
                  DIG 5 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CAR ;
                  CDR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CAR ;
                  CAR ;
                  CDR ;
                  { DIP 4 { DUP } ; DIG 5 } ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  NONE unit ;
                  SWAP ;
                  UPDATE ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  PAIR } ;
             SWAP ;
             PAIR } } }
