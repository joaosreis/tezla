{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (unit %buy))
            (or (pair %name nat string) (pair %render nat (pair bytes signature))))
        (or (or (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (list %update_operators
                   (or (pair %add_operator (address %owner) (pair (address %owner) (nat %token_id)))
                       (pair %remove_operator (address %owner) (pair (address %owner) (nat %token_id))))))
            (unit %withdraw))) ;
  storage
    (pair (pair (pair (mutez %credit) (big_map %debits address mutez))
                (pair (big_map %ledger (pair (address %owner) (nat %token_id)) nat)
                      (big_map %metadata string bytes)))
          (pair (pair (key %mint_key) (nat %next_id))
                (pair (big_map %operators
                         (pair (address %owner) (pair (address %owner) (nat %token_id)))
                         unit)
                      (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))) ;
  code { NIL operation ;
         LAMBDA
           (pair (pair address nat)
                 (pair (pair (pair mutez (big_map address mutez))
                             (pair (big_map (pair address nat) nat) (big_map string bytes)))
                       (pair (pair key nat)
                             (pair (big_map (pair address (pair address nat)) unit)
                                   (big_map nat (pair nat (map string bytes)))))))
           nat
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CAR ;
             CDR ;
             COMPARE ;
             LE ;
             IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
             DIG 2 ;
             CAR ;
             CDR ;
             CAR ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           PAIR ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           SWAP ;
                           EXEC ;
                           SWAP ;
                           PAIR } ;
                     DIG 3 ;
                     DROP ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     PUSH nat 2000 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "SOLD_OUT" ; FAILWITH } {} ;
                     AMOUNT ;
                     PUSH mutez 5000000 ;
                     PUSH nat 10 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     PUSH mutez 5000000 ;
                     ADD ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "WRONG_TZ_AMOUNT" ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 1 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     EMPTY_MAP string bytes ;
                     PUSH bytes 0x53656564 ;
                     SOME ;
                     PUSH string "name" ;
                     UPDATE ;
                     PUSH bytes 0x30 ;
                     SOME ;
                     PUSH string "decimals" ;
                     UPDATE ;
                     PUSH bytes 0x74727565 ;
                     SOME ;
                     PUSH string "booleanAmount" ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     PUSH nat 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     PUSH nat 1 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH nat 40 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SIZE ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     GET ;
                     IF_NONE { PUSH string "BAD_ID" ; FAILWITH } { CDR } ;
                     DUP ;
                     PUSH string "date" ;
                     GET ;
                     IF_NONE
                       { PUSH string "NOT_READY_YET" ; FAILWITH }
                       { UNPACK timestamp ; IF_NONE { PUSH string "BAD_TS" ; FAILWITH } {} } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PUSH string "name_time" ;
                     GET ;
                     IF_NONE
                       { PUSH int 60 ; SWAP ; DUP ; DUG 2 ; ADD }
                       { UNPACK timestamp ; IF_NONE { PUSH string "BAD_NT" ; FAILWITH } {} } ;
                     NOW ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "TOO_SOON" ; FAILWITH } {} ;
                     DIG 2 ;
                     DIG 4 ;
                     PACK ;
                     SOME ;
                     PUSH string "name" ;
                     UPDATE ;
                     NOW ;
                     PACK ;
                     SOME ;
                     PUSH string "date" ;
                     UPDATE ;
                     PUSH int 2 ;
                     DIG 3 ;
                     DIG 3 ;
                     SUB ;
                     MUL ;
                     NOW ;
                     ADD ;
                     PACK ;
                     SOME ;
                     PUSH string "name_time" ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     PUSH nat 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH nat 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SWAP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CHECK_SIGNATURE ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH string "BAD_ID" ; FAILWITH } {} ;
                     PUSH string "0123456789ABCDEF" ;
                     DUP ;
                     PUSH nat 1 ;
                     PUSH nat 15 ;
                     PUSH nat 8 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     LSR ;
                     AND ;
                     SLICE ;
                     IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PUSH nat 1 ;
                     PUSH nat 15 ;
                     PUSH nat 4 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     LSR ;
                     AND ;
                     SLICE ;
                     IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                     DIG 2 ;
                     PUSH nat 1 ;
                     PUSH nat 15 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     AND ;
                     SLICE ;
                     IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                     SWAP ;
                     CONCAT ;
                     SWAP ;
                     CONCAT ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE {} { DROP ; PUSH string "MINTED_ALREADY" ; FAILWITH } ;
                     DIG 4 ;
                     UNPACK (map string bytes) ;
                     IF_NONE { PUSH string "BAD0" ; FAILWITH } {} ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH string "BAD1" ; FAILWITH } {} ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     DIG 2 ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP ; SWAP ; DROP }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 3 ;
                                 CDR ;
                                 CDR ;
                                 DIG 2 ;
                                 SWAP ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 CAR ;
                                 PAIR } } ;
                     DIG 2 ;
                     DROP ;
                     DUP ;
                     CDR ;
                     NOW ;
                     PACK ;
                     SOME ;
                     PUSH string "date" ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { ITER { DUP ;
                            DUG 2 ;
                            CAR ;
                            SWAP ;
                            DIG 2 ;
                            CDR ;
                            ITER { SWAP ;
                                   DUP ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CAR ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   SENDER ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH unit Unit }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CAR ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        DIG 2 ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DIG 2 ;
                                        SENDER ;
                                        PAIR ;
                                        DIG 2 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } { DROP ; UNIT } } ;
                                   DROP ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   LT ;
                                   IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CAR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        SWAP ;
                                        EXEC ;
                                        PUSH nat 0 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             GET ;
                                             IF_NONE { PUSH mutez 0 } {} ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CDR ;
                                             CDR ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             MUL ;
                                             EDIV ;
                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                             CAR ;
                                             DUP ;
                                             DIG 2 ;
                                             SUB ;
                                             SWAP ;
                                             DIG 4 ;
                                             DUP ;
                                             DUG 5 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 6 ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             GET ;
                                             IF_NONE { PUSH mutez 0 } {} ;
                                             ADD ;
                                             DIG 4 ;
                                             DUP ;
                                             DUG 5 ;
                                             CDR ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CAR ;
                                             CDR ;
                                             DIG 6 ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 4 ;
                                             DIG 9 ;
                                             DUP ;
                                             DUG 10 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 6 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 4 ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CAR ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 3 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR }
                                           { DIG 2 } ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        SUB ;
                                        ABS ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        ADD ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        DIG 7 ;
                                        DUP ;
                                        DUG 8 ;
                                        CDR ;
                                        CAR ;
                                        DIG 9 ;
                                        DUP ;
                                        DUG 10 ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 5 ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        CDR ;
                                        CAR ;
                                        DIG 7 ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR }
                                      { DIG 2 ; DROP ; SWAP ; PAIR } ;
                                   CAR } ;
                            SWAP ;
                            DROP } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     ITER { IF_LEFT
                              { DUP ;
                                CDR ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CAR ;
                                CDR ;
                                COMPARE ;
                                LE ;
                                IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
                                DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                UNIT ;
                                DIG 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CAR ;
                                PAIR }
                              { DUP ;
                                CDR ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CAR ;
                                CDR ;
                                COMPARE ;
                                LE ;
                                IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
                                DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                NEQ ;
                                IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } {} ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                DIG 2 ;
                                NONE unit ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CAR ;
                                PAIR } } ;
                     SWAP ;
                     PAIR } }
               { DROP ;
                 DIG 2 ;
                 DROP ;
                 DUP ;
                 PUSH nat 0 ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "NOT_A_SHAREHOLDER" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH mutez 0 } {} ;
                 SWAP ;
                 PUSH nat 10000 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 BALANCE ;
                 ADD ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 MUL ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 COMPARE ;
                 GE ;
                 IF { PUSH string "LIMIT_REACHED" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 SUB ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 6 ;
                 ADD ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SENDER ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "No contract" ; FAILWITH } {} ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 DIG 3 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR } } } }
