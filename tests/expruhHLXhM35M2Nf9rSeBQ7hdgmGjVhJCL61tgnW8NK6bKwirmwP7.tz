{ storage
    (pair (pair (pair (address %administrator) (nat %all_tokens))
                (pair (big_map %ledger address nat) (big_map %metadata string bytes)))
          (pair (pair (bool %minted)
                      (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit))
                (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                      (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))))) ;
  parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (pair %mint (address %address) (pair (nat %amount) (nat %token_id))))
            (or (pair %mutez_transfer (mutez %amount) (address %destination))
                (address %set_administrator)))
        (or (or (bytes %set_contract_metadata_uri)
                (pair %set_token_metadata_uri (nat %token_id) (bytes %uri)))
            (or (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (list %update_operators
                   (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                       (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))) ;
  code { CAST (pair (or (or (or (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat))))
                                (pair address (pair nat nat)))
                            (or (pair mutez address) address))
                        (or (or bytes (pair nat bytes))
                            (or (list (pair address (list (pair address (pair nat nat)))))
                                (list (or (pair address (pair address nat)) (pair address (pair address nat)))))))
                    (pair (pair (pair address nat) (pair (big_map address nat) (big_map string bytes)))
                          (pair (pair bool (big_map (pair address (pair address nat)) unit))
                                (pair (big_map nat (pair nat (map string bytes)))
                                      (big_map nat (pair (map string bytes) nat)))))) ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DUP ;
                     CAR ;
                     MAP { DUP 3 ;
                           GET 6 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           GET 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           MEM ;
                           IF { DUP 3 ;
                                CAR ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                GET ;
                                IF_NONE { PUSH int 462 ; FAILWITH } {} ;
                                SWAP ;
                                PAIR }
                              { PUSH nat 0 ; SWAP ; PAIR } } ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 551 ; FAILWITH } ;
                     PUSH bool False ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "mint is a one time action, already minted" ; FAILWITH } ;
                     DUP ;
                     GET 4 ;
                     PUSH nat 0 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                     DUP ;
                     GET 4 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP ;
                     PUSH nat 1 ;
                     DUP 7 ;
                     GET 4 ;
                     ADD ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MEM ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DUP 6 ;
                          CAR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 563 ; FAILWITH } {} ;
                          DUP 7 ;
                          GET 3 ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP 5 ;
                          GET 3 ;
                          SOME ;
                          DUP 6 ;
                          CAR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          DUP ;
                          GET 6 ;
                          DUP 3 ;
                          GET 3 ;
                          PUSH (map string bytes)
                               { Elt "decimals" 0x3130 ;
                                 Elt "description"
                                     0x4b616c616d696e74204e465420506c6174666f726d205265776172647320546f6b656e ;
                                 Elt "name" 0x4b616c616d20546f6b656e ;
                                 Elt "symbol" 0x4b414c414d } ;
                          PAIR ;
                          SOME ;
                          DUP 4 ;
                          GET 4 ;
                          UPDATE ;
                          UPDATE 6 ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     PUSH (map string bytes)
                          { Elt "decimals" 0x3130 ;
                            Elt "description"
                                0x4b616c616d696e74204e465420506c6174666f726d205265776172647320546f6b656e ;
                            Elt "displayUri"
                                0x68747470733a2f2f6b616c616d2d746f6b656e2e73332d61702d736f757468656173742d312e616d617a6f6e6177732e636f6d2f6b616c616d2d746f6b656e2d6c6f676f2e706e67 ;
                            Elt "name" 0x4b616c616d20546f6b656e ;
                            Elt "symbol" 0x4b414c414d ;
                            Elt "thumbnailUri"
                                0x68747470733a2f2f6b616c616d2d746f6b656e2e73332d61702d736f757468656173742d312e616d617a6f6e6177732e636f6d2f6b616c616d2d746f6b656e2d6c6f676f2e706e67 } ;
                     DUP 4 ;
                     GET 4 ;
                     PAIR ;
                     SOME ;
                     DIG 3 ;
                     GET 4 ;
                     UPDATE ;
                     UPDATE 5 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 408 ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 411 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 530 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 392 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 4 ;
                     SOME ;
                     PUSH string "" ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR }
                   { PUSH nat 1 ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 401 ; FAILWITH } {} ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 5 ;
                     DUP ;
                     DUP 4 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 403 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     DIG 5 ;
                     CDR ;
                     SOME ;
                     PUSH string "" ;
                     UPDATE ;
                     UPDATE 2 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 5 } }
               { IF_LEFT
                   { DUP ;
                     ITER { DUP ;
                            CDR ;
                            ITER { DUP ;
                                   GET 4 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   LT ;
                                   IF {} { PUSH string "TRANSFER_OF_ZERO" ; FAILWITH } ;
                                   DUP ;
                                   GET 3 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   EQ ;
                                   IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                                   SENDER ;
                                   DUP 3 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True }
                                      { DUP 4 ;
                                        GET 3 ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        SENDER ;
                                        DUP 5 ;
                                        CAR ;
                                        PAIR 3 ;
                                        MEM } ;
                                   IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                   DUP ;
                                   CAR ;
                                   SELF_ADDRESS ;
                                   COMPARE ;
                                   NEQ ;
                                   IF {}
                                      { PUSH string "params.to_ address can't be kalam token contract address" ;
                                        FAILWITH } ;
                                   DUP 4 ;
                                   GET 6 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 3 ;
                                   MEM ;
                                   IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                   DUP ;
                                   GET 4 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DUP ;
                                        GET 4 ;
                                        DUP 5 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 4 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 440 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                        DUP 4 ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DUP ;
                                        DUP 7 ;
                                        CAR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 444 ; FAILWITH } { DROP } ;
                                        DUP 6 ;
                                        GET 4 ;
                                        DIG 9 ;
                                        CAR ;
                                        GET 3 ;
                                        DUP 9 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 444 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 444 ; FAILWITH } {} ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        MEM ;
                                        IF { DIG 3 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DUP ;
                                             DUP 6 ;
                                             CAR ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH int 447 ; FAILWITH } {} ;
                                             DIG 6 ;
                                             GET 4 ;
                                             ADD ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 }
                                           { DIG 3 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             DUP 5 ;
                                             GET 4 ;
                                             SOME ;
                                             DIG 5 ;
                                             CAR ;
                                             UPDATE ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 } }
                                      { DROP } } ;
                            DROP } ;
                     DROP }
                   { DUP ;
                     ITER { IF_LEFT
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH int 505 ; FAILWITH } ;
                                DIG 2 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                PUSH (option unit) (Some Unit) ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                CAR ;
                                PAIR 3 ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP }
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH int 511 ; FAILWITH } ;
                                DIG 2 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                NONE unit ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                CAR ;
                                PAIR 3 ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } } ;
                     DROP } } ;
             NIL operation } ;
         PAIR } }
