{ parameter
    (or (or (or (pair %approve address nat)
                (pair %getAllowance (pair address address) (contract nat)))
            (or (pair %getBalance address (contract nat))
                (pair %getTotalSupply unit (contract nat))))
        (pair %transfer (pair address address) nat)) ;
  storage
    (pair (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
                (big_map %metadata string bytes))
          (nat %totalSupply)) ;
  code { PUSH nat 100 ;
         SWAP ;
         UNPAIR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "This contract do not accept token" ; FAILWITH } {} ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { UNPAIR ;
                     DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP 2 }
                        { DUP 3 ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                          DUP 4 ;
                          CDR ;
                          DUP 5 ;
                          CAR ;
                          CDR ;
                          DIG 5 ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          DIG 6 ;
                          DIG 6 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUP 3 ;
                     CDR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     UNPAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     CDR ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             DUP 4 ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 }
                { SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 5 ;
                  SOURCE ;
                  SENDER ;
                  COMPARE ;
                  NEQ ;
                  IF { DIG 2 ;
                       CAR ;
                       CAR ;
                       SWAP ;
                       GET ;
                       IF_NONE { PUSH string "MAP FIND" ; FAILWITH } { DROP } ;
                       DUP 6 ;
                       COMPARE ;
                       GE }
                     { DROP 3 ; PUSH bool True } ;
                  IF {}
                     { PUSH string "Sender not allowed to spend token from source" ; FAILWITH } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CAR ;
                  DUP 4 ;
                  GET ;
                  IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                  DUP ;
                  CDR ;
                  DUP 3 ;
                  COMPARE ;
                  GT ;
                  IF { PUSH string "Source balance is too low" ; FAILWITH } {} ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  SUB ;
                  ABS ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DUP 3 ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  DUP 4 ;
                  DUP 7 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  CAR ;
                  DUP 6 ;
                  GET ;
                  IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                  DUP 4 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  ADD ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  SENDER ;
                  DIG 5 ;
                  COMPARE ;
                  NEQ ;
                  IF { PUSH int 0 ;
                       DUP 5 ;
                       DUP 8 ;
                       SUB ;
                       COMPARE ;
                       LT ;
                       IF { DIG 3 ;
                            DIG 5 ;
                            DROP 2 ;
                            PUSH string "Allowance amount cannot be negative" ;
                            FAILWITH }
                          { DUP 3 ;
                            CDR ;
                            DIG 3 ;
                            CAR ;
                            DIG 4 ;
                            DIG 6 ;
                            SUB ;
                            ABS ;
                            SOME ;
                            SENDER ;
                            UPDATE ;
                            PAIR } }
                     { DIG 3 ; DIG 5 ; DROP 2 ; DIG 2 } ;
                  DROP ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  DIG 3 ;
                  DIG 4 ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  PAIR } ;
             NIL operation ;
             PAIR } } }
