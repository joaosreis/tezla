{ storage
    (pair (pair (pair (map %agents nat address) (map %bids nat int))
                (pair (map %ctrs nat int) (int %factor)))
          (pair (pair (bool %isOpen) (list %listAlpha nat))
                (pair (address %owner) (map %prices nat int)))) ;
  parameter
    (or (or (pair %bid (address %agent) (int %bid))
            (or (unit %cancelAuction) (unit %closeAuction)))
        (or (or (map %openAuction nat int) (address %transferOwnership))
            (or (map %updateCTRs nat int) (int %updateFactor)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 MUL ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 4 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 DUP ;
                 PUSH nat 1 ;
                 SWAP ;
                 SUB ;
                 DUP ;
                 PUSH int 0 ;
                 COMPARE ;
                 LT ;
                 IF { DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PUSH int 1 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                      GET ;
                      IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      ISNAT ;
                      IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                      GET ;
                      IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                      COMPARE ;
                      GE }
                    { PUSH bool False } ;
                 LOOP { DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        PUSH int 1 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                        GET ;
                        IF_NONE { PUSH int 75 ; FAILWITH } {} ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        ISNAT ;
                        IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                        GET ;
                        IF_NONE { PUSH int 75 ; FAILWITH } {} ;
                        COMPARE ;
                        EQ ;
                        IF { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PUSH int 1 ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             PUSH int 1 ;
                             DIG 9 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PUSH nat 1 ;
                             INT ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 71 ; FAILWITH } {} ;
                             ADD ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUG 3 }
                           { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 64 ; FAILWITH } {} ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             DIG 10 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PUSH int 1 ;
                             DIG 9 ;
                             DUP ;
                             DUG 10 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 65 ; FAILWITH } {} ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             DUG 6 ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             DIG 10 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PUSH int 1 ;
                             DIG 9 ;
                             DUP ;
                             DUG 10 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PUSH int 1 ;
                             DIG 7 ;
                             DUP ;
                             DUG 8 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             DIG 6 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             PUSH int 1 ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             DIG 5 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUG 3 } ;
                        PUSH int 1 ;
                        SWAP ;
                        SUB ;
                        DUP ;
                        PUSH int 0 ;
                        COMPARE ;
                        LT ;
                        IF { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PUSH int 1 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             ISNAT ;
                             IF_NONE { PUSH int 60 ; FAILWITH } {} ;
                             GET ;
                             IF_NONE { PUSH int 73 ; FAILWITH } {} ;
                             COMPARE ;
                             GE }
                           { PUSH bool False } } ;
                 DROP 3 }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     IF { DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          PUSH bool False ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CAR ;
                          EMPTY_MAP nat int ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          EMPTY_MAP nat address ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CDR ;
                          EMPTY_MAP nat int ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        {} }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     GT ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SIZE ;
                          DIG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          PUSH (option int) (Some 0) ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DUG 2 ;
                          PUSH nat 0 ;
                          PUSH nat 0 ;
                          PUSH int 0 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          COMPARE ;
                          LT ;
                          IF { DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               SIZE ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               COMPARE ;
                               LT }
                             { PUSH bool False } ;
                          LOOP { DROP 2 ;
                                 PUSH int 0 ;
                                 PUSH int 1 ;
                                 ISNAT ;
                                 IF_NONE { PUSH int 107 ; FAILWITH } {} ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 ADD ;
                                 SWAP ;
                                 PUSH nat 1 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 ADD ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 COMPARE ;
                                 LT ;
                                 LOOP { DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        GET ;
                                        IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PUSH int 1 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        INT ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                                        GET ;
                                        IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                                        SUB ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        GET ;
                                        IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                                        MUL ;
                                        ADD ;
                                        PUSH nat 1 ;
                                        DIG 2 ;
                                        ADD ;
                                        SWAP ;
                                        PUSH nat 1 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        ADD ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        COMPARE ;
                                        LT } ;
                                 DIG 5 ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 5 ;
                                 PUSH nat 1 ;
                                 DIG 3 ;
                                 ADD ;
                                 DUG 2 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 COMPARE ;
                                 LT ;
                                 IF { DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      SIZE ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      COMPARE ;
                                      LT }
                                    { PUSH bool False } } ;
                          DROP 3 ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          NONE int ;
                          DIG 5 ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                     PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          PUSH bool True ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CAR ;
                          EMPTY_MAP nat int ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CAR ;
                          EMPTY_MAP nat int ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          EMPTY_MAP nat address ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                     PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } }
                   { PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CAR ;
                          DIG 3 ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } } } } ;
         NIL operation ;
         PAIR } }
