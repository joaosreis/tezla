{ parameter
    (or (or (or (nat %buy) (nat %sell)) (or (key %setDelegate) (nat %setMinimalPurchase)))
        (pair %updatePrices mutez mutez)) ;
  storage
    (pair (pair (pair (pair (address %admin) (mutez %buyPrice))
                      (pair (key %currentDelegate) (big_map %ledger address nat)))
                (pair (pair (nat %minimalPurchase) (string %name))
                      (pair (address %owner) (mutez %sellPrice))))
          (string %symbol)) ;
  code { DUP ;
         CDR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     MUL ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     COMPARE ;
                     LT ;
                     OR ;
                     IF { PUSH string "MinimalPurchaseRequired" ; FAILWITH }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          MUL ;
                          AMOUNT ;
                          COMPARE ;
                          NEQ ;
                          IF { PUSH string "InsufficientFunds" ; FAILWITH }
                             { DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               SOURCE ;
                               GET ;
                               IF_NONE
                                 { DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SOME ;
                                   SOURCE ;
                                   UPDATE ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   ADD ;
                                   SOME ;
                                   SOURCE ;
                                   UPDATE ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DIP { DROP } } } } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE
                       { PUSH string "NoAccount" ; FAILWITH }
                       { DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "NotEnoughTokens" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              MUL ;
                              SOURCE ;
                              CONTRACT unit ;
                              IF_NONE
                                { PUSH string "InvalidAddress" ; FAILWITH }
                                { DUP ; DIP { DROP } } ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              SUB ;
                              ABS ;
                              SOME ;
                              SOURCE ;
                              UPDATE ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              PUSH unit Unit ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "UnauthorizedAction" ; FAILWITH }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CDR } ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          HASH_KEY ;
                          SOME ;
                          SET_DELEGATE ;
                          CONS ;
                          PAIR } ;
                     DIP { DROP } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "UnauthorizedAction" ; FAILWITH }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          DIP { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                CDR } ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DUP ;
             LAMBDA
               (pair mutez mutez)
               (lambda
                  (pair (pair (pair (pair (address %admin) (mutez %buyPrice))
                                    (pair (key %currentDelegate) (big_map %ledger address nat)))
                              (pair (pair (nat %minimalPurchase) (string %name))
                                    (pair (address %owner) (mutez %sellPrice))))
                        (string %symbol))
                  (pair (pair (pair (pair (address %admin) (mutez %buyPrice))
                                    (pair (key %currentDelegate) (big_map %ledger address nat)))
                              (pair (pair (nat %minimalPurchase) (string %name))
                                    (pair (address %owner) (mutez %sellPrice))))
                        (string %symbol)))
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIP { DUP } ;
                 DUP ;
                 DIP { PAIR } ;
                 SWAP ;
                 PUSH (lambda
                         (pair (pair mutez mutez)
                               (pair (pair (pair (pair (address %admin) (mutez %buyPrice))
                                                 (pair (key %currentDelegate) (big_map %ledger address nat)))
                                           (pair (pair (nat %minimalPurchase) (string %name))
                                                 (pair (address %owner) (mutez %sellPrice))))
                                     (string %symbol)))
                         (pair (pair (pair (pair (address %admin) (mutez %buyPrice))
                                           (pair (key %currentDelegate) (big_map %ledger address nat)))
                                     (pair (pair (nat %minimalPurchase) (string %name))
                                           (pair (address %owner) (mutez %sellPrice))))
                               (string %symbol)))
                      { {} ;
                        { { DUP ; CAR ; SWAP ; CDR } ;
                          DIP { { { DUP ; CDR ; SWAP ; CAR } ; DIP { {} } } } } ;
                        {} ;
                        { { { { { { { { { { { DUP } ; CAR } } ; CDR } } ; CDR } } ;
                                CAR } ;
                              { {} ; SOURCE } } ;
                            { COMPARE ; NEQ } } ;
                          IF { { { PUSH string "UnauthorizedAction" } ; FAILWITH } }
                             { { { { { DIG 1 ; DUP ; DUG 2 } ; { DIG 3 ; DUP ; DUG 4 } } ;
                                   { COMPARE ; LT } } ;
                                 IF { { { PUSH string "InsufficientBuyPrice" } ; FAILWITH } }
                                    { { {} ;
                                        { {} ;
                                          DUP ;
                                          {} ;
                                          { DIG 3 ; DUP ; DUG 4 } ;
                                          {} ;
                                          { DIP { { DUP ; CDR ; SWAP ; CAR } } ;
                                            { DIP { { DUP ; CDR ; SWAP ; CAR } } ;
                                              { DIP { { DUP ; CDR ; SWAP ; CAR } } ;
                                                { DIP { { DUP ; CAR ; SWAP ; CDR } ; DROP } ; { SWAP ; PAIR } } ;
                                                PAIR } ;
                                              PAIR } ;
                                            PAIR } ;
                                          {} } ;
                                        {} ;
                                        { DIG 2 ; DUP ; DUG 3 } ;
                                        {} ;
                                        { DIP { { DUP ; CDR ; SWAP ; CAR } } ;
                                          { DIP { { DUP ; CAR ; SWAP ; CDR } } ;
                                            { DIP { { DUP ; CAR ; SWAP ; CDR } } ;
                                              { DIP { { DUP ; CAR ; SWAP ; CDR } ; DROP } ; { SWAP ; PAIR } } ;
                                              { SWAP ; PAIR } } ;
                                            { SWAP ; PAIR } } ;
                                          PAIR } ;
                                        {} } } } } } ;
                        {} ;
                        DIP { DROP } ;
                        { DIP { DROP 2 } } } ;
                 SWAP ;
                 APPLY ;
                 DIP { DROP 2 } } ;
             SWAP ;
             APPLY ;
             DIP { DROP } ;
             SWAP ;
             EXEC ;
             SWAP ;
             EXEC ;
             NIL operation ;
             PAIR ;
             DIP { DROP } } ;
         DIP { DROP 2 } } }
