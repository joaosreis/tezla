{ storage nat ;
  parameter
    (or (nat %t)
        (pair %verify (map %m address nat) (pair (bytes %request) (address %sender)))) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ; DROP ; NIL operation }
           { DUP ;
             GET 3 ;
             UNPACK address ;
             IF_NONE { PUSH int 10 ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string
                       "WrongCondition: params.sender == sp.unpack(params.request, sp.TRecord(address = sp.TAddress).layout(\"address\")).open_some().address" ;
                  FAILWITH } ;
             DUP ;
             CAR ;
             PUSH address "KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF" ;
             MEM ;
             IF {}
                { PUSH string
                       "WrongCondition: params.m.contains(sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF'))" ;
                  FAILWITH } ;
             GET 3 ;
             UNPACK address ;
             IF_NONE { PUSH int 10 ; FAILWITH } {} ;
             CONTRACT %t nat ;
             IF_NONE { PUSH int 14 ; FAILWITH } {} ;
             NIL operation ;
             SWAP ;
             PUSH mutez 0 ;
             PUSH nat 1 ;
             TRANSFER_TOKENS ;
             CONS } ;
         PAIR } }
