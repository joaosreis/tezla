{ storage
    (pair (address %admin)
          (pair (map %token nat mutez)
                (pair (map %ledger nat address)
                      (pair (set %operator (pair address (pair nat address)))
                            (big_map %token_metadata
                               nat
                               (pair (nat %token_id)
                                     (pair (string %symbol)
                                           (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))))) ;
  parameter
    (or (pair %balance_of
           (list %requests (pair (address %owner) (nat %token_id)))
           (contract (list (pair (pair (address %owner) (nat %token_id)) (nat %balance)))))
        (or (list %update_operators
               (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                   (pair (address %owner) (pair (address %operator) (nat %token_id)))))
            (or (list %transfer
                   (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (or (contract %token_metadata_registry address)
                    (or (list %buy nat) (or (nat %sell) (unit %reset))))))) ;
  code { NIL operation ;
         DIG 1 ;
         UNPAIR ;
         DIP { UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { UNPAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             AMOUNT ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MAP { DUP ;
                   CAR ;
                   DIG 9 ;
                   DUP ;
                   DUG 10 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   GET ;
                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   PAIR ;
                   SWAP ;
                   DROP } ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DIG 7 ; DROP } ;
             DUG 7 ;
             DROP 2 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { DUP ;
                 ITER { DUP ;
                        IF_LEFT
                          { SOURCE ;
                            DIG 6 ;
                            DUP ;
                            DUG 7 ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                            COMPARE ;
                            EQ ;
                            NOT ;
                            IF { PUSH string "CALLER NOT OWNER" ; FAILWITH } {} ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            PUSH bool True ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CDR ;
                            PAIR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            UPDATE ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DROP }
                          { SOURCE ;
                            DIG 6 ;
                            DUP ;
                            DUG 7 ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                            COMPARE ;
                            EQ ;
                            NOT ;
                            IF { PUSH string "CALLER NOT OWNER" ; FAILWITH } {} ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            PUSH bool False ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CDR ;
                            PAIR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            UPDATE ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DROP } ;
                        DROP } ;
                 DROP ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DUP ;
                     ITER { DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DUP ;
                            ITER { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SENDER ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        MEM ;
                                        NOT ;
                                        IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } {} }
                                      {} ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   SOME ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CAR ;
                                   UPDATE ;
                                   DIP { DIG 7 ; DROP } ;
                                   DUG 7 ;
                                   DROP } ;
                            DROP 3 } ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DIG 6 ; DROP } ;
                         DUG 6 ;
                         DROP ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { IF_LEFT
                           { PUSH nat 0 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             ITER { DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    GET ;
                                    IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    GET ;
                                    IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                    DIG 10 ;
                                    DUP ;
                                    DUG 11 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS ;
                                    DIP { DIG 10 ; DROP } ;
                                    DUG 10 ;
                                    DIG 10 ;
                                    DUP ;
                                    DUG 11 ;
                                    SELF ;
                                    ADDRESS ;
                                    CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                                    IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    NIL (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
                                    NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
                                    PUSH nat 1 ;
                                    DIG 8 ;
                                    DUP ;
                                    DUG 9 ;
                                    PAIR ;
                                    SENDER ;
                                    PAIR ;
                                    CONS ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    PAIR ;
                                    CONS ;
                                    TRANSFER_TOKENS ;
                                    CONS ;
                                    DIP { DIG 10 ; DROP } ;
                                    DUG 10 ;
                                    DIG 10 ;
                                    DUP ;
                                    DUG 11 ;
                                    SELF ;
                                    ADDRESS ;
                                    CONTRACT %update_operators
                                      (list (or (pair address (pair address nat)) (pair address (pair address nat)))) ;
                                    IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    NIL (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                            (pair (address %owner) (pair (address %operator) (nat %token_id)))) ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    SELF ;
                                    ADDRESS ;
                                    PAIR ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    PAIR ;
                                    RIGHT (pair address (pair address nat)) ;
                                    CONS ;
                                    TRANSFER_TOKENS ;
                                    CONS ;
                                    DIP { DIG 10 ; DROP } ;
                                    DUG 10 ;
                                    PUSH mutez 1 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    EDIV ;
                                    IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    ADD ;
                                    DIP { DIG 3 ; DROP } ;
                                    DUG 3 ;
                                    DROP 3 } ;
                             DUP ;
                             PUSH mutez 1 ;
                             AMOUNT ;
                             EDIV ;
                             IF_NONE { PUSH string "DivByZero" ; FAILWITH } { DUP ; CAR ; SWAP ; DROP } ;
                             COMPARE ;
                             GE ;
                             NOT ;
                             IF { PUSH string "INSUFFICIENT_TRANSFERRED" ; FAILWITH } {} ;
                             NIL operation ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             ITER { DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CONS ;
                                    DIP { DIG 1 ; DROP } ;
                                    DUG 1 ;
                                    DROP } ;
                             DIP { DIG 7 ; DROP } ;
                             DUG 7 ;
                             DROP 2 ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DIG 1 ;
                             PAIR }
                           { IF_LEFT
                               { DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 SELF ;
                                 ADDRESS ;
                                 CONTRACT %update_operators
                                   (list (or (pair address (pair address nat)) (pair address (pair address nat)))) ;
                                 IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                                 PUSH mutez 0 ;
                                 NIL (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                         (pair (address %owner) (pair (address %operator) (nat %token_id)))) ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 SELF ;
                                 ADDRESS ;
                                 PAIR ;
                                 SENDER ;
                                 PAIR ;
                                 LEFT (pair address (pair address nat)) ;
                                 CONS ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DIP { DIG 6 ; DROP } ;
                                 DUG 6 ;
                                 DROP ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIG 1 ;
                                 PAIR }
                               { DROP ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 NOT ;
                                 IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 ITER { UNPAIR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        PUSH bool True ;
                                        DIG 8 ;
                                        DUP ;
                                        DUG 9 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        PAIR ;
                                        SELF ;
                                        ADDRESS ;
                                        PAIR ;
                                        UPDATE ;
                                        DIP { DIG 3 ; DROP } ;
                                        DUG 3 ;
                                        DROP 2 } ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIG 1 ;
                                 PAIR } } } } } } } }
