{ storage
    (pair (pair (address %admin) (nat %all_auctions))
          (pair (big_map %auctions
                   nat
                   (pair (pair (pair (address %bid_payer) (nat %bid_price))
                               (pair (address %bidder) (pair (timestamp %end_timestamp) (address %ft_address))))
                         (pair (pair (address %nft_address) (nat %nft_id))
                               (pair (bytes %payer_data) (pair (address %seller) (timestamp %start_timestamp))))))
                (set %operators address))) ;
  parameter
    (or (or (pair %bid
               (pair (nat %auction_id) (nat %bid_price))
               (pair (address %bidder) (pair (bytes %data) (address %payer))))
            (pair %create_auction
               (pair (nat %bid_price) (pair (timestamp %end_timestamp) (address %ft_address)))
               (pair (pair (address %nft_address) (nat %nft_id))
                     (pair (address %seller) (timestamp %start_timestamp)))))
        (or (pair %update_operator (address %operator) (bool %valid)) (nat %withdraw))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                 SWAP ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "AUC_INVALID_ADDRESS" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 GET 7 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "AUC_SELLER_CANNOT_BID" ; FAILWITH } ;
                 PUSH nat 10 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 GET 8 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_NOT_START" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 CAR ;
                 GET 5 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "AUC_AUCTION_IS_OVER" ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 CAR ;
                 GET 6 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                 IF_NONE { PUSH int 683 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                 NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                 PUSH nat 0 ;
                 SELF_ADDRESS ;
                 PAIR %to_ %token_id ;
                 DUP 7 ;
                 CAR ;
                 CDR ;
                 PAIR %amount ;
                 CONS ;
                 DUP 6 ;
                 GET 6 ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 GET 7 ;
                 DUP 4 ;
                 GET 3 ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                      CAR ;
                      GET 6 ;
                      CONTRACT %transfer
                        (list (pair (address %from_)
                                    (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                      IF_NONE { PUSH int 683 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      NIL (pair (address %from_)
                                (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                      NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                      PUSH nat 0 ;
                      DUP 8 ;
                      GET 3 ;
                      DUP 8 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR %to_ %token_id ;
                      DUP 8 ;
                      GET 3 ;
                      DUP 8 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR %amount ;
                      CONS ;
                      SELF_ADDRESS ;
                      PAIR %from_ %txs ;
                      CONS ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                      CAR ;
                      GET 3 ;
                      DUP 4 ;
                      GET 3 ;
                      DUP 4 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CAR ;
                      COMPARE ;
                      NEQ ;
                      IF { DUP 3 ;
                           GET 3 ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           GET ;
                           IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CONTRACT %refund (pair (address %address) (pair (nat %amount) (bytes %data))) ;
                           IF_NONE { PUSH int 693 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           DUP 5 ;
                           GET 3 ;
                           DUP 5 ;
                           CAR ;
                           CAR ;
                           GET ;
                           IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                           GET 5 ;
                           DUP 6 ;
                           GET 3 ;
                           DUP 6 ;
                           CAR ;
                           CAR ;
                           GET ;
                           IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                           CAR ;
                           CAR ;
                           CDR ;
                           PAIR %amount %data ;
                           DUP 6 ;
                           GET 3 ;
                           DUP 6 ;
                           CAR ;
                           CAR ;
                           GET ;
                           IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                           CAR ;
                           GET 6 ;
                           PAIR %address ;
                           TRANSFER_TOKENS ;
                           CONS }
                         {} }
                    {} ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 696 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 9 ;
                 GET 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 697 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 CAR ;
                 DUP 9 ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 698 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 CDR ;
                 DUP 9 ;
                 GET 6 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 699 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 9 ;
                 GET 5 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 DUG 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 5 ;
                 GET 3 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 676 ; FAILWITH } {} ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 NOW ;
                 PUSH int 60 ;
                 DUP ;
                 PUSH int 1 ;
                 MUL ;
                 MUL ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                 NOW ;
                 PUSH int 60 ;
                 DUP ;
                 PUSH int 168 ;
                 MUL ;
                 MUL ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "AUC_END_DATE_TOO_LATE" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 PUSH nat 100 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                 IF_NONE { PUSH int 652 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                 NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                 DUP 6 ;
                 GET 3 ;
                 CDR ;
                 SELF_ADDRESS ;
                 PAIR %to_ %token_id ;
                 PUSH nat 1 ;
                 PAIR %amount ;
                 CONS ;
                 DUP 6 ;
                 GET 5 ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 4 ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 GET 5 ;
                 PAIR %seller %start_timestamp ;
                 PUSH bytes 0x ;
                 PAIR %payer_data ;
                 DIG 5 ;
                 DUP ;
                 GET 3 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 GET 3 ;
                 CAR ;
                 PAIR %nft_address %nft_id ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 GET 3 ;
                 PAIR %end_timestamp %ft_address ;
                 DUP 7 ;
                 GET 5 ;
                 PAIR %bidder ;
                 DIG 6 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 GET 5 ;
                 PAIR %bid_payer %bid_price ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 PUSH nat 1 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 IF { SWAP ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH bool True ;
                      DIG 4 ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { SWAP ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH bool False ;
                      DIG 4 ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR } ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 CAR ;
                 GET 5 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_IS_ONGOING" ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                 IF_NONE { PUSH int 712 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                 NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                 DUP 7 ;
                 GET 3 ;
                 DUP 7 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 8 ;
                 GET 3 ;
                 DUP 8 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 PAIR %to_ %token_id ;
                 PUSH nat 1 ;
                 PAIR %amount ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 GET 7 ;
                 DUP 4 ;
                 GET 3 ;
                 DUP 4 ;
                 GET ;
                 IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                      CAR ;
                      GET 6 ;
                      CONTRACT %transfer
                        (list (pair (address %from_)
                                    (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                      IF_NONE { PUSH int 718 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      NIL (pair (address %from_)
                                (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                      NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                      PUSH nat 0 ;
                      DUP 8 ;
                      GET 3 ;
                      DUP 8 ;
                      GET ;
                      IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                      GET 7 ;
                      PAIR %to_ %token_id ;
                      DUP 8 ;
                      GET 3 ;
                      DUP 8 ;
                      GET ;
                      IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR %amount ;
                      CONS ;
                      SELF_ADDRESS ;
                      PAIR %from_ %txs ;
                      CONS ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                      GET 7 ;
                      CONTRACT %withdraw (pair (address %address) (nat %amount)) ;
                      IF_NONE
                        {}
                        { DROP ;
                          DUP 3 ;
                          GET 3 ;
                          DUP 3 ;
                          GET ;
                          IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                          GET 7 ;
                          CONTRACT %withdraw (pair (address %address) (nat %amount)) ;
                          IF_NONE { PUSH int 724 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DUP 5 ;
                          GET 3 ;
                          DUP 5 ;
                          GET ;
                          IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DUP 6 ;
                          GET 3 ;
                          DUP 6 ;
                          GET ;
                          IF_NONE { PUSH int 708 ; FAILWITH } {} ;
                          CAR ;
                          GET 6 ;
                          PAIR %address %amount ;
                          TRANSFER_TOKENS ;
                          CONS } }
                    {} ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 NONE (pair (pair (pair (address %bid_payer) (nat %bid_price))
                                  (pair (address %bidder) (pair (timestamp %end_timestamp) (address %ft_address))))
                            (pair (pair (address %nft_address) (nat %nft_id))
                                  (pair (bytes %payer_data) (pair (address %seller) (timestamp %start_timestamp))))) ;
                 DIG 5 ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
