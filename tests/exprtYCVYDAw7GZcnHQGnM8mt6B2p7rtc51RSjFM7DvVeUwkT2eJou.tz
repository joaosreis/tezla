{ storage
    (pair (pair (pair (pair (bool %alreadyRegistered) (pair (address %assets) (bool %callToken)))
                      (pair (address %chance) (pair (address %community) (int %counter))))
                (pair (pair (address %creator) (pair (int %debug) (set %immunized address)))
                      (pair (int %lapIncome) (pair (string %lastTurnOption) (int %nbLaps)))))
          (pair (pair (pair (int %nbSpaces) (pair (int %nextDices) (address %nextPlayer)))
                      (pair (int %nextPlayerIdx)
                            (pair (address %originator_address) (key %originator_pubKey))))
                (pair (pair (map %playerPositions address int)
                            (pair (map %players int address) (set %playersSet address)))
                      (pair (pair (map %quarantinePlayers address int) (int %quarantineSpaceId))
                            (pair (string %status) (address %token)))))) ;
  parameter (pair (int %random) (signature %signature)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH string "created" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         CAR ;
         COMPARE ;
         EQ ;
         IF { {} }
            { { PUSH string "WrongCondition: self.data.status == 'created'" ; FAILWITH } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         CDR ;
         DIG 5 ;
         CDR ;
         CDR ;
         CAR ;
         CDR ;
         CDR ;
         SENDER ;
         MEM ;
         PAIR ;
         PAIR ;
         PAIR ;
         PAIR ;
         SWAP ;
         PUSH bool False ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CDR ;
         CAR ;
         CDR ;
         CDR ;
         SENDER ;
         MEM ;
         COMPARE ;
         EQ ;
         IF { {} }
            { { PUSH string "WrongCondition: (self.data.playersSet.contains(sp.sender)) == False" ;
                FAILWITH } } ;
         DROP ;
         DUP ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         SENDER ;
         SOME ;
         DIG 7 ;
         CDR ;
         CDR ;
         CAR ;
         CDR ;
         CAR ;
         SIZE ;
         INT ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         PUSH bool True ;
         SENDER ;
         UPDATE ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         NIL operation ;
         PAIR } }
