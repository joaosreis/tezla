{ parameter
    (or (or (address %setNft) (address %setOracle))
        (or (pair %setVars
               (pair (pair (pair (int %gameWindowDuration) (int %gameWindowHourUTC))
                           (pair (int %ruleFailedPenalty) (int %rulePassPoints)))
                     (pair (pair (int %startPoints) (int %transmutationVoteRatioRequired))
                           (pair (int %turnWindowDuration) (int %voteAgainstPoints))))
               (pair (int %voteRatioRequired) (int %winPoints)))
            (map %updateScore address int))) ;
  storage
    (pair (pair (pair (address %gameNft) (address %gameOracle))
                (pair (address %gameOwner) (map %gameScore address int)))
          (pair (pair %gameVars
                   (pair (pair (pair (int %gameWindowDuration) (int %gameWindowHourUTC))
                               (pair (int %ruleFailedPenalty) (int %rulePassPoints)))
                         (pair (pair (int %startPoints) (int %transmutationVoteRatioRequired))
                               (pair (int %turnWindowDuration) (int %voteAgainstPoints))))
                   (pair (int %voteRatioRequired) (int %winPoints)))
                (address %gameWinner))) ;
  code { NIL operation ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 PAIR ;
                 DIP { DROP 4 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 PAIR ;
                 DIP { DROP 4 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 PAIR ;
                 DIP { DROP 4 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PUSH bool False ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CAR ;
                        CAR ;
                        CAR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CDR ;
                        CAR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        PAIR ;
                        PAIR ;
                        PUSH bool False ;
                        DIG 5 ;
                        DUP ;
                        DUG 6 ;
                        COMPARE ;
                        EQ ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CDR ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DIG 7 ;
                        DUP ;
                        DUG 8 ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        GE ;
                        AND ;
                        IF { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %mint (pair (bytes %data) (address %owner)) ;
                             IF_NONE
                               { PUSH string "bad address for get_entrypoint (%mint)" ; FAILWITH }
                               {} ;
                             DUP ;
                             PUSH mutez 0 ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             PUSH string "NOMSU Winner" ;
                             PACK ;
                             PAIR ;
                             TRANSFER_TOKENS ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             PUSH bool True ;
                             SWAP ;
                             PAIR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CONS ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                             PAIR ;
                             PAIR ;
                             DIP { DROP 3 } }
                           { DUP } ;
                        DIG 6 ;
                        DUP ;
                        DUG 7 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                        PAIR ;
                        PAIR ;
                        PAIR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                        SWAP ;
                        PAIR ;
                        PAIR ;
                        PAIR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                        SWAP ;
                        PAIR ;
                        PAIR ;
                        CAR ;
                        DIP { DROP 7 } } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 7 } } ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
