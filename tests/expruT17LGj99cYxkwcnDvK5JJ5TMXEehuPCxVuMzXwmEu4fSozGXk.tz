{ parameter
    (or (or (pair %add
               (pair (int %newmile_amount) (timestamp %newmile_expiration))
               (pair (string %newmile_id) (address %ow)))
            (unit %clear_expired))
        (pair %consume (address %a) (int %quantity))) ;
  storage
    (pair (pair (address %admin)
                (map %mile_assets string (pair (int %amount) (timestamp %expiration))))
          (map %owner_assets address (set string))) ;
  code { LAMBDA
           (pair (pair (pair address (map string (pair int timestamp))) (map address (set string)))
                 string)
           (pair (pair int timestamp) string)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (pair (pair address (map string (pair int timestamp))) (map address (set string)))
                       address)
                 (pair (pair int timestamp) string))
           (pair (pair address (map string (pair int timestamp))) (map address (set string)))
           { DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DIP { DROP 6 } ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             PUSH bool True ;
             SWAP ;
             UPDATE ;
             DIP { DROP } ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             DIP { DROP 6 } } ;
         LAMBDA
           (pair (pair (pair (pair address (map string (pair int timestamp))) (map address (set string)))
                       address)
                 string)
           (pair (pair address (map string (pair int timestamp))) (map address (set string)))
           { DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PUSH bool False ;
             SWAP ;
             UPDATE ;
             DIP { DROP } ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             DUP ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             NONE (pair int timestamp) ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIP { DROP 3 } ;
             DUP ;
             DIP { DROP 6 } } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 PUSH int 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 NOT ;
                 IF { PUSH string "require c1 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 MEM ;
                 DIP { DROP } ;
                 IF { PUSH string "require c2 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 MEM ;
                 DIP { DROP } ;
                 IF { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CDR ;
                      CAR ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CDR ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      PAIR ;
                      DIG 14 ;
                      DUP ;
                      DUG 15 ;
                      SWAP ;
                      EXEC ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIP { DROP } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 5 } }
                    { EMPTY_SET string ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DUP ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      DUP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      MEM ;
                      IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIP { DROP 6 } ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CDR ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      PAIR ;
                      DIG 12 ;
                      DUP ;
                      DUG 13 ;
                      SWAP ;
                      EXEC ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIP { DROP } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 3 } } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 8 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE
                          { DIG 1 ; DUP ; DUG 2 }
                          { DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            ITER { SWAP ;
                                   PAIR ;
                                   DUP ;
                                   CAR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   DUP ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   PAIR ;
                                   DIG 15 ;
                                   DUP ;
                                   DUG 16 ;
                                   SWAP ;
                                   EXEC ;
                                   NOW ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   COMPARE ;
                                   LT ;
                                   IF { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 14 ;
                                        DUP ;
                                        DUG 15 ;
                                        SWAP ;
                                        EXEC }
                                      { DIG 2 ; DUP ; DUG 3 } ;
                                   DIP { DROP 4 } } ;
                            DIP { DROP } } ;
                        DIP { DROP 3 } ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        SWAP ;
                        CDR ;
                        SWAP ;
                        PAIR ;
                        CAR ;
                        DIP { DROP 2 } } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
             PUSH int 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             COMPARE ;
             GE ;
             NOT ;
             IF { PUSH string "require r2 failed" ; FAILWITH } { PUSH unit Unit } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             DUP ;
             CAR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             NIL string ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             ITER { SWAP ;
                    PAIR ;
                    NIL string ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    SOME ;
                    PAIR ;
                    DUP ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    ITER { SWAP ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           IF_NONE
                             { DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CONS ;
                               NONE string ;
                               PAIR }
                             { PUSH int 0 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               PAIR ;
                               PUSH int 0 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               DIG 12 ;
                               DUP ;
                               DUG 13 ;
                               PAIR ;
                               DIG 23 ;
                               DUP ;
                               DUG 24 ;
                               SWAP ;
                               EXEC ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               DIG 13 ;
                               DUP ;
                               DUG 14 ;
                               PAIR ;
                               DIG 24 ;
                               DUP ;
                               DUG 25 ;
                               SWAP ;
                               EXEC ;
                               DUP ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               CDR ;
                               COMPARE ;
                               GT ;
                               IF { DIG 2 ; DUP ; DUG 3 ; DROP ; PUSH int 1 }
                                  { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CDR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CAR ;
                                    CDR ;
                                    COMPARE ;
                                    LT ;
                                    IF { DIG 3 ; DUP ; DUG 4 ; PUSH int 1 ; NEG ; DIP { DROP } }
                                       { DIG 3 ; DUP ; DUG 4 } ;
                                    DIP { DROP } } ;
                               DIP { DROP 4 } ;
                               COMPARE ;
                               LT ;
                               IF { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CONS ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CONS ;
                                    NONE string ;
                                    PAIR }
                                  { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CONS ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    SOME ;
                                    PAIR } ;
                               DIP { DROP } } ;
                           DUP ;
                           DIP { DROP 4 } } ;
                    DUP ;
                    CAR ;
                    IF_NONE
                      { DUP ; CDR }
                      { DIG 1 ; DUP ; DUG 2 ; CDR ; DIG 1 ; DUP ; DUG 2 ; CONS ; DIP { DROP } } ;
                    DIP { DROP 3 } } ;
             DUP ;
             DIP { DROP 5 } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             NIL string ;
             NIL string ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CAR ;
                    PAIR ;
                    DIG 14 ;
                    DUP ;
                    DUG 15 ;
                    SWAP ;
                    EXEC ;
                    NOW ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CDR ;
                    COMPARE ;
                    GT ;
                    IF { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; CDR ; CONS }
                       { DIG 1 ; DUP ; DUG 2 } ;
                    DIP { DROP 3 } } ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CONS ;
                    DIP { DROP } } ;
             DIP { DROP } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             PUSH int 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    PAIR ;
                    DIG 14 ;
                    DUP ;
                    DUG 15 ;
                    SWAP ;
                    EXEC ;
                    DUP ;
                    CAR ;
                    CAR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    ADD ;
                    DIP { DROP 2 } } ;
             DIP { DROP } ;
             COMPARE ;
             GE ;
             NOT ;
             IF { PUSH string "require failed" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    CDR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    PAIR ;
                    PUSH int 0 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    COMPARE ;
                    GT ;
                    IF { DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         PAIR ;
                         DIG 17 ;
                         DUP ;
                         DUG 18 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              GET ;
                              IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              SUB ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              CDR ;
                              PUSH int 0 ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              PAIR ;
                              DIG 19 ;
                              DUP ;
                              DUG 20 ;
                              SWAP ;
                              EXEC ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              PAIR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 15 ;
                                   DUP ;
                                   DUG 16 ;
                                   CAR ;
                                   DIG 9 ;
                                   DUP ;
                                   DUG 10 ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 19 ;
                                   DUP ;
                                   DUG 20 ;
                                   SWAP ;
                                   EXEC ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   PUSH int 0 ;
                                   PAIR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   DIP { DROP } }
                                 { DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 8 ;
                                   DUP ;
                                   DUG 9 ;
                                   PAIR ;
                                   DIG 21 ;
                                   DUP ;
                                   DUG 22 ;
                                   SWAP ;
                                   EXEC ;
                                   DUP ;
                                   CAR ;
                                   CAR ;
                                   DIG 8 ;
                                   DUP ;
                                   DUG 9 ;
                                   SUB ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   DIG 17 ;
                                   DUP ;
                                   DUG 18 ;
                                   CAR ;
                                   DIG 11 ;
                                   DUP ;
                                   DUG 12 ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 21 ;
                                   DUP ;
                                   DUG 22 ;
                                   SWAP ;
                                   EXEC ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SWAP ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   DIP { DROP 3 } } ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIP { DROP 3 } } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIP { DROP 3 } }
                       { DUP } ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                    PAIR ;
                    PAIR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    CAR ;
                    DIP { DROP 6 } } ;
             DUP ;
             CDR ;
             NIL operation ;
             PAIR ;
             DIP { DROP 9 } } ;
         DIP { DROP 5 } } }
