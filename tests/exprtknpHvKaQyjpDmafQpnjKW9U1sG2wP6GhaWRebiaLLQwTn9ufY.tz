{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %burn (string %tmp) (nat %value)))
            (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                (pair %getBalance (address %owner) (contract nat))))
        (or (or (pair %getTotalSupply unit (contract nat)) (pair %mint (string %tmp) (nat %value)))
            (pair %transfer (address %from) (pair (address %to) (nat %value))))) ;
  storage
    (pair (pair (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
                      (big_map %metadata string bytes))
                (pair (address %owner)
                      (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
          (nat %totalSupply)) ;
  code { LAMBDA
           (pair address
                 (pair (pair (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                             (pair address (big_map nat (pair nat (map string bytes)))))
                       nat))
           (pair (map address nat) nat)
           { DUP ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "This contract do not accept token" ; FAILWITH } {} ;
         DIG 2 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     DIG 7 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          PUSH string "You must be the owner of the contract to burn tokens" ;
                          FAILWITH }
                        { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                          DUP ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          COMPARE ;
                          GT ;
                          IF { PUSH string "Owner balance is too low" ; FAILWITH } {} ;
                          DIG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SUB ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          DIG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PUSH int 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SUB ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DIG 2 ;
                     CDR ;
                     PAIR ;
                     NIL operation ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CDR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          PUSH string "You must be the owner of the contract to mint tokens" ;
                          FAILWITH }
                        { DUP ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          DIG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PUSH int 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          ADD ;
                          ABS ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH nat 0 } {} ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      LT ;
                      IF { DROP ; PUSH string "NotPermitted" ; FAILWITH }
                         { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           DIG 3 ;
                           CAR ;
                           DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DIG 3 ;
                           SUB ;
                           ABS ;
                           SOME ;
                           SENDER ;
                           UPDATE ;
                           PAIR } } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "LowBalance" ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 ADD ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 5 ;
                 DIG 7 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 4 ;
                 DIG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }
