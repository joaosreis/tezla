{ parameter
    (or (or (or (or (mutez %withdrawal) (unit %close_account)) (unit %distribute))
            (or (unit %deposit) (pair %transfer address mutez)))
        (or (address %get_slots) (option %slot key_hash))) ;
  storage
    (or (pair (map :vault_account address mutez)
              (map :slots_account address (list :slots address)))
        (option %delegate key_hash)) ;
  code { SENDER ;
         CONTRACT unit ;
         { IF_NONE { { UNIT ; FAILWITH } } {} } ;
         DROP ;
         { { DUP ; CAR @% ; DIP { CDR @%% } } } ;
         SWAP ;
         { IF_LEFT
             { NIL operation }
             { SET_DELEGATE ;
               NIL operation ;
               SWAP ;
               CONS ;
               EMPTY_MAP :slots_account address (list :slots address) ;
               EMPTY_MAP :vault_account address mutez ;
               PAIR ;
               SWAP } } ;
         DUG 2 ;
         SWAP ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 3 ;
             CAR ;
             SWAP ;
             IF_LEFT
               { PUSH mutez 0 ;
                 AMOUNT ;
                 { COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Transaction needs to be 0tz" ; FAILWITH } } ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         SENDER ;
                         GET @account_balance ;
                         { IF_NONE
                             { PUSH string "your address does not have any money associated with it!" ;
                               FAILWITH }
                             { DUP ;
                               DUG 1 ;
                               DIG 3 ;
                               DUP ;
                               DUG 2 ;
                               { COMPARE ;
                                 LE ;
                                 IF { DUP ;
                                      PUSH @one_tez mutez 1000000 ;
                                      SWAP ;
                                      EDIV ;
                                      { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                                      CDR @remainder ;
                                      PUSH mutez 0 ;
                                      COMPARE ;
                                      EQ ;
                                      IF {}
                                         { PUSH string "you can only withdrawal a multiple of 1tz!" ; FAILWITH } ;
                                      DUP ;
                                      SENDER ;
                                      CONTRACT unit ;
                                      { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                                      SWAP ;
                                      PUSH unit Unit ;
                                      TRANSFER_TOKENS ;
                                      DIG 4 ;
                                      SWAP ;
                                      CONS ;
                                      DUG 3 ;
                                      SWAP ;
                                      SUB @new_balance ;
                                      DUP ;
                                      PUSH @zero_tez mutez 0 ;
                                      COMPARE ;
                                      LT @user_has_tez ;
                                      IF { SOME ; SENDER ; UPDATE } { DROP ; NONE mutez ; SENDER ; UPDATE } }
                                    { PUSH string "you don't have that much stored with us!" ; FAILWITH } } } } }
                       { DROP ;
                         DUP ;
                         SENDER ;
                         GET ;
                         { IF_NONE
                             { PUSH string "you do not appear to have any funds with us" ; FAILWITH }
                             { SENDER ;
                               CONTRACT unit ;
                               { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                               SWAP ;
                               PUSH unit Unit ;
                               TRANSFER_TOKENS ;
                               DIG 2 ;
                               SWAP ;
                               CONS ;
                               SWAP ;
                               NONE mutez ;
                               SENDER ;
                               UPDATE } } } }
                   { DROP ;
                     DUP ;
                     SENDER ;
                     GET @divident ;
                     SWAP ;
                     NONE mutez ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     { IF_NONE
                         { PUSH string "you do not appear to have any funds to distribute" ; FAILWITH }
                         { SWAP ;
                           MAP :vault_account
                             { CDR @account_balance ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               BALANCE @total ;
                               SUB @total_trunc ;
                               PUSH nat 1000000 ;
                               SWAP ;
                               EDIV ;
                               { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                               CAR @total_tez ;
                               SWAP ;
                               EDIV ;
                               { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                               CAR @stake ;
                               SWAP ;
                               DUP ;
                               DUG 3 ;
                               MUL @reward ;
                               PUSH nat 1000000 ;
                               SWAP ;
                               EDIV ;
                               { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                               CAR @compensated_reward ;
                               ADD } ;
                           SWAP ;
                           DROP } } } }
               { IF_LEFT
                   { PUSH mutez 1000000 ;
                     AMOUNT ;
                     { COMPARE ;
                       GE ;
                       IF {} { PUSH string "You need to send at least 1 tezos" ; FAILWITH } } ;
                     DROP ;
                     DUP ;
                     SENDER ;
                     GET ;
                     { IF_NONE
                         { AMOUNT ; SOME ; SENDER ; UPDATE }
                         { AMOUNT ; ADD ; SOME ; SENDER ; UPDATE } } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     GET ;
                     { IF_NONE { PUSH string "You do not have an account" ; FAILWITH } {} } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SUB ;
                     SWAP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     DIG 3 ;
                     DUP ;
                     DUG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     { IF_NONE { SOME ; SWAP ; UPDATE } { ADD ; SOME ; SWAP ; UPDATE } } ;
                     SWAP ;
                     SOME ;
                     SENDER ;
                     UPDATE } } ;
             DIG 2 ;
             CDR ;
             SWAP ;
             PAIR }
           { IF_LEFT
               { PUSH mutez 0 ;
                 AMOUNT ;
                 { COMPARE ;
                   EQ ;
                   IF {}
                      { PUSH string "this contract may only be called with transactions of zero tezos" ;
                        FAILWITH } } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 GET ;
                 { IF_NONE
                     { PUSH string "no slots present on given address" ; FAILWITH }
                     { FAILWITH } } }
               { PUSH mutez 8000000000 ;
                 AMOUNT ;
                 { COMPARE ;
                   GE ;
                   IF {} { PUSH string "you need to send at least 8000 tezos" ; FAILWITH } } ;
                 SENDER ;
                 AMOUNT ;
                 DIG 2 ;
                 CREATE_CONTRACT
                   { parameter unit ;
                     storage address ;
                     code { CDR ;
                            SENDER ;
                            { COMPARE ;
                              EQ ;
                              IF { SENDER ;
                                   SENDER ;
                                   CONTRACT unit ;
                                   { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                                   BALANCE @total ;
                                   PUSH unit Unit ;
                                   TRANSFER_TOKENS ;
                                   NIL operation ;
                                   SWAP ;
                                   CONS ;
                                   PAIR }
                                 { PUSH string "only owner can do this!" ; FAILWITH } } } } ;
                 DIP { SWAP ;
                       DUP ;
                       CDR ;
                       SENDER ;
                       GET ;
                       { IF_NONE
                           { DUP ;
                             CDR ;
                             DIG 2 ;
                             NIL :slots address ;
                             SWAP ;
                             CONS ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             SWAP ;
                             CAR ;
                             PAIR }
                           { DIG 2 ;
                             CONS ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             SOME ;
                             SENDER ;
                             UPDATE ;
                             SWAP ;
                             CAR ;
                             PAIR } } } ;
                 DIG 2 ;
                 SWAP ;
                 CONS ;
                 SWAP } } ;
         LEFT (option key_hash) ;
         SWAP ;
         PAIR } }
