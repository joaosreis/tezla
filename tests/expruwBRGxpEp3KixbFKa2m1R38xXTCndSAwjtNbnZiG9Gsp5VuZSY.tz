{ parameter
    (pair (pair (address %checker) (pair (bytes %goal) (nat %goalAmount)))
          (pair (pair (key_hash %key) (int %lengthOfTime))
                (pair (mutez %penalty) (address %retour)))) ;
  storage
    (pair (int %burned)
          (big_map %mapping
             key_hash
             (pair (pair (pair (address %checker) (timestamp %deadLine))
                         (pair (bytes %goal) (nat %goalAmount)))
                   (pair (pair (int %lengthOfTime) (mutez %penalty))
                         (pair (address %retour) (pair (mutez %stake) (timestamp %startTime))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(0)" ; FAILWITH } ;
         DUP ;
         { CAR ; CDR ; CDR } ;
         PUSH nat 0 ;
         COMPARE ;
         LT ;
         IF {} { PUSH string "WrongCondition: params.goalAmount > 0" ; FAILWITH } ;
         DUP ;
         { CDR ; CAR ; CDR } ;
         PUSH int 0 ;
         COMPARE ;
         LT ;
         IF {} { PUSH string "WrongCondition: params.lengthOfTime > 0" ; FAILWITH } ;
         DUP ;
         { CDR ; CDR ; CAR } ;
         AMOUNT ;
         SWAP ;
         COMPARE ;
         LE ;
         IF {}
            { PUSH string "WrongCondition: params.penalty <= sp.amount" ; FAILWITH } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         { CDR ; CAR ; CAR } ;
         MEM ;
         IF { PUSH string "WrongCondition: ~ (self.data.mapping.contains(params.key))" ;
              FAILWITH }
            {} ;
         SWAP ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CDR ; CAR ; CAR } ;
         NOW ;
         AMOUNT ;
         PAIR %stake %startTime ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         { CDR ; CDR ; CDR } ;
         PAIR %retour ;
         DIG 4 ;
         DUP ;
         { CDR ; CDR ; CAR } ;
         SWAP ;
         DUP ;
         DUG 6 ;
         { CDR ; CAR ; CDR } ;
         PAIR %lengthOfTime %penalty ;
         PAIR ;
         DIG 4 ;
         DUP ;
         { CAR ; CDR ; CDR } ;
         SWAP ;
         DUP ;
         DUG 6 ;
         { CAR ; CDR ; CAR } ;
         PAIR %goal %goalAmount ;
         NOW ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         { CDR ; CAR ; CDR } ;
         ADD ;
         DIG 6 ;
         { CAR ; CAR } ;
         PAIR %checker %deadLine ;
         PAIR ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         PAIR ;
         NIL operation ;
         PAIR } }
