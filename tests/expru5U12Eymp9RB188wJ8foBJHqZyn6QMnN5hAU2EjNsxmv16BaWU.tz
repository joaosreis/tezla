{ storage
    (pair (bool %active)
          (pair (address %admin)
                (big_map %swaps
                   bytes
                   (pair (pair (bytes %hashedSecret) (pair (address %initiator) (string %initiator_eth_addr)))
                         (pair (pair (address %participant) (timestamp %refundTimestamp))
                               (pair (int %state) (mutez %value))))))) ;
  parameter
    (or (or (pair %addCounterParty (bytes %_hashedSecret) (address %_participant))
            (pair %initiateWait
               (bytes %_hashedSecret)
               (pair (timestamp %_refundTimestamp) (string %initiator_eth_addr))))
        (or (pair %redeem (bytes %_hashedSecret) (bytes %_secret))
            (or (bytes %refund) (bool %toggleContractState)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { PUSH bool True ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition:self.data.active == True" ; FAILWITH } ;
                 PUSH int 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.swaps[params._hashedSecret].state == 1" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.sender == self.data.swaps[params._hashedSecret].initiator" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 146 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CDR ;
                 PUSH int 2 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 147 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 DIG 7 ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { PUSH bool True ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition: self.data.active == True" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MEM ;
                 IF { PUSH string "WrongCondition: ~ (self.data.swaps.contains(params._hashedSecret))" ;
                      FAILWITH }
                    {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string "WrongCondition: sp.now < params._refundTimestamp" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 AMOUNT ;
                 PUSH int 1 ;
                 PAIR %state %value ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 PAIR %participant %refundTimestamp ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 PAIR %initiator %initiator_eth_addr ;
                 DIG 6 ;
                 CAR ;
                 PAIR %hashedSecret ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR } ;
             NIL operation }
           { IF_LEFT
               { PUSH int 2 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 77 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.swaps[params._hashedSecret].state == 2" ;
                      FAILWITH } ;
                 NOW ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 88 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.swaps[params._hashedSecret].refundTimestamp > sp.now" ;
                      FAILWITH } ;
                 DUP ;
                 CDR ;
                 SHA256 ;
                 SHA256 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 89 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.swaps[params._hashedSecret].hashedSecret == sp.sha256(sp.sha256(params._secret))" ;
                      FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 161 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CDR ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 NONE (pair (pair (bytes %hashedSecret) (pair (address %initiator) (string %initiator_eth_addr)))
                            (pair (pair (address %participant) (timestamp %refundTimestamp))
                                  (pair (int %state) (mutez %value)))) ;
                 DIG 5 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { IF_LEFT
                   { PUSH int 2 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 100 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { PUSH int 1 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          GET ;
                          IF_NONE { PUSH int 101 ; FAILWITH } {} ;
                          CDR ;
                          CDR ;
                          CAR ;
                          COMPARE ;
                          EQ } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (self.data.swaps[params].state == 2) | (self.data.swaps[params].state == 1)" ;
                          FAILWITH } ;
                     NOW ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 102 ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     LE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.swaps[params].refundTimestamp <= sp.now" ;
                          FAILWITH } ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 174 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 174 ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET ;
                     IF_NONE { PUSH int 175 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     NONE (pair (pair (bytes %hashedSecret) (pair (address %initiator) (string %initiator_eth_addr)))
                                (pair (pair (address %participant) (timestamp %refundTimestamp))
                                      (pair (int %state) (mutez %value)))) ;
                     DIG 5 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     NIL operation } } } ;
         PAIR } }
