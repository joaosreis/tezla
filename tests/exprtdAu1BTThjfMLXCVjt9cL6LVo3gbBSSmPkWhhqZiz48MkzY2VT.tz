{ parameter
    (or (or (or (or (pair %place_bet nat string) (unit %refund))
                (or (unit %reset_pool) (key_hash %set_delegate)))
            (or (or (address %update_oracle) (bool %update_paused))
                (or (address %update_ticketer) (unit %validate_pool))))
        (or (pair %validate_pool_confirm string (pair timestamp nat)) (unit %withdraw))) ;
  storage
    (pair (big_map %winners address mutez)
          (pair (map %bets address nat)
                (pair (mutez %current_pot)
                      (pair (timestamp %originated_on)
                            (pair (timestamp %opened_at)
                                  (pair (pair %settings
                                           (string %pool_type)
                                           (pair (mutez %bet_amount)
                                                 (pair (int %open_period) (pair (int %validation_delay) (nat %max_capacity)))))
                                        (pair (option %validator address)
                                              (pair (bool %pending_validation)
                                                    (pair (address %oracle)
                                                          (pair (address %admin)
                                                                (pair (address %ticketer)
                                                                      (pair (mutez %no_winner)
                                                                            (pair (option %last_winner (pair timestamp address))
                                                                                  (pair (bool %paused) (pair (string %pool_style) (nat %game_counter)))))))))))))))) ;
  code { LAMBDA
           (pair (pair (big_map address mutez)
                       (pair (map address nat)
                             (pair mutez
                                   (pair timestamp
                                         (pair timestamp
                                               (pair (pair string (pair mutez (pair int (pair int nat))))
                                                     (pair (option address)
                                                           (pair bool
                                                                 (pair address
                                                                       (pair address
                                                                             (pair address
                                                                                   (pair mutez (pair (option (pair timestamp address)) (pair bool (pair string nat)))))))))))))))
                 address)
           operation
           { UNPAIR ;
             SWAP ;
             CONTRACT %validate_pool_confirm (pair string (pair timestamp nat)) ;
             IF_NONE { PUSH string "NO_CONTRACT" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 17 ;
             CONTRACT %get (pair string (contract (pair string (pair timestamp nat)))) ;
             IF_NONE { PUSH string "NO_ORACLE" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 2 ;
             DIG 3 ;
             GET 11 ;
             CAR ;
             PAIR ;
             TRANSFER_TOKENS } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { UNPAIR ;
                         DUP 3 ;
                         GET 27 ;
                         IF { DROP 3 ; PUSH string "POOL_IS_PAUSED" ; FAILWITH }
                            { DUP 3 ;
                              GET 11 ;
                              GET 3 ;
                              AMOUNT ;
                              COMPARE ;
                              NEQ ;
                              PUSH nat 0 ;
                              DUP 5 ;
                              GET 3 ;
                              SIZE ;
                              COMPARE ;
                              GT ;
                              AND ;
                              IF { DROP 3 ; PUSH string "WRONG_BET_AMOUNT" ; FAILWITH }
                                 { DUP 3 ;
                                   GET 11 ;
                                   GET 3 ;
                                   AMOUNT ;
                                   COMPARE ;
                                   LT ;
                                   PUSH nat 0 ;
                                   DUP 5 ;
                                   GET 3 ;
                                   SIZE ;
                                   COMPARE ;
                                   EQ ;
                                   AND ;
                                   IF { DROP 3 ; PUSH string "MINIMUM_BET_AMOUNT" ; FAILWITH }
                                      { PUSH nat 0 ;
                                        DUP 4 ;
                                        GET 3 ;
                                        SIZE ;
                                        COMPARE ;
                                        GT ;
                                        NOW ;
                                        DUP 5 ;
                                        GET 11 ;
                                        GET 5 ;
                                        DUP 6 ;
                                        GET 9 ;
                                        ADD ;
                                        COMPARE ;
                                        LT ;
                                        AND ;
                                        IF { DROP 3 ; PUSH string "NOT_OPEN" ; FAILWITH }
                                           { DUP 3 ;
                                             GET 11 ;
                                             GET 8 ;
                                             DUP 4 ;
                                             GET 3 ;
                                             SIZE ;
                                             COMPARE ;
                                             GE ;
                                             IF { DROP 3 ; PUSH string "MAXIMUM_CAPACITY" ; FAILWITH }
                                                { DUP 3 ;
                                                  GET 21 ;
                                                  CONTRACT %redeem_tickets (pair address (pair string nat)) ;
                                                  IF_NONE { PUSH string "UNKNOWN_TICKETER" ; FAILWITH } {} ;
                                                  PUSH mutez 0 ;
                                                  PUSH nat 1 ;
                                                  DIG 4 ;
                                                  PAIR ;
                                                  SENDER ;
                                                  PAIR ;
                                                  TRANSFER_TOKENS ;
                                                  DIG 2 ;
                                                  DUP ;
                                                  DUP ;
                                                  DUG 4 ;
                                                  GET 3 ;
                                                  DIG 3 ;
                                                  SOME ;
                                                  SENDER ;
                                                  UPDATE ;
                                                  UPDATE 3 ;
                                                  AMOUNT ;
                                                  DUP 4 ;
                                                  GET 5 ;
                                                  ADD ;
                                                  UPDATE 5 ;
                                                  PUSH nat 0 ;
                                                  DUP 4 ;
                                                  GET 3 ;
                                                  SIZE ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { NOW } { DUP 3 ; GET 9 } ;
                                                  UPDATE 9 ;
                                                  PUSH nat 0 ;
                                                  DUP 4 ;
                                                  GET 3 ;
                                                  SIZE ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { PUSH nat 1 ; DUP 4 ; GET 30 ; ADD } { DUP 3 ; GET 30 } ;
                                                  UPDATE 30 ;
                                                  DUP 3 ;
                                                  GET 11 ;
                                                  PUSH nat 0 ;
                                                  DUP 5 ;
                                                  GET 3 ;
                                                  SIZE ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { DIG 3 ; DROP ; AMOUNT } { DIG 3 ; GET 11 ; GET 3 } ;
                                                  UPDATE 3 ;
                                                  UPDATE 11 ;
                                                  NIL operation ;
                                                  DIG 2 ;
                                                  CONS ;
                                                  PAIR } } } } } }
                       { DROP ;
                         DUP ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH }
                            { NIL operation ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              ITER { CAR ;
                                     CONTRACT unit ;
                                     IF_NONE { PUSH string "UNKNOWN_BETTOR_ADDRESS" ; FAILWITH } {} ;
                                     DUP 3 ;
                                     GET 11 ;
                                     GET 3 ;
                                     UNIT ;
                                     TRANSFER_TOKENS ;
                                     CONS } ;
                              SWAP ;
                              EMPTY_MAP address nat ;
                              UPDATE 3 ;
                              SWAP ;
                              PAIR } } }
                   { IF_LEFT
                       { DROP ;
                         DUP ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "UNAUTHORIZED_ACTION" ; FAILWITH }
                            { NOW ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 11 ;
                              GET 7 ;
                              DUP 3 ;
                              GET 11 ;
                              GET 5 ;
                              DUP 4 ;
                              GET 9 ;
                              ADD ;
                              ADD ;
                              COMPARE ;
                              GT ;
                              IF { DROP 2 ; PUSH string "TOO_EARLY_FOR_RESET" ; FAILWITH }
                                 { SELF_ADDRESS ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   PAIR ;
                                   DIG 2 ;
                                   SWAP ;
                                   EXEC ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } } }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "NOT_AN_ADMIN" ; FAILWITH }
                            { SWAP ; NIL operation ; DIG 2 ; SOME ; SET_DELEGATE ; CONS ; PAIR } } } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UPDATE 17 } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UPDATE 27 } ;
                         NIL operation ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 19 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UPDATE 21 } ;
                         NIL operation ;
                         PAIR }
                       { DROP ;
                         DUP ;
                         GET 15 ;
                         IF { DROP 2 ; PUSH string "ACTIVE_PENDING_VALIDATION" ; FAILWITH }
                            { SELF_ADDRESS ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              PAIR ;
                              DIG 2 ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              PUSH bool True ;
                              UPDATE 15 ;
                              SENDER ;
                              SOME ;
                              UPDATE 13 ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR } } } } }
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 15 ;
                 NOT ;
                 IF { DROP 2 ; PUSH string "NO_PENDING_VALIDATION" ; FAILWITH }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 17 ;
                      SENDER ;
                      COMPARE ;
                      NEQ ;
                      IF { DROP 2 ; PUSH string "UNAUTHORIZED_SENDER" ; FAILWITH }
                         { NOW ;
                           DUP 3 ;
                           GET 11 ;
                           GET 7 ;
                           DUP 4 ;
                           GET 11 ;
                           GET 5 ;
                           DUP 5 ;
                           GET 9 ;
                           ADD ;
                           ADD ;
                           COMPARE ;
                           GT ;
                           IF { DROP 2 ; PUSH string "UNAVAILABLE_FOR_VALIDATION" ; FAILWITH }
                              { CDR ;
                                CDR ;
                                PUSH nat 100 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                MUL ;
                                DUP 3 ;
                                GET 19 ;
                                PAIR ;
                                DUP 3 ;
                                GET 3 ;
                                ITER { SWAP ;
                                       DUP 3 ;
                                       DUP 3 ;
                                       CDR ;
                                       COMPARE ;
                                       EQ ;
                                       IF { DROP ; PUSH nat 0 ; SWAP ; CAR ; PAIR }
                                          { DUP 3 ;
                                            DUP 3 ;
                                            CDR ;
                                            COMPARE ;
                                            GT ;
                                            IF { DUP 3 ;
                                                 DUP 3 ;
                                                 CDR ;
                                                 SUB ;
                                                 ABS ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 LT ;
                                                 IF { SWAP ; DROP ; SWAP ; CAR ; PAIR } { DROP ; SWAP ; DROP } }
                                               { SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 DUP 4 ;
                                                 SUB ;
                                                 ABS ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 LT ;
                                                 IF { SWAP ; DROP ; SWAP ; CAR ; PAIR } { DROP ; SWAP ; DROP } } } } ;
                                SWAP ;
                                DROP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 19 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                COMPARE ;
                                EQ ;
                                IF { DROP ;
                                     DUP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 5 ;
                                     DIG 2 ;
                                     GET 23 ;
                                     ADD ;
                                     UPDATE 23 ;
                                     EMPTY_MAP address nat ;
                                     UPDATE 3 ;
                                     PUSH mutez 0 ;
                                     UPDATE 5 ;
                                     PUSH bool False ;
                                     UPDATE 15 ;
                                     NOW ;
                                     UPDATE 9 ;
                                     NONE address ;
                                     UPDATE 13 ;
                                     NONE (pair timestamp address) ;
                                     UPDATE 25 ;
                                     NIL operation ;
                                     PAIR }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     GET ;
                                     IF_NONE
                                       { SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         DUP 3 ;
                                         GET 5 ;
                                         DUP 3 ;
                                         CAR ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE }
                                       { DUP 3 ; CAR ; DUP 4 ; GET 5 ; DIG 2 ; ADD ; SOME ; DUP 3 ; CAR ; UPDATE } ;
                                     DUP 3 ;
                                     GET 13 ;
                                     IF_NONE
                                       { NIL operation }
                                       { DUP 4 ;
                                         GET 21 ;
                                         CONTRACT %create_ticket (pair address string) ;
                                         IF_NONE { PUSH string "UNKNOWN_TICKETER" ; FAILWITH } {} ;
                                         NIL operation ;
                                         SWAP ;
                                         PUSH mutez 0 ;
                                         PUSH string "standard" ;
                                         DIG 4 ;
                                         PAIR ;
                                         TRANSFER_TOKENS ;
                                         CONS } ;
                                     DUP 4 ;
                                     DIG 2 ;
                                     UPDATE 1 ;
                                     EMPTY_MAP address nat ;
                                     UPDATE 3 ;
                                     PUSH mutez 0 ;
                                     UPDATE 5 ;
                                     PUSH bool False ;
                                     UPDATE 15 ;
                                     NOW ;
                                     UPDATE 9 ;
                                     NONE address ;
                                     UPDATE 13 ;
                                     DIG 2 ;
                                     CAR ;
                                     NOW ;
                                     PAIR ;
                                     SOME ;
                                     UPDATE 25 ;
                                     DIG 2 ;
                                     GET 11 ;
                                     PUSH mutez 1000000 ;
                                     UPDATE 3 ;
                                     UPDATE 11 ;
                                     SWAP ;
                                     PAIR } } } } }
               { DROP ;
                 DUP ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { PUSH string "NO_PLAYER" ; FAILWITH }
                   { PUSH mutez 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ; PUSH string "NO_GAIN" ; FAILWITH } {} } ;
                 SENDER ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "SENDER_NOT_FOUND" ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 NONE mutez ;
                 SENDER ;
                 UPDATE ;
                 UPDATE 1 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
