{ parameter
    (or (unit %abortCreated)
        (or (unit %abortFunded) (or (unit %abort) (or (unit %fund) (unit %complete))))) ;
  storage
    (pair (address %seller)
          (pair (address %buyer)
                (pair (address %taxcollector) (pair (mutez %price) (int %_state))))) ;
  code { NIL operation ;
         DIG 1 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         DIP { { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP ;
               { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP ;
               { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP ;
               { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP } ;
         IF_LEFT
           { DROP ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
             PUSH int 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { PUSH int 1 ; SWAP ; DROP } { PUSH string "InvalidState" ; FAILWITH } ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { DROP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                 PUSH int 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH int 1 ; SWAP ; DROP } { PUSH string "InvalidState" ; FAILWITH } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DROP ;
                     PUSH timestamp 1605024984 ;
                     NOW ;
                     COMPARE ;
                     GT ;
                     IF { PUSH int 1 ; SWAP ; DROP } {} ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DROP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                         PUSH int 0 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              UNIT ;
                              LEFT unit ;
                              PUSH nat 10 ;
                              PUSH int 11 ;
                              PAIR ;
                              UNIT ;
                              LEFT unit ;
                              PUSH nat 5 ;
                              PUSH int 1 ;
                              PAIR ;
                              PUSH nat 1 ;
                              PUSH int 1 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              DIP { { { DUP ; CAR ; DIP { CDR } } } ; SWAP ; DUP } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              SWAP ;
                              DUP ;
                              DIG 3 ;
                              MUL ;
                              DUG 4 ;
                              DIG 3 ;
                              MUL ;
                              DIP { MUL } ;
                              DIG 3 ;
                              IF_LEFT { DROP ; ADD } { DROP ; SWAP ; SUB } ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              DIP { { { DUP ; CAR ; DIP { CDR } } } ; SWAP ; DUP } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              SWAP ;
                              DUP ;
                              DIG 3 ;
                              MUL ;
                              DUG 4 ;
                              DIG 3 ;
                              MUL ;
                              DIP { MUL } ;
                              DIG 3 ;
                              IF_LEFT { DROP ; ADD } { DROP ; SWAP ; SUB } ;
                              PAIR ;
                              PAIR ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              ABS ;
                              DIG 2 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DivByZero" ; FAILWITH } {} ;
                              CAR ;
                              AMOUNT ;
                              COMPARE ;
                              GE ;
                              IF { PUSH int 2 ; SWAP ; DROP } {} }
                            { PUSH string "InvalidState" ; FAILWITH } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { DROP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                         PUSH int 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CONTRACT unit ;
                              IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIP { DIG 5 ; DROP } ;
                              DUG 5 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CONTRACT unit ;
                              IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              PUSH nat 5 ;
                              PUSH int 1 ;
                              PAIR ;
                              PAIR ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              ABS ;
                              DIG 2 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DivByZero" ; FAILWITH } {} ;
                              CAR ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIP { DIG 5 ; DROP } ;
                              DUG 5 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CONTRACT unit ;
                              IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              PUSH nat 10 ;
                              PUSH int 11 ;
                              PAIR ;
                              PAIR ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              { { DUP ; CAR ; DIP { CDR } } } ;
                              ABS ;
                              DIG 2 ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DivByZero" ; FAILWITH } {} ;
                              CAR ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIP { DIG 5 ; DROP } ;
                              DUG 5 ;
                              PUSH int 4 ;
                              SWAP ;
                              DROP }
                            { PUSH string "InvalidState" ; FAILWITH } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR } } } } } }
