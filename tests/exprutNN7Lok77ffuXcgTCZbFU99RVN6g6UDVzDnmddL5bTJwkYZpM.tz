{ storage
    (pair (pair (pair (address %hdao) (address %manager))
                (pair (big_map %metadata string bytes) (address %objkt)))
          (pair (pair (nat %objkt_id)
                      (big_map %royalties nat (pair (address %issuer) (nat %royalties))))
                (pair (nat %swap_id)
                      (big_map %swaps
                         nat
                         (pair (pair (address %issuer) (nat %objkt_id))
                               (pair (nat %objkts_amount) (mutez %xtz_per_objkt))))))) ;
  parameter
    (or (pair %collect (nat %objkts_amount) (nat %swap_id))
        (or (pair %mint_OBJKT
               (pair (address %address) (nat %amount))
               (pair (map %metadata string bytes) (nat %royalties)))
            (pair %swap (nat %objkt_id) (pair (nat %objkts_amount) (mutez %xtz_per_objkt))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             CAR ;
             PUSH nat 0 ;
             COMPARE ;
             LT ;
             IF {} { PUSH string "WrongCondition: params.objkts_amount > 0" ; FAILWITH } ;
             PUSH mutez 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 39 ; FAILWITH } {} ;
             CDR ;
             CDR ;
             COMPARE ;
             NEQ ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  AMOUNT ;
                  EDIV ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  COMPARE ;
                  EQ ;
                  IF { PUSH mutez 1 ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       GET ;
                       IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                       CDR ;
                       CDR ;
                       EDIV ;
                       IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       GET ;
                       IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                       CDR ;
                       CDR ;
                       AMOUNT ;
                       EDIV ;
                       IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                       CAR ;
                       MUL ;
                       MUL ;
                       AMOUNT ;
                       COMPARE ;
                       EQ }
                     { PUSH bool False } ;
                  IF { PUSH mutez 0 ; AMOUNT ; COMPARE ; GT } { PUSH bool False } ;
                  IF {}
                     { PUSH string
                            "WrongCondition: ((params.objkts_amount == sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some())) & (sp.amount == sp.mutez(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some())))) & (sp.amount > sp.tez(0))" ;
                       FAILWITH } ;
                  NIL operation ;
                  DIG 2 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                  CAR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                  PUSH mutez 1 ;
                  PUSH nat 25 ;
                  DIG 5 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 7 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  EDIV ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CAR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  AMOUNT ;
                  EDIV ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } { CAR } ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CDR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 48 ; FAILWITH } { CAR } ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                  PUSH mutez 1 ;
                  PUSH nat 25 ;
                  DIG 5 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 7 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  EDIV ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CAR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  AMOUNT ;
                  EDIV ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } { CAR } ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                  CDR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 48 ; FAILWITH } { CAR } ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 8 ;
                  DUP ;
                  DUG 9 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  EDIV ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CAR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 10 ;
                  DUP ;
                  DUG 11 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  AMOUNT ;
                  EDIV ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } { CAR } ;
                  SUB ;
                  ABS ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 57 ; FAILWITH } {} ;
                  CAR ;
                  CAR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH int 57 ; FAILWITH } {} ;
                  PUSH mutez 1 ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  EDIV ;
                  IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                  CAR ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CDR ;
                  CDR ;
                  AMOUNT ;
                  EDIV ;
                  IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } {} ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH int 47 ; FAILWITH } { CAR } ;
                  MUL ;
                  AMOUNT ;
                  SUB ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS }
                { NIL operation } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH int 97 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair (address %from_)
                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 59 ; FAILWITH } {} ;
             CAR ;
             CDR ;
             PAIR %token_id %amount ;
             SENDER ;
             PAIR %to_ ;
             CONS ;
             SELF ;
             ADDRESS ;
             PAIR %from_ %txs ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 61 ; FAILWITH } {} ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             CDR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CAR ;
             DIG 10 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 61 ; FAILWITH } {} ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             PAIR ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUG 2 ;
             PUSH nat 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 63 ; FAILWITH } {} ;
             CDR ;
             CAR ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  NONE (pair (pair (address %issuer) (nat %objkt_id))
                             (pair (nat %objkts_amount) (mutez %xtz_per_objkt))) ;
                  DIG 6 ;
                  CDR ;
                  UPDATE ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP }
                { SWAP ; DROP } }
           { IF_LEFT
               { DUP ;
                 CAR ;
                 CDR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF { DUP ;
                      CDR ;
                      CDR ;
                      PUSH nat 0 ;
                      SWAP ;
                      COMPARE ;
                      GE ;
                      IF { DUP ; CDR ; CDR ; PUSH nat 250 ; SWAP ; COMPARE ; LE }
                         { PUSH bool False } }
                    { PUSH bool False } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (params.amount > 0) & ((params.royalties >= 0) & (params.royalties <= 250))" ;
                      FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount))
                         (pair (nat %token_id) (map %token_info string bytes))) ;
                 IF_NONE { PUSH int 71 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR %token_id %token_info ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR %address %amount ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 5 ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 PAIR %issuer %royalties ;
                 SOME ;
                 DIG 6 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount))
                         (pair (nat %token_id) (map %token_info string bytes))) ;
                 IF_NONE { PUSH int 102 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 EMPTY_MAP string bytes ;
                 PUSH string "ipfs://QmXZHFiZZ5VgGyLcKQLMkP21Ns8U9NG1mopyEwsHDfcWX5" ;
                 PACK ;
                 SOME ;
                 PUSH string "" ;
                 UPDATE ;
                 PUSH nat 1 ;
                 PAIR %token_id %token_info ;
                 PUSH nat 10 ;
                 SENDER ;
                 PAIR %address %amount ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DUP ;
                 CDR ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: params.objkts_amount > 0" ; FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 IF_NONE { PUSH int 97 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
                 NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
                 DIG 5 ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 PAIR %token_id %amount ;
                 SELF ;
                 ADDRESS ;
                 PAIR %to_ ;
                 CONS ;
                 SENDER ;
                 PAIR %from_ %txs ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CAR ;
                 PAIR %objkts_amount %xtz_per_objkt ;
                 DIG 6 ;
                 CAR ;
                 SENDER ;
                 PAIR %issuer %objkt_id ;
                 PAIR ;
                 SOME ;
                 DIG 6 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
