{ parameter
    (or (or (pair %anchor (list %l (pair address int)) (string %sid))
            (pair %create_sig (pair (int %d) (string %i)) (list %s address)))
        (pair %sign (string %spid) (int %v))) ;
  storage
    (pair (pair (address %admin)
                (map %sig_assets
                   bytes
                   (pair (pair (address %signatory) (string %spec_id)) (int %value))))
          (map %sig_spec_assets string (pair (int %dev) (list %signatories address)))) ;
  code { LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int))
           bool
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             MUL ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             MUL ;
             PUSH int 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             MUL ;
             COMPARE ;
             GT ;
             PUSH bool False ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GE ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LE ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GT ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LT ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LE ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GE ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          LT ;
                          DIP { DROP } }
                        { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          COMPARE ;
                          GT ;
                          DIP { DROP } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } } ;
             DIP { DROP 7 } } ;
         LAMBDA
           (pair (pair (or (or unit unit) (or unit unit)) (pair int int)) (pair int int))
           (pair int int)
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     SUB ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     MUL ;
                     PAIR ;
                     DIP { DROP } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     MUL ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     MUL ;
                     ADD ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DUP ;
             DIP { DROP 4 } } ;
         LAMBDA
           (pair (pair (pair address (map bytes (pair (pair address string) int)))
                       (map string (pair int (list address))))
                 string)
           (pair (pair int string) (list address))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (pair address (map bytes (pair (pair address string) int)))
                       (map string (pair int (list address))))
                 bytes)
           (pair (pair bytes address) (pair string int))
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA (list bytes) int { DUP ; SIZE ; INT ; DIP { DROP } } ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { SELF ;
                 ADDRESS ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 2 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MEM ;
                 IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 6 } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 6 } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             SWAP ;
             EXEC ;
             SENDER ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             PUSH bool False ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    CDR ;
                    COMPARE ;
                    EQ ;
                    OR ;
                    DIP { DROP } } ;
             NOT ;
             DIP { DROP } ;
             IF { PUSH string "require r0 failed" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SENDER ;
             SENDER ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             PACK ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PACK ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CONCAT ;
             SHA256 ;
             DIP { DROP 2 } ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             CAR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DIP { DROP 6 } ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             NIL bytes ;
             NIL bytes ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CAR ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    PAIR ;
                    DIG 16 ;
                    DUP ;
                    DUG 17 ;
                    SWAP ;
                    EXEC ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    CDR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; CAR ; CAR ; CONS }
                       { DIG 1 ; DUP ; DUG 2 } ;
                    DIP { DROP 3 } } ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CONS ;
                    DIP { DROP } } ;
             DIP { DROP 2 } ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 13 ;
             DUP ;
             DUG 14 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SIZE ;
             INT ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 14 ;
             DUP ;
             DUG 15 ;
             SWAP ;
             EXEC ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CAR ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  CAR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  DUP ;
                  DIG 17 ;
                  DUP ;
                  DUG 18 ;
                  SWAP ;
                  EXEC ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  PAIR ;
                  PUSH int 0 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  ITER { SWAP ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         DIG 21 ;
                         DUP ;
                         DUG 22 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         ADD ;
                         DIP { DROP 2 } } ;
                  DIP { DROP } ;
                  PAIR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  PAIR ;
                  DIG 20 ;
                  DUP ;
                  DUG 21 ;
                  SWAP ;
                  EXEC ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  PUSH int 100 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PUSH int 1 ;
                  PUSH int 1 ;
                  PAIR ;
                  UNIT ;
                  RIGHT unit ;
                  LEFT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 23 ;
                  DUP ;
                  DUG 24 ;
                  SWAP ;
                  EXEC ;
                  UNIT ;
                  LEFT unit ;
                  RIGHT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 22 ;
                  DUP ;
                  DUG 23 ;
                  SWAP ;
                  EXEC ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  PAIR ;
                  DIG 22 ;
                  DUP ;
                  DUG 23 ;
                  SWAP ;
                  EXEC ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  PUSH int 100 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PUSH int 1 ;
                  PUSH int 1 ;
                  PAIR ;
                  UNIT ;
                  RIGHT unit ;
                  RIGHT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 25 ;
                  DUP ;
                  DUG 26 ;
                  SWAP ;
                  EXEC ;
                  UNIT ;
                  LEFT unit ;
                  RIGHT (or unit unit) ;
                  PAIR ;
                  PAIR ;
                  DIG 24 ;
                  DUP ;
                  DUG 25 ;
                  SWAP ;
                  EXEC ;
                  PUSH bool True ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  ITER { SWAP ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         PAIR ;
                         DIG 25 ;
                         DUP ;
                         DUG 26 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         PAIR ;
                         DIG 26 ;
                         DUP ;
                         DUG 27 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         PUSH int 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 30 ;
                         DUP ;
                         DUG 31 ;
                         SWAP ;
                         EXEC ;
                         PUSH int 1 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         UNIT ;
                         LEFT unit ;
                         RIGHT (or unit unit) ;
                         PAIR ;
                         PAIR ;
                         DIG 31 ;
                         DUP ;
                         DUG 32 ;
                         SWAP ;
                         EXEC ;
                         AND ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         AND ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         CAR ;
                         DIP { DROP 5 } } ;
                  DUP ;
                  DIP { DROP 10 } ;
                  IF { SELF ;
                       ADDRESS ;
                       CONTRACT (pair (list %l (pair address int)) (string %sid)) ;
                       IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                       DIG 9 ;
                       DUP ;
                       DUG 10 ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       PAIR ;
                       DUP ;
                       CAR ;
                       NIL (pair address int) ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CDR ;
                       ITER { SWAP ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              PAIR ;
                              DIG 21 ;
                              DUP ;
                              DUG 22 ;
                              SWAP ;
                              EXEC ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              PAIR ;
                              DIG 22 ;
                              DUP ;
                              DUG 23 ;
                              SWAP ;
                              EXEC ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CDR ;
                              PAIR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CONS ;
                              DIP { DROP ; CDR } ;
                              PAIR ;
                              CAR ;
                              DIP { DROP 4 } } ;
                       DUP ;
                       DIP { DROP 4 } ;
                       PAIR ;
                       DIG 8 ;
                       DUP ;
                       DUG 9 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       DIG 9 ;
                       DUP ;
                       DUG 10 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       DIP { DROP 4 } }
                     { DIG 6 ; DUP ; DUG 7 } ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  CAR ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  DUP ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  NONE (pair int (list address)) ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DUP ;
                  DIP { DROP 3 } ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DUP ;
                  CAR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  ITER { SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         NONE (pair (pair address string) int) ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         CAR ;
                         DIP { DROP 3 } } ;
                  DUP ;
                  DIP { DROP 2 } ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  SWAP ;
                  CDR ;
                  SWAP ;
                  PAIR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIP { DROP 3 } }
                { DUP } ;
             DUP ;
             DIP { DROP 12 } } ;
         DIP { DROP 7 } } }
