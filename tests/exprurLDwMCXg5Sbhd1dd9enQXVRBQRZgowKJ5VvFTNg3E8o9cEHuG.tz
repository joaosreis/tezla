{ storage
    (pair (address %administrator)
          (pair (big_map %ledger nat address)
                (pair (set %operator (pair address (pair nat address)))
                      (big_map %token_metadata
                         nat
                         (pair (nat %token_id)
                               (pair (string %symbol)
                                     (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))) ;
  parameter
    (or (pair %balance_of
           (list %requests (pair (address %owner) (nat %token_id)))
           (contract (list (pair (pair (address %owner) (nat %token_id)) (nat %balance)))))
        (or (list %update_operators
               (or (pair (address %owner) (pair (address %operator) (nat %token_id)))
                   (pair (address %owner) (pair (address %operator) (nat %token_id)))))
            (or (list %transfer
                   (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (or (contract %token_metadata_registry address)
                    (pair %mint (nat %mtoken_id) (string %mname)))))) ;
  code { NIL operation ;
         DIG 1 ;
         UNPAIR ;
         DIP { UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { UNPAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             AMOUNT ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MAP { DUP ;
                   CAR ;
                   DIG 9 ;
                   DUP ;
                   DUG 10 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   GET ;
                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   PAIR ;
                   SWAP ;
                   DROP } ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DIG 6 ; DROP } ;
             DUG 6 ;
             DROP 2 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { DUP ;
                 ITER { DUP ;
                        IF_LEFT
                          { SOURCE ;
                            DIG 6 ;
                            DUP ;
                            DUG 7 ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                            COMPARE ;
                            EQ ;
                            NOT ;
                            IF { PUSH string "CALLER NOT OWNER" ; FAILWITH } {} ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            PAIR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            MEM ;
                            IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                               { DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 PUSH bool True ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 CDR ;
                                 PAIR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 CAR ;
                                 PAIR ;
                                 UPDATE ;
                                 DIP { DIG 4 ; DROP } ;
                                 DUG 4 } ;
                            DROP }
                          { SOURCE ;
                            DIG 6 ;
                            DUP ;
                            DUG 7 ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                            COMPARE ;
                            EQ ;
                            NOT ;
                            IF { PUSH string "CALLER NOT OWNER" ; FAILWITH } {} ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            PUSH bool False ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CDR ;
                            PAIR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            UPDATE ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DROP } ;
                        DROP } ;
                 DROP ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DUP ;
                     ITER { DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DUP ;
                            ITER { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   SENDER ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        MEM ;
                                        NOT ;
                                        IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } {} }
                                      {} ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   SOME ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CAR ;
                                   UPDATE ;
                                   DIP { DIG 7 ; DROP } ;
                                   DUG 7 ;
                                   DROP } ;
                            DROP 3 } ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DIG 5 ; DROP } ;
                         DUG 5 ;
                         DROP ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { UNPAIR ;
                         SWAP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MEM ;
                         IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              SENDER ;
                              SOME ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              UPDATE ;
                              DIP { DIG 4 ; DROP } ;
                              DUG 4 } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MEM ;
                         IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                            { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              EMPTY_MAP string string ;
                              PUSH nat 0 ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              PAIR ;
                              PUSH string "GEM" ;
                              PAIR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              PAIR ;
                              SOME ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              UPDATE ;
                              DIP { DIG 2 ; DROP } ;
                              DUG 2 } ;
                         DROP 2 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR } } } } } }
