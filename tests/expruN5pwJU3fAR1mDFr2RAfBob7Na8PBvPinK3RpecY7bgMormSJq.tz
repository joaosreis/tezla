{ parameter
    (or (or (or (or (pair %approve (address %spender) (nat %value))
                    (pair %burn (address %spender) (nat %value)))
                (or (pair %checkBurnAllowed (pair (address %spender) (nat %value)) (contract bool))
                    (pair %checkMintAllowed (pair (address %spender) (nat %value)) (contract bool))))
            (or (or (pair %checkTransferAllowed
                       (pair (address %from) (pair (address %to) (nat %value)))
                       (contract bool))
                    (pair %checkTransferFromAllowed
                       (pair (address %from) (pair (address %to) (nat %value)))
                       (contract bool)))
                (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                    (pair %getBalance (address %owner) (contract nat)))))
        (or (or (pair %getTotalSupply unit (contract nat))
                (pair %mint (address %spender) (nat %value)))
            (pair %transfer (address %from) (pair (address %to) (nat %value))))) ;
  storage
    (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
          (nat %total_supply)) ;
  code { NIL operation ;
         LAMBDA
           (pair address (pair (big_map address (pair (map address nat) nat)) nat))
           (pair (map address nat) nat)
           { UNPAIR ;
             SWAP ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair (map address nat) nat) address)
                 (pair (big_map address (pair (map address nat) nat)) nat))
           nat
           { CAR ; UNPAIR ; CAR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { UNPAIR ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "InvalidSelfToSelfApproval" ; FAILWITH } {} ;
                         DUP 3 ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 4 ;
                         DUP 3 ;
                         DUP 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 4 ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         DUP 3 ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         DIG 5 ;
                         DIG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         UNPAIR ;
                         DUP 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         DIG 2 ;
                         DIG 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR } }
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     IF_LEFT
                       { DROP ; PUSH string "notImplemented" ; FAILWITH }
                       { DROP ; PUSH string "notImplemented" ; FAILWITH } } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     IF_LEFT
                       { DROP ; PUSH string "notImplemented" ; FAILWITH }
                       { DROP ; PUSH string "notImplemented" ; FAILWITH } }
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         DIG 4 ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         UNPAIR ;
                         DUP 3 ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { UNPAIR ;
                     DUP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     DIG 2 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 DIG 2 ;
                 UNPAIR ;
                 DUP 4 ;
                 DUP 4 ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "InvalidSelfToSelfTransfer" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP 4 ;
                 PAIR ;
                 DUP 7 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                 SENDER ;
                 DUP 5 ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 3 ;
                      SENDER ;
                      DUP 3 ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      SWAP ;
                      EXEC ;
                      DUP 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      LT ;
                      IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 2 ;
                      CAR ;
                      DUP 4 ;
                      DIG 3 ;
                      SUB ;
                      ABS ;
                      SOME ;
                      SENDER ;
                      UPDATE ;
                      PAIR }
                    { DIG 5 ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 DUP ;
                 DUP 4 ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 DIG 2 ;
                 DIG 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR } } } }
