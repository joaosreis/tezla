{ parameter
    (or (or (pair %append
               (pair (pair (option %accreditation nat) (address %address))
                     (pair (string %domicile) (bool %frozen)))
               (nat %role))
            (address %remove))
        (or (address %validateAccount)
            (pair %validateAccounts
               (pair (pair (pair %addresses address address) (pair %balances nat nat))
                     (pair (bool %issuance) (pair %values nat nat)))
               (contract %callback
                  (pair (pair (pair (pair %accounts
                                       (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                   (pair (bool %frozen) (address %parent)))
                                             (nat %role))
                                       (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                   (pair (bool %frozen) (address %parent)))
                                             (nat %role)))
                                    (pair %addresses address address))
                              (pair (pair %balances nat nat) (bool %issuance)))
                        (pair (address %sender) (pair %values nat nat))))))) ;
  storage
    (big_map
       address
       (pair (pair (pair (option %accreditation nat) (string %domicile))
                   (pair (bool %frozen) (address %parent)))
             (nat %role))) ;
  code { PUSH nat 1 ;
         PUSH nat 3 ;
         PUSH nat 5 ;
         EMPTY_MAP nat nat ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         SOME ;
         PUSH nat 2 ;
         UPDATE ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SOME ;
         PUSH nat 6 ;
         UPDATE ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         SOME ;
         PUSH nat 7 ;
         UPDATE ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         SWAP ;
         SOME ;
         SWAP ;
         UPDATE ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         SOME ;
         PUSH nat 4 ;
         UPDATE ;
         DUG 2 ;
         SWAP ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         DUP ;
         SOME ;
         SWAP ;
         UPDATE ;
         LAMBDA
           (pair address
                 (big_map address (pair (pair (pair (option nat) string) (pair bool address)) nat)))
           (pair (pair (pair (option nat) string) (pair bool address)) nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "InvalidAddress" ; FAILWITH } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair address
                          (big_map address (pair (pair (pair (option nat) string) (pair bool address)) nat)))
                    (pair (pair (pair (option nat) string) (pair bool address)) nat))
                 (pair address
                       (big_map address (pair (pair (pair (option nat) string) (pair bool address)) nat))))
           (pair (pair (pair (option nat) string) (pair bool address)) nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             SWAP ;
             EXEC ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             IF { DROP ; PUSH string "FrozenAccount" ; FAILWITH } {} } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         DIG 4 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SENDER ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 PUSH bool True ;
                 DIG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 2 ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH string "InvalidRole" ; FAILWITH }
                    { DUP ;
                      CDR ;
                      SENDER ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      GET ;
                      IF_NONE
                        { DIG 2 ;
                          SWAP ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          NIL operation ;
                          PAIR }
                        { SENDER ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          COMPARE ;
                          NEQ ;
                          IF { DROP 3 ; PUSH string "Exists" ; FAILWITH }
                             { DIG 2 ;
                               SWAP ;
                               SOME ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               UPDATE ;
                               NIL operation ;
                               PAIR } } } }
               { DIG 4 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SENDER ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SENDER ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH string "InvalidParent" ; FAILWITH }
                    { NONE (pair (pair (pair (option nat) string) (pair bool address)) nat) ;
                      SWAP ;
                      UPDATE ;
                      NIL operation ;
                      PAIR } } }
           { DIG 2 ;
             DROP ;
             DIG 3 ;
             DROP ;
             IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 NIL operation ;
                 PAIR }
               { DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 EXEC ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIG 7 ;
                 SWAP ;
                 EXEC ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 NIL operation ;
                 DIG 3 ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR } } } }
