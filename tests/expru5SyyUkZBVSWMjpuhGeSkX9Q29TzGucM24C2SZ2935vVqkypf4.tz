{ parameter (or (unit %pop) (int %push)) ;
  storage (pair (int %first) (pair (int %last) (map %saved int int))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CAR } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: self.data.first < self.data.last" ; FAILWITH } ;
             DROP ;
             DUP ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             NONE int ;
             DIG 4 ;
             CAR ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             CDR ;
             PUSH int 1 ;
             DIG 2 ;
             CAR ;
             ADD ;
             PAIR }
           { SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             { CDR ; CDR } ;
             PUSH int 1 ;
             DIG 4 ;
             { CDR ; CAR } ;
             ADD ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 3 ;
             SOME ;
             DIG 4 ;
             { CDR ; CAR } ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR } ;
         NIL operation ;
         PAIR } }
