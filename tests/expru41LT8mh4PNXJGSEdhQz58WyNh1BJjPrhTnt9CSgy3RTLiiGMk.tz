{ storage
    (pair (pair (address %admin) (nat %all_artworks))
          (pair (big_map %artworks
                   nat
                   (pair (pair (pair (nat %edition_cur) (nat %edition_max))
                               (pair (timestamp %end_timestamp) (address %ft_address)))
                         (pair (pair (address %nft_address) (nat %price))
                               (pair (timestamp %start_timestamp) (map %token_metadata string bytes)))))
                (set %operators address))) ;
  parameter
    (or (pair %create_artwork
           (pair (timestamp %end_timestamp) (pair (address %ft_address) (nat %max_num)))
           (pair (pair (address %nft_address) (nat %price))
                 (pair (timestamp %start_timestamp) (map %token_metadata string bytes))))
        (or (pair %print (nat %artwork_id) (pair (address %owner) (address %payer)))
            (pair %update_operator (address %operator) (bool %valid)))) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             SENDER ;
             MEM ;
             IF {}
                { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                  FAILWITH } ;
             NOW ;
             PUSH int 60 ;
             DUP ;
             PUSH int 1 ;
             MUL ;
             MUL ;
             ADD ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "END_DATE_TOO_SOON" ; FAILWITH } ;
             DUP ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             COMPARE ;
             GT ;
             IF {} { PUSH string "END_DATE_TOO_SOON" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 3 ;
             DUP ;
             GET 6 ;
             SWAP ;
             DUP ;
             DUG 5 ;
             GET 5 ;
             PAIR %start_timestamp %token_metadata ;
             DIG 4 ;
             DUP ;
             GET 3 ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 6 ;
             GET 3 ;
             CAR ;
             PAIR %nft_address %price ;
             PAIR ;
             DIG 4 ;
             DUP ;
             CAR ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 6 ;
             CAR ;
             CAR ;
             PAIR %end_timestamp %ft_address ;
             DIG 5 ;
             CAR ;
             GET 4 ;
             PUSH nat 0 ;
             PAIR %edition_cur %edition_max ;
             PAIR ;
             PAIR ;
             SOME ;
             DIG 4 ;
             CAR ;
             CDR ;
             UPDATE ;
             PAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH nat 1 ;
             ADD ;
             SWAP ;
             PAIR ;
             PAIR ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.now < self.data.artworks[params.artwork_id].end_timestamp" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 GET 5 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {}
                    { PUSH string
                           "WrongCondition: sp.now >= self.data.artworks[params.artwork_id].start_timestamp" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.artworks[params.artwork_id].edition_cur < self.data.artworks[params.artwork_id].edition_max" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DUP 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 949 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 9 ;
                 GET 3 ;
                 DUP 10 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PACK ;
                 SOME ;
                 PUSH string "edition" ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 NIL operation ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %mint (pair (address %address) (map %metadata string bytes)) ;
                 IF_NONE { PUSH int 950 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 GET 3 ;
                 DUP 5 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 GET 6 ;
                 DUP 5 ;
                 GET 3 ;
                 PAIR %address %metadata ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 CAR ;
                 GET 4 ;
                 CONTRACT %burn (pair (address %address) (nat %amount)) ;
                 IF_NONE { PUSH int 953 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 GET 3 ;
                 DUP 5 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 943 ; FAILWITH } {} ;
                 GET 3 ;
                 CDR ;
                 DUP 5 ;
                 GET 4 ;
                 PAIR %address %amount ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DIG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 956 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 IF { SWAP ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH bool True ;
                      DIG 4 ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { SWAP ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH bool False ;
                      DIG 4 ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR } ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
