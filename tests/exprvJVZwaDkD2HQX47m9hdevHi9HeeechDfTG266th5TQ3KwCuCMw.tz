{ parameter
    (or (list %transfer
           (pair (pair (nat %amount) (address %from_)) (pair (address %to_) (nat %token_id))))
        (unit %u)) ;
  storage (big_map address nat) ;
  code { LAMBDA
           (pair (option nat) nat)
           nat
           { DUP ;
             CAR ;
             IF_NONE { DUP ; CDR } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         PUSH nat 0 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         IF_LEFT
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DUP ;
                    CAR ;
                    CDR ;
                    SENDER ;
                    COMPARE ;
                    NEQ ;
                    IF { PUSH string "Address from_ needs to be equal to the sender" ; FAILWITH }
                       { PUSH unit Unit } ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    DIG 8 ;
                    DUP ;
                    DUG 9 ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CAR ;
                    CDR ;
                    GET ;
                    PAIR ;
                    DIG 10 ;
                    DUP ;
                    DUG 11 ;
                    SWAP ;
                    EXEC ;
                    COMPARE ;
                    LT ;
                    IF { PUSH string "Insufficient balance" ; FAILWITH } { PUSH unit Unit } ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    CAR ;
                    CAR ;
                    DIG 10 ;
                    DUP ;
                    DUG 11 ;
                    DIG 6 ;
                    DUP ;
                    DUG 7 ;
                    DIG 6 ;
                    DUP ;
                    DUG 7 ;
                    CAR ;
                    CDR ;
                    GET ;
                    PAIR ;
                    DIG 12 ;
                    DUP ;
                    DUG 13 ;
                    SWAP ;
                    EXEC ;
                    SUB ;
                    ABS ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CAR ;
                    CDR ;
                    SWAP ;
                    SOME ;
                    SWAP ;
                    UPDATE ;
                    DUP ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CAR ;
                    CAR ;
                    DIG 11 ;
                    DUP ;
                    DUG 12 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    CDR ;
                    CAR ;
                    GET ;
                    PAIR ;
                    DIG 13 ;
                    DUP ;
                    DUG 14 ;
                    SWAP ;
                    EXEC ;
                    ADD ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    CDR ;
                    CAR ;
                    SWAP ;
                    SOME ;
                    SWAP ;
                    UPDATE ;
                    DUP ;
                    DIP { DROP 7 } } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 3 } }
           { DIG 1 ; DUP ; DUG 2 ; NIL operation ; PAIR ; DIP { DROP } } ;
         DIP { DROP 4 } } }
