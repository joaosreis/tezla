{ parameter
    (or (or (pair %bet (nat %betType) (nat %number)) (unit %fund)) (unit %initialize)) ;
  storage
    (pair (pair (pair (pair (mutez %betAmount)
                            (map %bets nat (pair (pair (nat %betType) (nat %number)) (address %player))))
                      (pair (address %creator) (bool %initialized)))
                (pair (pair (mutez %maxTezInContract) (mutez %necessaryBalance))
                      (pair (nat %nextRoundTimestamp) (map %numberRange nat nat))))
          (pair (map %payouts nat nat) (map %winnings address mutez))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { { { DUP ; CAR ; DIP { CDR } } } ;
             IF { DROP } { FAILWITH } ;
             UNIT } ;
         SWAP ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 2 ;
                 PUSH string "Tezos.amount = self.betAmount" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "(betType >= 0n) and (betType <= 5n)" ;
                 PUSH nat 5 ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 LE ;
                 PUSH nat 0 ;
                 { DIP 5 { DUP } ; DIG 6 } ;
                 COMPARE ;
                 GE ;
                 AND ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Out of range" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 COMPARE ;
                 LE ;
                 PUSH nat 0 ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 GE ;
                 AND ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 AMOUNT ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 MUL ;
                 DUP ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 PUSH string "provisionalBalance < Tezos.balance" ;
                 BALANCE ;
                 DIG 2 ;
                 COMPARE ;
                 LT ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 DIG 6 ;
                 DIG 7 ;
                 PAIR ;
                 PAIR ;
                 { DIP 5 { DUP } ; DIG 6 } ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               { DROP ; SWAP ; DROP } }
           { DROP ;
             PUSH string "Creator already exist" ;
             PUSH bool False ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             COMPARE ;
             EQ ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bool True ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             SENDER ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             PUSH mutez 0 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             PUSH timestamp 0 ;
             NOW ;
             SUB ;
             ABS ;
             PAIR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             EMPTY_MAP nat nat ;
             PUSH nat 36 ;
             SOME ;
             PUSH nat 5 ;
             UPDATE ;
             PUSH nat 2 ;
             SOME ;
             PUSH nat 4 ;
             UPDATE ;
             PUSH nat 2 ;
             SOME ;
             PUSH nat 3 ;
             UPDATE ;
             PUSH nat 3 ;
             SOME ;
             PUSH nat 2 ;
             UPDATE ;
             PUSH nat 3 ;
             SOME ;
             PUSH nat 1 ;
             UPDATE ;
             PUSH nat 2 ;
             SOME ;
             PUSH nat 0 ;
             UPDATE ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             EMPTY_MAP nat nat ;
             PUSH nat 36 ;
             SOME ;
             PUSH nat 5 ;
             UPDATE ;
             PUSH nat 1 ;
             SOME ;
             PUSH nat 4 ;
             UPDATE ;
             PUSH nat 1 ;
             SOME ;
             PUSH nat 3 ;
             UPDATE ;
             PUSH nat 2 ;
             SOME ;
             PUSH nat 2 ;
             UPDATE ;
             PUSH nat 2 ;
             SOME ;
             PUSH nat 1 ;
             UPDATE ;
             PUSH nat 1 ;
             SOME ;
             PUSH nat 0 ;
             UPDATE ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             PUSH mutez 1000000 ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             PUSH mutez 4000000 ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR } ;
         NIL operation ;
         PAIR } }
