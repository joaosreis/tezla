{ storage
    (pair (address %admin)
          (pair (map %mile string (pair (int %amount) (timestamp %expiration)))
                (map %owner address (set string)))) ;
  parameter
    (or (pair %add
           (address %ow)
           (pair (string %newmile_id)
                 (pair (int %newmile_amount) (timestamp %newmile_expiration))))
        (or (int %consume) (unit %clear_expired))) ;
  code { UNPAIR ;
         DIP { UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
             PUSH int 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             COMPARE ;
             GT ;
             NOT ;
             IF { PUSH string "InvalidCondition: c1" ; FAILWITH } {} ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MEM ;
             IF { PUSH string "InvalidCondition: c2" ; FAILWITH } {} ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             MEM ;
             IF { DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  MEM ;
                  NOT ;
                  IF { DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       GET ;
                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       PUSH bool True ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       UPDATE ;
                       SOME ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       UPDATE ;
                       DIP { DIG 5 ; DROP } ;
                       DUG 5 ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       PAIR ;
                       SOME ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       UPDATE ;
                       DIP { DIG 6 ; DROP } ;
                       DUG 6 ;
                       DROP }
                     { PUSH string "KeyAlreadyExists" ; FAILWITH } }
                { DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  MEM ;
                  IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                     { DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       MEM ;
                       IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                          { DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            EMPTY_SET string ;
                            PUSH bool True ;
                            DIG 5 ;
                            DUP ;
                            DUG 6 ;
                            UPDATE ;
                            SOME ;
                            DIG 5 ;
                            DUP ;
                            DUG 6 ;
                            UPDATE ;
                            DIP { DIG 4 ; DROP } ;
                            DUG 4 ;
                            DIG 5 ;
                            DUP ;
                            DUG 6 ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            PAIR ;
                            SOME ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            UPDATE ;
                            DIP { DIG 5 ; DROP } ;
                            DUG 5 } } } ;
             DROP 4 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             NIL operation ;
             PAIR }
           { IF_LEFT
               { PUSH int 0 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 GE ;
                 NOT ;
                 IF { PUSH string "InvalidCondition: r2" ; FAILWITH } {} ;
                 NIL string ;
                 NIL string ;
                 NIL string ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                 ITER { DIG 6 ;
                        DUP ;
                        DUG 7 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                        NIL string ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        SOME ;
                        PAIR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        ITER { DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               IF_NONE
                                 { DUP ; DIG 3 ; DUP ; DUG 4 ; CONS ; DIG 2 ; DUP ; DUG 3 ; PAIR }
                                 { PUSH int 0 ;
                                   DIG 13 ;
                                   DUP ;
                                   DUG 14 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   GET ;
                                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                   DIG 7 ;
                                   DUP ;
                                   DUG 8 ;
                                   CDR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   COMPARE ;
                                   GT ;
                                   IF { PUSH int 1 } { PUSH int 0 } ;
                                   DIP { DROP } ;
                                   COMPARE ;
                                   GT ;
                                   IF { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 7 ;
                                        DUP ;
                                        DUG 8 ;
                                        CONS ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CONS ;
                                        NONE string ;
                                        PAIR }
                                      { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        CONS ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        PAIR } ;
                                   SWAP ;
                                   DROP } ;
                               DIP { DROP } ;
                               DIP { DROP } ;
                               DIP { DIG 1 ; DROP } ;
                               DUG 1 ;
                               DROP } ;
                        DUP ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        NIL string ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        IF_NONE
                          { DIG 1 ; DUP ; DUG 2 }
                          { DIG 2 ; DUP ; DUG 3 ; DIG 7 ; DUP ; DUG 8 ; CONS ; SWAP ; DROP } ;
                        ITER { DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CONS ;
                               DIP { DIG 1 ; DROP } ;
                               DUG 1 ;
                               DROP } ;
                        DIP { DROP } ;
                        DIP { DROP } ;
                        DIP { DROP } ;
                        DIP { DROP } ;
                        DIP { DIG 1 ; DROP } ;
                        DUG 1 ;
                        DROP } ;
                 ITER { DIG 5 ;
                        DUP ;
                        DUG 6 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                        NOW ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        COMPARE ;
                        GE ;
                        IF { DIG 2 ; DUP ; DUG 3 ; DIG 2 ; DUP ; DUG 3 ; CONS }
                           { DIG 2 ; DUP ; DUG 3 } ;
                        DIP { DROP } ;
                        DIP { DIG 1 ; DROP } ;
                        DUG 1 ;
                        DROP } ;
                 ITER { DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CONS ;
                        DIP { DIG 1 ; DROP } ;
                        DUG 1 ;
                        DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 ITER { DIG 6 ;
                        DUP ;
                        DUG 7 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                        DUP ;
                        CAR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        ADD ;
                        DIP { DROP } ;
                        DIP { DIG 1 ; DROP } ;
                        DUG 1 ;
                        DROP } ;
                 COMPARE ;
                 GE ;
                 NOT ;
                 IF { PUSH string "NotEnoughMiles" ; FAILWITH } {} ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 ITER { PUSH int 0 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        COMPARE ;
                        GT ;
                        IF { DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             GET ;
                             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                             CAR ;
                             COMPARE ;
                             GT ;
                             IF { DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                  DIG 6 ;
                                  DUP ;
                                  DUG 7 ;
                                  DIG 7 ;
                                  DUP ;
                                  DUG 8 ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  GET ;
                                  IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                  UNPAIR ;
                                  DROP ;
                                  DIG 4 ;
                                  DUP ;
                                  DUG 5 ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  CAR ;
                                  SUB ;
                                  PAIR ;
                                  SOME ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  UPDATE ;
                                  DIP { DIG 6 ; DROP } ;
                                  DUG 6 ;
                                  DROP ;
                                  PUSH int 0 ;
                                  DIP { DIG 1 ; DROP } ;
                                  DUG 1 }
                                { DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  DIG 6 ;
                                  DUP ;
                                  DUG 7 ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  GET ;
                                  IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                  CAR ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH int 0 ;
                                       DIP { DIG 1 ; DROP } ;
                                       DUG 1 ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       NONE (pair int timestamp) ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       UPDATE ;
                                       DIP { DIG 5 ; DROP } ;
                                       DUG 5 ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       SENDER ;
                                       GET ;
                                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                       PUSH bool False ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       UPDATE ;
                                       SOME ;
                                       SENDER ;
                                       UPDATE ;
                                       DIP { DIG 4 ; DROP } ;
                                       DUG 4 }
                                     { DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                       CAR ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       SUB ;
                                       DIP { DIG 1 ; DROP } ;
                                       DUG 1 ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       NONE (pair int timestamp) ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       UPDATE ;
                                       DIP { DIG 5 ; DROP } ;
                                       DUG 5 ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       DIG 5 ;
                                       DUP ;
                                       DUG 6 ;
                                       SENDER ;
                                       GET ;
                                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                       PUSH bool False ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       UPDATE ;
                                       SOME ;
                                       SENDER ;
                                       UPDATE ;
                                       DIP { DIG 4 ; DROP } ;
                                       DUG 4 } } }
                           {} ;
                        DROP } ;
                 DROP 3 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                 DUP ;
                 ITER { UNPAIR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                        ITER { DIG 4 ;
                               DUP ;
                               DUG 5 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                               NOW ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               COMPARE ;
                               LT ;
                               IF { DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    NONE (pair int timestamp) ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    UPDATE ;
                                    DIP { DIG 5 ; DROP } ;
                                    DUG 5 ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    GET ;
                                    IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                    PUSH bool False ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    UPDATE ;
                                    SOME ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    UPDATE ;
                                    DIP { DIG 4 ; DROP } ;
                                    DUG 4 }
                                  {} ;
                               DROP 2 } ;
                        DROP 2 } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }
