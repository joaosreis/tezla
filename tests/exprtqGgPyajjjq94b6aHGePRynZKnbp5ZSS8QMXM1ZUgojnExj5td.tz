{ parameter
    (or (or (or (unit %betAgainst) (unit %betFor))
            (or (unit %close)
                (pair %closeCallback
                   (string %currencyPair)
                   (pair (timestamp %lastUpdate) (nat %rate)))))
        (unit %withdraw)) ;
  storage
    (pair (pair (pair (pair (big_map %betsAgainstLedger address mutez) (mutez %betsAgainstSum))
                      (pair (big_map %betsForLedger address mutez) (mutez %betsForSum)))
                (pair (pair (nat %closedRate) (timestamp %closedTime))
                      (pair (string %currencyPair) (bool %isBetsForWin))))
          (pair (pair (bool %isClosed) (address %oracleAddress))
                (pair (nat %targetRate) (timestamp %targetTime)))) ;
  code { { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     IF { PUSH string "Contract already closed" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE
                       { DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         AMOUNT ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { DROP ; PUSH string "Account already made betAgainst" ; FAILWITH } ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     IF { PUSH string "Contract already closed" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE
                       { DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         AMOUNT ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { DROP ; PUSH string "Account already made betFor" ; FAILWITH } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CONTRACT %get
                       (pair string
                             (contract (pair (string %currencyPair) (pair (timestamp %lastUpdate) (nat %rate))))) ;
                     IF_NONE { PUSH string "No oracle found" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     SELF %closeCallback ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     PAIR }
                   { DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Unknown sender" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Unexpected currency pair" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "Can't close until reached targetTime" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     IF { PUSH string "Contract already closed. Can't close contract twice" ;
                          FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { DROP ;
             DUP ;
             CDR ;
             CAR ;
             CAR ;
             IF {}
                { PUSH string "Withdraw is not allowed until contract is closed" ; FAILWITH } ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             IF { DUP ; CAR ; CAR ; CDR ; CAR } { DUP ; CAR ; CAR ; CAR ; CAR } ;
             DUP ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "Participant is not win" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             ADD ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             IF { DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CDR ; CDR }
                { DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CAR ; CDR } ;
             DIG 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             MUL ;
             SENDER ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             DIG 2 ;
             NONE mutez ;
             SENDER ;
             UPDATE ;
             SWAP ;
             DIG 2 ;
             UNIT ;
             TRANSFER_TOKENS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             IF { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 4 ;
                  PAIR ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 5 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 5 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  PAIR } ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } } }
