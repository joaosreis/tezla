{ storage
    (pair (address %admin)
          (pair (pair %permissions_descriptor
                   (nat %transfer_policy)
                   (pair (nat %sender_hook_policy)
                         (pair (nat %receiver_hook_policy)
                               (option %custom (pair (string %tag) (option %config_api address))))))
                (pair (big_map %ledger (pair nat address) (pair (nat %amount) (option %hook address)))
                      (pair (set %operator (pair address (pair nat address)))
                            (pair (map %token
                                     nat
                                     (pair (nat %token_typ)
                                           (option %permissions_desc
                                              (pair (nat %transfer_policy)
                                                    (pair (nat %sender_hook_policy)
                                                          (pair (nat %receiver_hook_policy)
                                                                (option %custom (pair (string %tag) (option %config_api address)))))))))
                                  (pair (big_map %token_metadata
                                           nat
                                           (pair (string %symbol)
                                                 (pair (string %name) (pair (nat %decimals) (map %extras string string)))))
                                        (big_map %allowance (pair address (pair address nat)) nat))))))) ;
  parameter
    (or (pair %balance_of
           (list %brs (pair (address %bo_owner) (nat %btoken_id)))
           (contract
              (list (pair (pair %request (address %bo_owner) (nat %btoken_id)) (nat %balance_)))))
        (or (pair %add_token
               (nat %new_token_id)
               (pair (nat %new_token_type)
                     (pair (nat %totalsupply)
                           (pair (address %new_owner)
                                 (pair (option %new_owner_hook address)
                                       (pair (string %new_symbol)
                                             (pair (string %new_name)
                                                   (pair (nat %new_decimals)
                                                         (option %new_token_permissions
                                                            (pair (nat %transfer_policy)
                                                                  (pair (nat %sender_hook_policy)
                                                                        (pair (nat %receiver_hook_policy)
                                                                              (option %custom (pair (string %tag) (option %config_api address)))))))))))))))
            (or (pair %set_permissions_descriptor
                   (nat %otp)
                   (pair (nat %shp) (pair (nat %rhp) (bool %withcustom))))
                (or (contract %token_metadata_registry address)
                    (or (pair %set_hook (nat %ti) (option %h address))
                        (or (list %transfer
                               (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                            (or (list %update_operators
                                   (or (pair (address %opp_owner) (pair (address %opp_operator) (nat %opp_token_id)))
                                       (pair (address %opp_owner) (pair (address %opp_operator) (nat %opp_token_id)))))
                                (pair %approve (address %spender) (pair (nat %value) (nat %itoken_id)))))))))) ;
  code { LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair bool bool)))
           bool
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             IF_NONE
               { DIG 1 ; DUP ; DUG 2 }
               { PUSH string "PER_TOKEN_POLICY" ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 3 ; DUP ; DUG 4 } { DIG 2 ; DUP ; DUG 3 } ;
                 SWAP ;
                 DROP } ;
             SWAP ;
             DROP ;
             DUG 4 ;
             DROP 4 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair nat nat)))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             IF_NONE
               { DIG 1 ; DUP ; DUG 2 }
               { PUSH string "PER_TOKEN_POLICY" ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 3 ; DUP ; DUG 4 } { DIG 2 ; DUP ; DUG 3 } ;
                 SWAP ;
                 DROP } ;
             SWAP ;
             DROP ;
             DUG 4 ;
             DROP 4 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair nat nat)))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             IF_NONE
               { DIG 1 ; DUP ; DUG 2 }
               { PUSH string "PER_TOKEN_POLICY" ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 3 ; DUP ; DUG 4 } { DIG 2 ; DUP ; DUG 3 } ;
                 SWAP ;
                 DROP } ;
             SWAP ;
             DROP ;
             DUG 4 ;
             DROP 4 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (lambda
                          (pair string
                                (pair (pair (nat %transfer_policy)
                                            (pair (nat %sender_hook_policy)
                                                  (pair (nat %receiver_hook_policy)
                                                        (option %custom (pair (string %tag) (option %config_api address))))))
                                      (pair bool bool)))
                          bool)))
           bool
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PUSH bool False ;
             PUSH bool True ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             PUSH string "PER_TOKEN_POLICY" ;
             PAIR ;
             EXEC ;
             SWAP ;
             DROP ;
             DUG 3 ;
             DROP 3 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair (map nat
                                  (pair (nat %token_typ)
                                        (option %permissions_desc
                                           (pair (nat %transfer_policy)
                                                 (pair (nat %sender_hook_policy)
                                                       (pair (nat %receiver_hook_policy)
                                                             (option %custom (pair (string %tag) (option %config_api address)))))))))
                             (pair nat
                                   (lambda
                                      (pair string
                                            (pair (pair (nat %transfer_policy)
                                                        (pair (nat %sender_hook_policy)
                                                              (pair (nat %receiver_hook_policy)
                                                                    (option %custom (pair (string %tag) (option %config_api address))))))
                                                  (pair bool bool)))
                                      bool)))))
           bool
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PUSH bool False ;
             PUSH nat 1 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             GET ;
             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
             CAR ;
             COMPARE ;
             EQ ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             PUSH string "PER_TOKEN_POLICY" ;
             PAIR ;
             EXEC ;
             SWAP ;
             DROP ;
             DUG 5 ;
             DROP 5 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair (map nat
                                  (pair (nat %token_typ)
                                        (option %permissions_desc
                                           (pair (nat %transfer_policy)
                                                 (pair (nat %sender_hook_policy)
                                                       (pair (nat %receiver_hook_policy)
                                                             (option %custom (pair (string %tag) (option %config_api address)))))))))
                             (pair nat
                                   (lambda
                                      (pair string
                                            (pair (pair (nat %transfer_policy)
                                                        (pair (nat %sender_hook_policy)
                                                              (pair (nat %receiver_hook_policy)
                                                                    (option %custom (pair (string %tag) (option %config_api address))))))
                                                  (pair nat nat)))
                                      nat)))))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             GET ;
             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
             CDR ;
             IF_NONE { DIG 6 ; DUP ; DUG 7 ; CAR } { DUP ; CAR ; SWAP ; DROP } ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             PUSH string "PER_TOKEN_POLICY" ;
             PAIR ;
             EXEC ;
             SWAP ;
             DROP ;
             DUG 5 ;
             DROP 5 } ;
         LAMBDA
           (pair string
                 (pair (pair (nat %transfer_policy)
                             (pair (nat %sender_hook_policy)
                                   (pair (nat %receiver_hook_policy)
                                         (option %custom (pair (string %tag) (option %config_api address))))))
                       (pair (map nat
                                  (pair (nat %token_typ)
                                        (option %permissions_desc
                                           (pair (nat %transfer_policy)
                                                 (pair (nat %sender_hook_policy)
                                                       (pair (nat %receiver_hook_policy)
                                                             (option %custom (pair (string %tag) (option %config_api address)))))))))
                             (pair nat
                                   (pair nat
                                         (lambda
                                            (pair string
                                                  (pair (pair (nat %transfer_policy)
                                                              (pair (nat %sender_hook_policy)
                                                                    (pair (nat %receiver_hook_policy)
                                                                          (option %custom (pair (string %tag) (option %config_api address))))))
                                                        (pair nat nat)))
                                            nat))))))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 7 ; DUP ; DUG 8 ; CDR ; CAR }
                { DIG 7 ; DUP ; DUG 8 ; CDR ; CDR ; CAR } ;
             DIP { DROP } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  GET ;
                  IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                  CDR ;
                  IF_NONE
                    { DIG 8 ; DUP ; DUG 9 ; CDR ; CAR }
                    { DUP ; CDR ; CAR ; SWAP ; DROP } }
                { DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  GET ;
                  IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                  CDR ;
                  IF_NONE
                    { DIG 8 ; DUP ; DUG 9 ; CDR ; CDR ; CAR }
                    { DUP ; CDR ; CDR ; CAR ; SWAP ; DROP } } ;
             DIP { DROP } ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             PAIR ;
             PUSH string "PER_TOKEN_POLICY" ;
             PAIR ;
             EXEC ;
             SWAP ;
             DROP ;
             DUG 6 ;
             DROP 6 } ;
         LAMBDA
           (pair (set (pair address (pair nat address)))
                 (pair (big_map (pair nat address) (pair (nat %amount) (option %hook address)))
                       (pair address
                             (pair nat (pair address (pair (address %to_) (pair (nat %token_id) (nat %amount))))))))
           (option string)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  SENDER ;
                  COMPARE ;
                  EQ ;
                  IF { NONE string } { PUSH string "FA2_TX_DENIED" ; SOME } }
                { DUP ;
                  PUSH nat 1 ;
                  COMPARE ;
                  EQ ;
                  IF { DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       MEM ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       AND ;
                       IF { NONE string } { PUSH string "FA2_NOT_OWNER" ; SOME } }
                     { DIG 7 ;
                       DUP ;
                       DUG 8 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       SENDER ;
                       PAIR ;
                       MEM ;
                       DIG 7 ;
                       DUP ;
                       DUG 8 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CDR ;
                       CAR ;
                       PAIR ;
                       MEM ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       AND ;
                       OR ;
                       IF { NONE string } { PUSH string "FA2_NOT_OPERATOR" ; SOME } } } ;
             DIP { DROP } ;
             SWAP ;
             DROP ;
             DUG 6 ;
             DROP 6 } ;
         LAMBDA
           (pair address
                 (pair (pair (list %batch
                                (pair (option %from_ address)
                                      (list %txs
                                         (pair (option %to_desc address) (pair (nat %token_id_desc) (nat %token_amount_desc))))))
                             (address %operator_p))
                       nat))
           (or (option operation) string)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CONTRACT %fa2_token_sender
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address) }
                { DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CONTRACT %fa2_token_receiver
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address) } ;
             DIP { DROP } ;
             DUP ;
             IF_NONE { PUSH string "NoneValue" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             TRANSFER_TOKENS ;
             SOME ;
             LEFT string ;
             DIP { DIG 1 ; DROP } ;
             DUG 1 ;
             DROP ;
             DUG 3 ;
             DROP 3 } ;
         LAMBDA
           (pair (big_map (pair nat address) (pair (nat %amount) (option %hook address)))
                 (pair string
                       (pair (pair (nat %transfer_policy)
                                   (pair (nat %sender_hook_policy)
                                         (pair (nat %receiver_hook_policy)
                                               (option %custom (pair (string %tag) (option %config_api address))))))
                             (pair (map nat
                                        (pair (nat %token_typ)
                                              (option %permissions_desc
                                                 (pair (nat %transfer_policy)
                                                       (pair (nat %sender_hook_policy)
                                                             (pair (nat %receiver_hook_policy)
                                                                   (option %custom (pair (string %tag) (option %config_api address)))))))))
                                   (pair nat
                                         (pair address
                                               (pair (pair (list %batch
                                                              (pair (option %from_ address)
                                                                    (list %txs
                                                                       (pair (option %to_desc address) (pair (nat %token_id_desc) (nat %token_amount_desc))))))
                                                           (address %operator_p))
                                                     (pair nat
                                                           (pair (lambda
                                                                    (pair address
                                                                          (pair (pair (list %batch
                                                                                         (pair (option %from_ address)
                                                                                               (list %txs
                                                                                                  (pair (option %to_desc address) (pair (nat %token_id_desc) (nat %token_amount_desc))))))
                                                                                      (address %operator_p))
                                                                                nat))
                                                                    (or (option operation) string))
                                                                 (pair (lambda
                                                                          (pair string
                                                                                (pair (pair (nat %transfer_policy)
                                                                                            (pair (nat %sender_hook_policy)
                                                                                                  (pair (nat %receiver_hook_policy)
                                                                                                        (option %custom (pair (string %tag) (option %config_api address))))))
                                                                                      (pair (map nat
                                                                                                 (pair (nat %token_typ)
                                                                                                       (option %permissions_desc
                                                                                                          (pair (nat %transfer_policy)
                                                                                                                (pair (nat %sender_hook_policy)
                                                                                                                      (pair (nat %receiver_hook_policy)
                                                                                                                            (option %custom (pair (string %tag) (option %config_api address)))))))))
                                                                                            (pair nat
                                                                                                  (pair nat
                                                                                                        (lambda
                                                                                                           (pair string
                                                                                                                 (pair (pair (nat %transfer_policy)
                                                                                                                             (pair (nat %sender_hook_policy)
                                                                                                                                   (pair (nat %receiver_hook_policy)
                                                                                                                                         (option %custom (pair (string %tag) (option %config_api address))))))
                                                                                                                       (pair nat nat)))
                                                                                                           nat))))))
                                                                          nat)
                                                                       (lambda
                                                                          (pair string
                                                                                (pair (pair (nat %transfer_policy)
                                                                                            (pair (nat %sender_hook_policy)
                                                                                                  (pair (nat %receiver_hook_policy)
                                                                                                        (option %custom (pair (string %tag) (option %config_api address))))))
                                                                                      (pair nat nat)))
                                                                          nat)))))))))))
           (or (option operation) string)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             PAIR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             PAIR ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             PAIR ;
             PUSH string "PER_TOKEN_POLICY" ;
             PAIR ;
             EXEC ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { NONE operation ; LEFT string }
                { DUP ;
                  PUSH nat 1 ;
                  COMPARE ;
                  EQ ;
                  IF { DIG 12 ;
                       DUP ;
                       DUG 13 ;
                       DIG 8 ;
                       DUP ;
                       DUG 9 ;
                       DIG 10 ;
                       DUP ;
                       DUG 11 ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                       CDR ;
                       IF_NONE
                         { NONE operation ; LEFT string }
                         { DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DIG 7 ;
                           DUP ;
                           DUG 8 ;
                           DIG 9 ;
                           DUP ;
                           DUG 10 ;
                           PAIR ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           PAIR ;
                           EXEC ;
                           SWAP ;
                           DROP } }
                     { DIG 12 ;
                       DUP ;
                       DUG 13 ;
                       DIG 8 ;
                       DUP ;
                       DUG 9 ;
                       DIG 10 ;
                       DUP ;
                       DUG 11 ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                       CDR ;
                       IF_NONE
                         { DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DUP ;
                           PUSH nat 0 ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH string "FA2_SENDER_HOOK_UNDEFINED" }
                              { PUSH string "FA2_RECEIVER_HOOK_UNDEFINED" } ;
                           DIP { DROP } ;
                           RIGHT (option operation) }
                         { DIG 5 ;
                           DUP ;
                           DUG 6 ;
                           DIG 7 ;
                           DUP ;
                           DUG 8 ;
                           DIG 9 ;
                           DUP ;
                           DUG 10 ;
                           PAIR ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           PAIR ;
                           EXEC ;
                           SWAP ;
                           DROP } } } ;
             DIP { DROP } ;
             SWAP ;
             DROP ;
             DUG 11 ;
             DROP 11 } ;
         LAMBDA
           (pair address
                 (pair address (list (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
           (pair (list %batch
                    (pair (option %from_ address)
                          (list %txs
                             (pair (option %to_desc address) (pair (nat %token_id_desc) (nat %token_amount_desc))))))
                 (address %operator_p))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             NIL (pair (option %from_ address)
                       (list %txs
                          (pair (option %to_desc address) (pair (nat %token_id_desc) (nat %token_amount_desc))))) ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MAP { DUP ;
                   CDR ;
                   CDR ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SOME ;
                   PAIR ;
                   SWAP ;
                   DROP } ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SOME ;
             PAIR ;
             CONS ;
             PAIR ;
             SWAP ;
             DROP ;
             DUG 3 ;
             DROP 3 } ;
         LAMBDA
           (or (pair (address %opp_owner) (pair (address %opp_operator) (nat %opp_token_id)))
               (pair (address %opp_owner) (pair (address %opp_operator) (nat %opp_token_id))))
           (pair (address %opp_owner) (pair (address %opp_operator) (nat %opp_token_id)))
           { PUSH unit Unit ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             IF_LEFT {} {} ;
             SWAP ;
             DROP ;
             DUG 1 ;
             DROP } ;
         LAMBDA
           (pair (map nat
                      (pair (nat %token_typ)
                            (option %permissions_desc
                               (pair (nat %transfer_policy)
                                     (pair (nat %sender_hook_policy)
                                           (pair (nat %receiver_hook_policy)
                                                 (option %custom (pair (string %tag) (option %config_api address)))))))))
                 (pair nat nat))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ; DUP ; DUG 3 }
                { DUP ;
                  PUSH nat 1 ;
                  COMPARE ;
                  EQ ;
                  IF { DIG 2 ; DUP ; DUG 3 }
                     { PUSH nat 0 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       COMPARE ;
                       GT ;
                       IF { PUSH nat 1 } { PUSH nat 0 } } } ;
             DIP { DROP } ;
             SWAP ;
             DROP ;
             DUG 3 ;
             DROP 3 } ;
         NIL operation ;
         DIG 14 ;
         UNPAIR ;
         DIP { UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP } ;
         IF_LEFT
           { UNPAIR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             AMOUNT ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             MAP { DIG 10 ;
                   DUP ;
                   DUG 11 ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   PAIR ;
                   MEM ;
                   IF { DIG 10 ;
                        DUP ;
                        DUG 11 ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        PAIR ;
                        GET ;
                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                        CAR }
                      { PUSH nat 0 } ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   PAIR ;
                   SWAP ;
                   DROP } ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DIG 9 ; DROP } ;
             DUG 9 ;
             DROP 2 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 15 ;
                 DUP ;
                 DUG 16 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 MEM ;
                 IF { PUSH string "InvalidCondition: f0" ; FAILWITH } {} ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 MEM ;
                 IF { PUSH string "InvalidCondition: f1" ; FAILWITH } {} ;
                 PUSH nat 1 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 COMPARE ;
                 NEQ ;
                 PUSH nat 2 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 COMPARE ;
                 EQ ;
                 AND ;
                 IF { PUSH string "InvalidCondition: f2" ; FAILWITH } {} ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 MEM ;
                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                    { DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      PAIR ;
                      SOME ;
                      DIG 10 ;
                      DUP ;
                      DUG 11 ;
                      UPDATE ;
                      DIP { DIG 11 ; DROP } ;
                      DUG 11 } ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 MEM ;
                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                    { DIG 10 ;
                      DUP ;
                      DUG 11 ;
                      EMPTY_MAP string string ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PAIR ;
                      SOME ;
                      DIG 10 ;
                      DUP ;
                      DUG 11 ;
                      UPDATE ;
                      DIP { DIG 10 ; DROP } ;
                      DUG 10 } ;
                 DIG 13 ;
                 DUP ;
                 DUG 14 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 PAIR ;
                 MEM ;
                 IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                    { DIG 13 ;
                      DUP ;
                      DUG 14 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      PAIR ;
                      SOME ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      PAIR ;
                      UPDATE ;
                      DIP { DIG 13 ; DROP } ;
                      DUG 13 } ;
                 DROP 9 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                     DUP ;
                     IF { SELF ; ADDRESS ; SOME ; PUSH string "PER_TOKEN_POLICY" ; PAIR ; SOME }
                        { NONE (pair string (option address)) } ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DIP { DIG 10 ; DROP } ;
                     DUG 10 ;
                     DROP 5 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIP { DIG 8 ; DROP } ;
                         DUG 8 ;
                         DROP ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { IF_LEFT
                           { UNPAIR ;
                             SWAP ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             PUSH nat 0 ;
                             PAIR ;
                             SOME ;
                             SENDER ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             PAIR ;
                             UPDATE ;
                             DIP { DIG 6 ; DROP } ;
                             DUG 6 ;
                             DROP 2 ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DIG 1 ;
                             PAIR }
                           { IF_LEFT
                               { DUP ;
                                 ITER { DUP ;
                                        CAR ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        EMPTY_SET (pair address nat) ;
                                        DIG 15 ;
                                        DUP ;
                                        DUG 16 ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        PAIR ;
                                        SENDER ;
                                        PAIR ;
                                        EXEC ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        ITER { DIG 15 ;
                                               DUP ;
                                               DUG 16 ;
                                               DIG 1 ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               CDR ;
                                               DIG 2 ;
                                               DUP ;
                                               DUG 3 ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               DIG 11 ;
                                               DUP ;
                                               DUG 12 ;
                                               PAIR ;
                                               EXEC ;
                                               DIG 25 ;
                                               DUP ;
                                               DUG 26 ;
                                               DIG 29 ;
                                               DUP ;
                                               DUG 30 ;
                                               DIG 15 ;
                                               DUP ;
                                               DUG 16 ;
                                               PAIR ;
                                               PUSH string "PER_TOKEN_POLICY" ;
                                               PAIR ;
                                               EXEC ;
                                               IF { DIG 1 ; DUP ; DUG 2 ; CDR ; CAR } { PUSH nat 0 } ;
                                               DIG 24 ;
                                               DUP ;
                                               DUG 25 ;
                                               DIG 29 ;
                                               DUP ;
                                               DUG 30 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               DIG 13 ;
                                               DUP ;
                                               DUG 14 ;
                                               PAIR ;
                                               DIG 16 ;
                                               DUP ;
                                               DUG 17 ;
                                               PAIR ;
                                               PUSH string "PER_TOKEN_POLICY" ;
                                               PAIR ;
                                               EXEC ;
                                               DIG 23 ;
                                               DUP ;
                                               DUG 24 ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DIG 9 ;
                                               DUP ;
                                               DUG 10 ;
                                               PAIR ;
                                               DIG 2 ;
                                               DUP ;
                                               DUG 3 ;
                                               PAIR ;
                                               DIG 18 ;
                                               DUP ;
                                               DUG 19 ;
                                               PAIR ;
                                               DIG 16 ;
                                               DUP ;
                                               DUG 17 ;
                                               PAIR ;
                                               DIG 15 ;
                                               DUP ;
                                               DUG 16 ;
                                               PAIR ;
                                               EXEC ;
                                               IF_NONE
                                                 { DIG 12 ;
                                                   DUP ;
                                                   DUG 13 ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CDR ;
                                                   CAR ;
                                                   MEM ;
                                                   NOT ;
                                                   IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   DIG 15 ;
                                                   DUP ;
                                                   DUG 16 ;
                                                   DIG 9 ;
                                                   DUP ;
                                                   DUG 10 ;
                                                   DIG 6 ;
                                                   DUP ;
                                                   DUG 7 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   GET ;
                                                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                   CAR ;
                                                   COMPARE ;
                                                   GE ;
                                                   NOT ;
                                                   IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   DIG 9 ;
                                                   DUP ;
                                                   DUG 10 ;
                                                   PAIR ;
                                                   MEM ;
                                                   NOT ;
                                                   IF { DIG 21 ;
                                                        DUP ;
                                                        DUG 22 ;
                                                        DIG 29 ;
                                                        DUP ;
                                                        DUG 30 ;
                                                        DIG 26 ;
                                                        DUP ;
                                                        DUG 27 ;
                                                        PAIR ;
                                                        DIG 24 ;
                                                        DUP ;
                                                        DUG 25 ;
                                                        PAIR ;
                                                        PUSH nat 0 ;
                                                        PAIR ;
                                                        DIG 6 ;
                                                        DUP ;
                                                        DUG 7 ;
                                                        PAIR ;
                                                        DIG 9 ;
                                                        DUP ;
                                                        DUG 10 ;
                                                        PAIR ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        DIG 14 ;
                                                        DUP ;
                                                        DUG 15 ;
                                                        PAIR ;
                                                        DIG 17 ;
                                                        DUP ;
                                                        DUG 18 ;
                                                        PAIR ;
                                                        PUSH string "PER_TOKEN_POLICY" ;
                                                        PAIR ;
                                                        DIG 16 ;
                                                        DUP ;
                                                        DUG 17 ;
                                                        PAIR ;
                                                        EXEC ;
                                                        IF_LEFT
                                                          { DUP ;
                                                            IF_NONE
                                                              {}
                                                              { DIG 19 ;
                                                                DUP ;
                                                                DUG 20 ;
                                                                DIG 1 ;
                                                                DUP ;
                                                                DUG 2 ;
                                                                CONS ;
                                                                DIP { DIG 19 ; DROP } ;
                                                                DUG 19 ;
                                                                DROP } ;
                                                            DROP }
                                                          { DUP ; FAILWITH } ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        PUSH bool True ;
                                                        DIG 3 ;
                                                        DUP ;
                                                        DUG 4 ;
                                                        DIG 10 ;
                                                        DUP ;
                                                        DUG 11 ;
                                                        PAIR ;
                                                        UPDATE ;
                                                        DIP { DIG 5 ; DROP } ;
                                                        DUG 5 }
                                                      {} ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   CAR ;
                                                   PAIR ;
                                                   MEM ;
                                                   NOT ;
                                                   IF { DIG 21 ;
                                                        DUP ;
                                                        DUG 22 ;
                                                        DIG 29 ;
                                                        DUP ;
                                                        DUG 30 ;
                                                        DIG 26 ;
                                                        DUP ;
                                                        DUG 27 ;
                                                        PAIR ;
                                                        DIG 24 ;
                                                        DUP ;
                                                        DUG 25 ;
                                                        PAIR ;
                                                        PUSH nat 1 ;
                                                        PAIR ;
                                                        DIG 6 ;
                                                        DUP ;
                                                        DUG 7 ;
                                                        PAIR ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CAR ;
                                                        PAIR ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        DIG 14 ;
                                                        DUP ;
                                                        DUG 15 ;
                                                        PAIR ;
                                                        DIG 17 ;
                                                        DUP ;
                                                        DUG 18 ;
                                                        PAIR ;
                                                        PUSH string "PER_TOKEN_POLICY" ;
                                                        PAIR ;
                                                        DIG 16 ;
                                                        DUP ;
                                                        DUG 17 ;
                                                        PAIR ;
                                                        EXEC ;
                                                        IF_LEFT
                                                          { DUP ;
                                                            IF_NONE
                                                              {}
                                                              { DIG 19 ;
                                                                DUP ;
                                                                DUG 20 ;
                                                                DIG 1 ;
                                                                DUP ;
                                                                DUG 2 ;
                                                                CONS ;
                                                                DIP { DIG 19 ; DROP } ;
                                                                DUG 19 ;
                                                                DROP } ;
                                                            DROP }
                                                          { DUP ; FAILWITH } ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        PUSH bool True ;
                                                        DIG 3 ;
                                                        DUP ;
                                                        DUG 4 ;
                                                        DIG 6 ;
                                                        DUP ;
                                                        DUG 7 ;
                                                        CAR ;
                                                        PAIR ;
                                                        UPDATE ;
                                                        DIP { DIG 5 ; DROP } ;
                                                        DUG 5 }
                                                      {} ;
                                                   DIG 26 ;
                                                   DUP ;
                                                   DUG 27 ;
                                                   DIG 31 ;
                                                   DUP ;
                                                   DUG 32 ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   DIG 14 ;
                                                   DUP ;
                                                   DUG 15 ;
                                                   PAIR ;
                                                   DIG 17 ;
                                                   DUP ;
                                                   DUG 18 ;
                                                   PAIR ;
                                                   PUSH string "PER_TOKEN_POLICY" ;
                                                   PAIR ;
                                                   EXEC ;
                                                   IF { DIG 7 ;
                                                        DUP ;
                                                        DUG 8 ;
                                                        SENDER ;
                                                        COMPARE ;
                                                        NEQ ;
                                                        IF { DIG 10 ;
                                                             DUP ;
                                                             DUG 11 ;
                                                             DIG 4 ;
                                                             DUP ;
                                                             DUG 5 ;
                                                             CDR ;
                                                             CAR ;
                                                             SENDER ;
                                                             PAIR ;
                                                             DIG 9 ;
                                                             DUP ;
                                                             DUG 10 ;
                                                             PAIR ;
                                                             GET ;
                                                             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                             DIG 3 ;
                                                             DUP ;
                                                             DUG 4 ;
                                                             DIG 1 ;
                                                             DUP ;
                                                             DUG 2 ;
                                                             COMPARE ;
                                                             LT ;
                                                             IF { DUP ;
                                                                  DIG 4 ;
                                                                  DUP ;
                                                                  DUG 5 ;
                                                                  PAIR ;
                                                                  PUSH string "NotEnoughAllowance" ;
                                                                  PAIR ;
                                                                  FAILWITH }
                                                                {} ;
                                                             DIG 11 ;
                                                             DUP ;
                                                             DUG 12 ;
                                                             DIG 5 ;
                                                             DUP ;
                                                             DUG 6 ;
                                                             CDR ;
                                                             CAR ;
                                                             SENDER ;
                                                             PAIR ;
                                                             DIG 10 ;
                                                             DUP ;
                                                             DUG 11 ;
                                                             PAIR ;
                                                             GET ;
                                                             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                             DIG 12 ;
                                                             DUP ;
                                                             DUG 13 ;
                                                             PUSH int 0 ;
                                                             DIG 6 ;
                                                             DUP ;
                                                             DUG 7 ;
                                                             INT ;
                                                             DIG 3 ;
                                                             DUP ;
                                                             DUG 4 ;
                                                             SUB ;
                                                             COMPARE ;
                                                             GE ;
                                                             IF { DIG 5 ; DUP ; DUG 6 ; INT ; DIG 2 ; DUP ; DUG 3 ; SUB ; ABS }
                                                                { PUSH string "AssignNat" ; FAILWITH } ;
                                                             SOME ;
                                                             DIG 7 ;
                                                             DUP ;
                                                             DUG 8 ;
                                                             CDR ;
                                                             CAR ;
                                                             SENDER ;
                                                             PAIR ;
                                                             DIG 12 ;
                                                             DUP ;
                                                             DUG 13 ;
                                                             PAIR ;
                                                             UPDATE ;
                                                             DIP { DIG 12 ; DROP } ;
                                                             DUG 12 ;
                                                             DROP 2 }
                                                           {} }
                                                      {} ;
                                                   DIG 14 ;
                                                   DUP ;
                                                   DUG 15 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   GET ;
                                                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                   DIG 15 ;
                                                   DUP ;
                                                   DUG 16 ;
                                                   DIG 16 ;
                                                   DUP ;
                                                   DUG 17 ;
                                                   DIG 10 ;
                                                   DUP ;
                                                   DUG 11 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   GET ;
                                                   IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                   UNPAIR ;
                                                   DROP ;
                                                   PUSH int 0 ;
                                                   DIG 6 ;
                                                   DUP ;
                                                   DUG 7 ;
                                                   INT ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CAR ;
                                                   SUB ;
                                                   COMPARE ;
                                                   GE ;
                                                   IF { DIG 5 ; DUP ; DUG 6 ; INT ; DIG 3 ; DUP ; DUG 4 ; CAR ; SUB ; ABS }
                                                      { PUSH string "AssignNat" ; FAILWITH } ;
                                                   PAIR ;
                                                   SOME ;
                                                   DIG 10 ;
                                                   DUP ;
                                                   DUG 11 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   UPDATE ;
                                                   DIP { DIG 15 ; DROP } ;
                                                   DUG 15 ;
                                                   DROP ;
                                                   DIG 14 ;
                                                   DUP ;
                                                   DUG 15 ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   CAR ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   CDR ;
                                                   CAR ;
                                                   PAIR ;
                                                   MEM ;
                                                   IF { DIG 14 ;
                                                        DUP ;
                                                        DUG 15 ;
                                                        DIG 4 ;
                                                        DUP ;
                                                        DUG 5 ;
                                                        CAR ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        GET ;
                                                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                        DIG 15 ;
                                                        DUP ;
                                                        DUG 16 ;
                                                        DIG 16 ;
                                                        DUP ;
                                                        DUG 17 ;
                                                        DIG 6 ;
                                                        DUP ;
                                                        DUG 7 ;
                                                        CAR ;
                                                        DIG 7 ;
                                                        DUP ;
                                                        DUG 8 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        GET ;
                                                        IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                        UNPAIR ;
                                                        DROP ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        DIG 3 ;
                                                        DUP ;
                                                        DUG 4 ;
                                                        CAR ;
                                                        ADD ;
                                                        PAIR ;
                                                        SOME ;
                                                        DIG 6 ;
                                                        DUP ;
                                                        DUG 7 ;
                                                        CAR ;
                                                        DIG 7 ;
                                                        DUP ;
                                                        DUG 8 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        UPDATE ;
                                                        DIP { DIG 15 ; DROP } ;
                                                        DUG 15 ;
                                                        DROP }
                                                      { DIG 14 ;
                                                        DUP ;
                                                        DUG 15 ;
                                                        DIG 4 ;
                                                        DUP ;
                                                        DUG 5 ;
                                                        CAR ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        CAR ;
                                                        PAIR ;
                                                        MEM ;
                                                        IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                                                           { DIG 14 ;
                                                             DUP ;
                                                             DUG 15 ;
                                                             NONE address ;
                                                             DIG 4 ;
                                                             DUP ;
                                                             DUG 5 ;
                                                             PUSH nat 0 ;
                                                             ADD ;
                                                             PAIR ;
                                                             SOME ;
                                                             DIG 5 ;
                                                             DUP ;
                                                             DUG 6 ;
                                                             CAR ;
                                                             DIG 6 ;
                                                             DUP ;
                                                             DUG 7 ;
                                                             CDR ;
                                                             CAR ;
                                                             PAIR ;
                                                             UPDATE ;
                                                             DIP { DIG 14 ; DROP } ;
                                                             DUG 14 } } }
                                                 { DUP ; FAILWITH } ;
                                               DROP 4 } ;
                                        DROP 5 } ;
                                 DROP ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIG 1 ;
                                 PAIR }
                               { IF_LEFT
                                   { DUP ;
                                     ITER { DIG 17 ;
                                            DUP ;
                                            DUG 18 ;
                                            DIG 22 ;
                                            DUP ;
                                            DUG 23 ;
                                            DIG 13 ;
                                            DUP ;
                                            DUG 14 ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            EXEC ;
                                            CDR ;
                                            CDR ;
                                            PAIR ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            PAIR ;
                                            DIG 9 ;
                                            DUP ;
                                            DUG 10 ;
                                            PAIR ;
                                            PUSH string "PER_TOKEN_POLICY" ;
                                            PAIR ;
                                            EXEC ;
                                            DUP ;
                                            PUSH nat 0 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH }
                                               { DUP ;
                                                 PUSH nat 1 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH } {} } ;
                                            DROP ;
                                            DUP ;
                                            IF_LEFT
                                              { DIG 6 ;
                                                DUP ;
                                                DUG 7 ;
                                                DIG 1 ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                MEM ;
                                                IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                                                   { DIG 6 ;
                                                     DUP ;
                                                     DUG 7 ;
                                                     PUSH bool True ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     DIG 3 ;
                                                     DUP ;
                                                     DUG 4 ;
                                                     CDR ;
                                                     CDR ;
                                                     PAIR ;
                                                     DIG 3 ;
                                                     DUP ;
                                                     DUG 4 ;
                                                     CDR ;
                                                     CAR ;
                                                     PAIR ;
                                                     UPDATE ;
                                                     DIP { DIG 6 ; DROP } ;
                                                     DUG 6 } ;
                                                DROP }
                                              { DIG 6 ;
                                                DUP ;
                                                DUG 7 ;
                                                PUSH bool False ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CAR ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CDR ;
                                                CAR ;
                                                PAIR ;
                                                UPDATE ;
                                                DIP { DIG 6 ; DROP } ;
                                                DUG 6 ;
                                                DROP } ;
                                            DROP } ;
                                     DROP ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DIG 1 ;
                                     PAIR }
                                   { UNPAIR ;
                                     SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     PUSH nat 1 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                     CAR ;
                                     COMPARE ;
                                     EQ ;
                                     NOT ;
                                     IF { PUSH string "NOT_A_FA1_2" ; FAILWITH } {} ;
                                     DIG 18 ;
                                     DUP ;
                                     DUG 19 ;
                                     DIG 23 ;
                                     DUP ;
                                     DUG 24 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     PAIR ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     PAIR ;
                                     DIG 10 ;
                                     DUP ;
                                     DUG 11 ;
                                     PAIR ;
                                     PUSH string "PER_TOKEN_POLICY" ;
                                     PAIR ;
                                     EXEC ;
                                     DUP ;
                                     PUSH nat 0 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH }
                                        { DUP ;
                                          PUSH nat 1 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH } {} } ;
                                     DROP ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     PAIR ;
                                     SENDER ;
                                     PAIR ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     DIG 1 ;
                                     DUP ;
                                     DUG 2 ;
                                     MEM ;
                                     IF { DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          DIG 1 ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                          PUSH nat 0 ;
                                          DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          COMPARE ;
                                          GT ;
                                          PUSH nat 0 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          COMPARE ;
                                          GT ;
                                          AND ;
                                          IF { DUP ; PUSH string "UnsafeAllowanceChange" ; PAIR ; FAILWITH } {} ;
                                          DROP }
                                        {} ;
                                     DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     SOME ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     UPDATE ;
                                     DIP { DIG 4 ; DROP } ;
                                     DUG 4 ;
                                     DROP 4 ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DIG 1 ;
                                     PAIR } } } } } } } ;
         DIP { DROP 13 } } }
