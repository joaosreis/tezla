{ parameter
    (or (or (pair %acceptBounty (address %approved) (string %bountyId))
            (pair %issueBounty (string %bountyId) (int %deadline)))
        (string %refundBounty)) ;
  storage
    (map string
         (pair (pair (mutez %balance) (string %bountyId))
               (pair (int %deadline) (address %issuer)))) ;
  code { DUP ;
         CDR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ; DUP ; DUG 3 ; NIL operation ; PAIR ; DIP { DROP } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SELF ;
                 ADDRESS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 DUP ;
                 LAMBDA
                   (pair string int)
                   (lambda
                      address
                      (lambda
                         (map string (pair (pair mutez string) (pair int address)))
                         (pair (list operation) (map string (pair (pair mutez string) (pair int address))))))
                   { DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DIP { DUP } ;
                     DUP ;
                     DIP { PAIR } ;
                     SWAP ;
                     LAMBDA
                       (pair (pair int string) address)
                       (lambda
                          (map string (pair (pair mutez string) (pair int address)))
                          (pair (list operation) (map string (pair (pair mutez string) (pair int address)))))
                       { DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP } ; DUP ; DIP { PAIR } ; SWAP } ;
                         DUP ;
                         DIP { PAIR } ;
                         SWAP ;
                         LAMBDA
                           (pair (pair address (pair int string))
                                 (map string (pair (pair mutez string) (pair int address))))
                           (pair (list operation) (map string (pair (pair mutez string) (pair int address))))
                           { DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP ; CDR ; SWAP ; CAR } } ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             PAIR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             AMOUNT ;
                             PAIR ;
                             PAIR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             SOME ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             UPDATE ;
                             NIL operation ;
                             PAIR ;
                             DIP { DROP 5 } } ;
                         SWAP ;
                         APPLY ;
                         DIP { DROP 3 } } ;
                     SWAP ;
                     APPLY ;
                     DIP { DROP 2 } } ;
                 SWAP ;
                 APPLY ;
                 DIP { DROP } ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { PUSH string "Can't find bounty" ; FAILWITH }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 NONE (pair (pair mutez string) (pair int address)) ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 UPDATE ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CONTRACT unit ;
                 IF_NONE
                   { PUSH string "Not a contract" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DUP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 4 } } ;
             DIP { DROP } } ;
         DIP { DROP 2 } } }
