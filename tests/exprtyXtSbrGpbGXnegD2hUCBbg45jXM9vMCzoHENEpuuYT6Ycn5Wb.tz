{ storage
    (pair (pair (pair (address %admin) (pair (int %adoption_index) (map %bucket_amounts_cum int int)))
                (pair (map %bucket_prices int nat) (pair (int %cid_index) (int %giveaway_amount))))
          (pair (pair (address %hen_minter) (pair (address %hen_swap) (int %max_supply)))
                (pair (string %provenance_hash)
                      (pair (bool %sale_concluded) (big_map %token_cids int bytes))))) ;
  parameter
    (or (or (list %add_cids bytes) (int %adopt))
        (or (list %bulk_mint bytes) (unit %distribute))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Only BONZAI" ; FAILWITH } ;
                 DUP ;
                 ITER { DUP 3 ;
                        DUP ;
                        GET 8 ;
                        DIG 2 ;
                        SOME ;
                        DIG 4 ;
                        CAR ;
                        GET 5 ;
                        UPDATE ;
                        UPDATE 8 ;
                        UNPAIR ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        PUSH int 1 ;
                        ADD ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        PAIR ;
                        SWAP } ;
                 DROP ;
                 NIL operation }
               { DUP ;
                 PUSH int 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "Need to adopt at least one" ; FAILWITH } ;
                 DUP ;
                 PUSH int 20 ;
                 SWAP ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "Can only adopt a maximum of 20 at a time" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 GET 3 ;
                 GET 4 ;
                 SUB ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 DUP 3 ;
                 ADD ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "Requesting to adopt more than left" ; FAILWITH } ;
                 DUP ;
                 PUSH int 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: params.n > 0" ; FAILWITH } ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 ADD ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 DUP ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 LOOP { PUSH int 0 ;
                        DUP 6 ;
                        CAR ;
                        CAR ;
                        GET 4 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH int 97 ; FAILWITH } {} ;
                        DUP 3 ;
                        COMPARE ;
                        GT ;
                        LOOP { PUSH int 1 ;
                               ADD ;
                               DUP 6 ;
                               CAR ;
                               CAR ;
                               GET 4 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               IF_NONE { PUSH int 97 ; FAILWITH } {} ;
                               DUP 3 ;
                               COMPARE ;
                               GT } ;
                        DUP 6 ;
                        CAR ;
                        GET 3 ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH int 99 ; FAILWITH } {} ;
                        DIG 3 ;
                        ADD ;
                        DUG 2 ;
                        PUSH int 1 ;
                        ADD ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT } ;
                 DROP 2 ;
                 DUP ;
                 PUSH mutez 1000000 ;
                 MUL ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "Insufficient funds for transaction" ; FAILWITH } ;
                 DUP 3 ;
                 GET 7 ;
                 IF { PUSH string "Sale has concluded" ; FAILWITH } {} ;
                 NIL operation ;
                 DUP 3 ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 ADD ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 GET 3 ;
                 DUP ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 LOOP { DIG 2 ;
                        DUP 6 ;
                        GET 3 ;
                        GET 3 ;
                        CONTRACT %mint_OBJKT (pair (pair address nat) (pair bytes nat)) ;
                        IF_NONE { PUSH int 91 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        PUSH nat 100 ;
                        DUP 9 ;
                        GET 8 ;
                        DUP 6 ;
                        GET ;
                        IF_NONE { PUSH int 40 ; FAILWITH } {} ;
                        PAIR ;
                        PUSH nat 1 ;
                        SELF_ADDRESS ;
                        PAIR ;
                        PAIR ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        DUG 2 ;
                        PUSH int 1 ;
                        ADD ;
                        DUP ;
                        DUP 3 ;
                        COMPARE ;
                        GT } ;
                 DROP 2 ;
                 DIG 3 ;
                 UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 7 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 PUSH mutez 0 ;
                 PUSH mutez 1000000 ;
                 DUP 4 ;
                 MUL ;
                 AMOUNT ;
                 SUB ;
                 COMPARE ;
                 GT ;
                 IF { SENDER ;
                      CONTRACT unit ;
                      IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                      PUSH mutez 1000000 ;
                      DIG 3 ;
                      MUL ;
                      AMOUNT ;
                      SUB ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { SWAP ; DROP } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Only BONZAI" ; FAILWITH } ;
                 DUP ;
                 NIL operation ;
                 SWAP ;
                 ITER { SWAP ;
                        DUP 4 ;
                        GET 3 ;
                        GET 3 ;
                        CONTRACT %mint_OBJKT (pair (pair address nat) (pair bytes nat)) ;
                        IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        PUSH nat 100 ;
                        DIG 4 ;
                        PAIR ;
                        PUSH nat 1 ;
                        SELF_ADDRESS ;
                        PAIR ;
                        PAIR ;
                        TRANSFER_TOKENS ;
                        CONS } ;
                 SWAP ;
                 DROP }
               { DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Only BONZAI" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH int 67 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 BALANCE ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 PUSH bool True ;
                 UPDATE 7 ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
