{ parameter (or (or (nat %bet) (unit %fund)) (or (unit %initGame) (nat %startLoto))) ;
  storage
    (pair (pair (address %gameCreator) (bool %gameState))
          (pair (mutez %minAmount) (set %players (pair (address %addr) (nat %value))))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { { { DUP ; CAR ; DIP { CDR } } } ;
             IF { DROP } { FAILWITH } ;
             UNIT } ;
         SWAP ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 PUSH string "Tezos.amount = self.minAmount" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 PAIR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "(value > 0n) and (value <= 1000n)" ;
                 PUSH nat 1000 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 COMPARE ;
                 LE ;
                 PUSH nat 0 ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 GT ;
                 AND ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 SENDER ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 PUSH bool True ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DIG 2 ; DROP 2 ; NIL operation ; PAIR } }
           { IF_LEFT
               { DROP ;
                 PUSH string "gameCreator already exists !!" ;
                 PUSH bool False ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 PUSH bool True ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 PUSH mutez 1000000 ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 PUSH string "Tezos.sender = self.gameCreator" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "size(self.players) > 0n" ;
                 PUSH nat 0 ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CDR ;
                 CDR ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 EMPTY_SET address ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 ITER { { DIP 3 { DUP } ; DIG 4 } ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        IF { CAR ; PUSH bool True ; SWAP ; UPDATE } { DROP } } ;
                 NIL operation ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CDR ;
                 CDR ;
                 ITER { { DIP 4 { DUP } ; DIG 5 } ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        IF { CAR ;
                             CONTRACT unit ;
                             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                             { DIP 2 { DUP } ; DIG 3 } ;
                             SIZE ;
                             BALANCE ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             UNIT ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DROP } } ;
                 SWAP ;
                 DIG 3 ;
                 DROP 2 ;
                 EMPTY_SET (pair address nat) ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 PAIR } } } }
