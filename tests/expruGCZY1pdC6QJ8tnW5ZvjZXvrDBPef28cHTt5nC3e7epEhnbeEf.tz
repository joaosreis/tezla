{ parameter
    (pair (pair (option %newadmins (list address)) (bytes %newhash)) (bytes %oldhash)) ;
  storage (pair (list %admins address) (bytes %hash)) ;
  code { DUP ;
         CAR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CDR ;
         DUP ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "require r1 failed" ; FAILWITH } { PUSH unit Unit } ;
         SENDER ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         PAIR ;
         PUSH bool False ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         ITER { SWAP ;
                PAIR ;
                DUP ;
                CAR ;
                DIG 1 ;
                DUP ;
                DUG 2 ;
                CDR ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                COMPARE ;
                EQ ;
                OR ;
                DIP { DROP } } ;
         NOT ;
         DIP { DROP } ;
         IF { PUSH string "require r2 failed" ; FAILWITH } { PUSH unit Unit } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CDR ;
         SWAP ;
         CAR ;
         PAIR ;
         PUSH bool False ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         CAR ;
         IF_NONE
           { PUSH bool False }
           { DIG 1 ; DUP ; DUG 2 ; DROP 2 ; PUSH bool True } ;
         DIP { DROP } ;
         IF { DUP ;
              DIG 5 ;
              DUP ;
              DUG 6 ;
              CAR ;
              CAR ;
              IF_NONE
                { PUSH string "getopt_list_address: argument is none" ; FAILWITH }
                { DUP ; DIP { DROP } } ;
              SWAP ;
              CDR ;
              SWAP ;
              PAIR ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              DIP { DROP 2 } }
            { DUP } ;
         DUP ;
         NIL operation ;
         PAIR ;
         DIP { DROP 7 } } }
