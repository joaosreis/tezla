{ parameter
    (or (or (or (or %admin (unit %confirm_admin) (address %set_admin))
                (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
            (or (pair %create_token (nat %token_id) (map %token_info string bytes))
                (bool %pause)))
        (or (or (pair %token_metadata
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (map %token_info string bytes)))))
                (pair %tokens_received
                   (list %batch
                      (pair (option %from_ address)
                            (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                   (address %operator)))
            (pair %total_supply
               (list %token_ids nat)
               (contract %callback (list (pair (nat %token_id) (nat %total_supply))))))) ;
  storage
    (pair (pair (pair (pair %admin (address %admin) (option %pending_admin address))
                      (pair %assets
                         (pair (big_map %ledger (pair address nat) nat)
                               (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                         (big_map %token_total_supply nat nat)))
                (pair (address %credits_contract) (big_map %metadata string bytes)))
          (bool %paused)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { DUP ; CDR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { DROP ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { NONE address ; SENDER ; PAIR }
                                { PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     AND ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             DUP ;
                             CAR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   MEM ;
                                   NOT ;
                                   IF { DROP ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                      { DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        PAIR ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        SWAP ;
                                        EXEC ;
                                        SWAP ;
                                        PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DROP 2 ;
                             SWAP ;
                             DROP ;
                             SWAP ;
                             DROP ;
                             PUSH string "FA2_TX_DENIED" ;
                             FAILWITH } }
                       { DROP 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         PUSH string "FA2_OPERATORS_UNSUPPORTED" ;
                         FAILWITH } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { SWAP ; SOME ; SWAP ; UPDATE }
                       { DROP 4 ; PUSH string "FA2_DUP_TOKEN_ID" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     PUSH nat 0 ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     MAP { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           SWAP ;
                           GET ;
                           IF_NONE { DIG 3 ; DUP ; DUG 4 ; FAILWITH } {} } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     AND ;
                     IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 3 ; PUSH string "FA2_RECEIVER_HOOK_FAILED" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          ITER { DUP ;
                                 CAR ;
                                 IF_NONE
                                   { DROP }
                                   { DUG 2 ;
                                     CDR ;
                                     ITER { DUP ;
                                            CAR ;
                                            IF_NONE
                                              { DROP }
                                              { SELF ;
                                                ADDRESS ;
                                                SWAP ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     CDR ;
                                                     PAIR ;
                                                     SWAP ;
                                                     CDR ;
                                                     CAR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP ;
                                                     CDR ;
                                                     CDR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     CAR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     PAIR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     DIG 5 ;
                                                     CAR ;
                                                     CAR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP ;
                                                     CDR ;
                                                     CDR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     PAIR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     PAIR ;
                                                     DIG 9 ;
                                                     DUP ;
                                                     DUG 10 ;
                                                     SWAP ;
                                                     EXEC ;
                                                     DIG 3 ;
                                                     CDR ;
                                                     CAR ;
                                                     ADD ;
                                                     PUSH nat 0 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                        { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } ;
                                                     DIG 3 ;
                                                     DUP ;
                                                     DUG 4 ;
                                                     CDR ;
                                                     DIG 3 ;
                                                     DIG 3 ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DUP ;
                                                     CDR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CAR ;
                                                     CAR ;
                                                     DIG 2 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     DIG 2 ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     GET ;
                                                     IF_NONE { PUSH nat 0 } {} ;
                                                     ADD ;
                                                     DIG 2 ;
                                                     SWAP ;
                                                     SOME ;
                                                     DIG 2 ;
                                                     UPDATE ;
                                                     DIG 2 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 2 ;
                                                     PAIR ;
                                                     PAIR }
                                                   { DROP } } } ;
                                     SWAP ;
                                     DROP } } ;
                          DIG 2 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 MAP { DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { DIG 4 ; DUP ; DUG 5 ; FAILWITH } {} ;
                       SWAP ;
                       PAIR } ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 SWAP ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
