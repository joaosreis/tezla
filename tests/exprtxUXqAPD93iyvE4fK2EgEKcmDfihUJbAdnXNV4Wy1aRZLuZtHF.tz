{ parameter
    (or (pair %create
           (pair (signature %_factoryAdminSignature)
                 (pair (timestamp %_timestamp) (address %adminAddress)))
           (pair (key %admin_pk) (pair (string %groupId) (nat %minSignerRequire))))
        (address %setNFTAddres)) ;
  storage
    (pair (pair (address %NFTAddress) (big_map %OracleList string address))
          (pair (address %factoryAdmin) (key %factoryAdminPublicKey))) ;
  code { { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             MEM ;
             IF { PUSH string "group id exist" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 6 ;
             PAIR ;
             SWAP ;
             DUP ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 3 ;
             GET 3 ;
             PAIR ;
             PAIR ;
             PACK ;
             BLAKE2B ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             GET 4 ;
             CHECK_SIGNATURE ;
             IF {} { PUSH string "verify hash: Invalid signature" ; FAILWITH } ;
             PUSH (pair (pair (map string (map bytes (map bytes bool)))
                              (pair (map string
                                         (map bytes
                                              (pair (pair (pair bytes (set bytes)) (pair (set string) string))
                                                    (pair (pair address (set bytes)) (pair address string)))))
                                    (map string (map bytes nat))))
                        (pair (pair (map string nat) (map string (map bytes address))) (pair (set bytes) (set bytes))))
                  (Pair (Pair {} (Pair {} {})) (Pair (Pair {} {}) (Pair {} {}))) ;
             PUSH (pair (map string address) (map bytes string)) (Pair {} {}) ;
             DIG 2 ;
             DUP ;
             GET 6 ;
             SWAP ;
             DUP ;
             DUG 4 ;
             GET 5 ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             GET 4 ;
             PAIR ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (or (pair %insertWhitelistedAddress
                              (pair (string %_alias) (timestamp %_timestamp))
                              (pair (address %address)
                                    (pair (signature %adminSignature) (key %pubKeyToBeWhitelisted))))
                           (pair %issueCert
                              (pair (bytes %_hash) (pair (address %_publicSignerHash) (signature %_sigS)))
                              (pair (key %_signerPublicKey) (pair (string %_toAlias) (string %_tokenSymbol)))))
                       (or (pair %setAdmin (address %adminAddress) (key %admin_pk))
                           (pair %updateTokenId (nat %tokenId) (string %tokenSymbol)))) ;
                 storage
                   (pair (pair (pair (address %NFTAddress) (pair (address %adminAddress) (key %adminPublicKey)))
                               (pair (pair (string %groupId) (nat %minSignerRequired))
                                     (pair (map %signerAddress string address) (map %signerAddressAlias bytes string))))
                         (pair (pair (map %tokenAuthSings string (map bytes (map bytes bool)))
                                     (pair (map %tokenData
                                              string
                                              (map bytes
                                                   (pair (pair (pair (bytes %_hash) (set %authorities bytes))
                                                               (pair (set %authoritiesAlias string) (string %groupId)))
                                                         (pair (pair (address %oracleContract) (set %signatures_hashed bytes))
                                                               (pair (address %to) (string %toAlias))))))
                                           (map %tokenStatus string (map bytes nat))))
                               (pair (pair (map %tokensIssued string nat) (map %tokerOwner string (map bytes address)))
                                     (pair (set %whiteListedAddresses bytes) (set %whitelist_msg_hashed bytes))))) ;
                 code { { { DUP ; CAR ; DIP { CDR } } } ;
                        IF_LEFT
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 7 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 6 ;
                                PACK ;
                                MEM ;
                                IF { PUSH string "Already whitelisted" ; FAILWITH } {} ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 8 ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                GET 6 ;
                                PAIR ;
                                DIG 2 ;
                                DUP ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 4 ;
                                GET 3 ;
                                PAIR ;
                                PAIR ;
                                PACK ;
                                BLAKE2B ;
                                MEM ;
                                IF { PUSH string "signature already exist" ; FAILWITH } {} ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 6 ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                GET 3 ;
                                PAIR ;
                                PAIR ;
                                PACK ;
                                BLAKE2B ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                CAR ;
                                CAR ;
                                GET 4 ;
                                CHECK_SIGNATURE ;
                                IF {} { PUSH string "verify hash: Invalid signature" ; FAILWITH } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                GET 3 ;
                                SOME ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                CAR ;
                                CAR ;
                                UPDATE ;
                                SWAP ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                CAR ;
                                CAR ;
                                SOME ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                GET 6 ;
                                PACK ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                GET 7 ;
                                PUSH bool True ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 6 ;
                                PACK ;
                                UPDATE ;
                                UPDATE 7 ;
                                DUP ;
                                GET 8 ;
                                PUSH bool True ;
                                DIG 3 ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                GET 6 ;
                                PAIR ;
                                DIG 4 ;
                                DUP ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                GET 3 ;
                                PAIR ;
                                PAIR ;
                                PACK ;
                                BLAKE2B ;
                                UPDATE ;
                                UPDATE 8 ;
                                NIL operation }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 7 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                PACK ;
                                MEM ;
                                IF {} { PUSH string "signer not whitelisted" ; FAILWITH } ;
                                DUP ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                GET 3 ;
                                CHECK_SIGNATURE ;
                                IF {} { PUSH string "verify hash: Invalid Signature" ; FAILWITH } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                MEM ;
                                IF {} { PUSH string "No to address found" ; FAILWITH } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 6 ;
                                MEM ;
                                IF { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 5 ;
                                     CDR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 133 ; FAILWITH } {} ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CAR ;
                                     MEM }
                                   { PUSH bool False } ;
                                IF { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     GET 5 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 5 ;
                                     GET ;
                                     IF_NONE { PUSH int 127 ; FAILWITH } {} ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 5 ;
                                     CDR ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 134 ; FAILWITH } {} ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     GET ;
                                     IF_NONE { PUSH int 134 ; FAILWITH } {} ;
                                     COMPARE ;
                                     EQ ;
                                     IF {} { PUSH string "Ambiguity in to address" ; FAILWITH } }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     EMPTY_MAP bytes address ;
                                     DIG 7 ;
                                     CAR ;
                                     GET 5 ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     GET 5 ;
                                     GET ;
                                     IF_NONE { PUSH int 127 ; FAILWITH } {} ;
                                     SOME ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     CAR ;
                                     CAR ;
                                     UPDATE ;
                                     SOME ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP } ;
                                PUSH nat 0 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 3 ;
                                GET 4 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 6 ;
                                MEM ;
                                IF { { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 3 ;
                                     GET 4 ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     MEM }
                                   { PUSH bool False } ;
                                IF { DROP ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     GET 4 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 143 ; FAILWITH } {} ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CAR ;
                                     GET ;
                                     IF_NONE { PUSH int 143 ; FAILWITH } {} }
                                   {} ;
                                PUSH nat 1 ;
                                COMPARE ;
                                EQ ;
                                IF { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 6 ;
                                     MEM ;
                                     IF { SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 150 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CAR ;
                                          MEM }
                                        { PUSH bool False } ;
                                     IF { SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 150 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { PUSH int 150 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          PACK ;
                                          MEM }
                                        { PUSH bool False } ;
                                     IF { PUSH bool False ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 3 ;
                                          CAR ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          CAR ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 3 ;
                                          PACK ;
                                          GET ;
                                          IF_NONE { PUSH int 152 ; FAILWITH } {} ;
                                          COMPARE ;
                                          EQ ;
                                          IF {}
                                             { PUSH string
                                                    "WrongCondition: self.data.tokenAuthSings[params._tokenSymbol][params._hash][sp.pack(params._signerPublicKey)] == False" ;
                                               FAILWITH } }
                                        {} ;
                                     SELF_ADDRESS ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 3 ;
                                     GET 3 ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     GET ;
                                     IF_NONE { PUSH int 154 ; FAILWITH } {} ;
                                     GET 3 ;
                                     CAR ;
                                     COMPARE ;
                                     EQ ;
                                     IF {}
                                        { PUSH string
                                               "WrongCondition: self.data.tokenData[params._tokenSymbol][params._hash].oracleContract == sp.self_address" ;
                                          FAILWITH } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     DUP ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 156 ; FAILWITH } {} ;
                                     DUP ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     CAR ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 156 ; FAILWITH } {} ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     PUSH bool True ;
                                     { DIP 13 { DUP } ; DIG 14 } ;
                                     GET 3 ;
                                     PACK ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     DUP ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                                     DUP ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     CAR ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     PUSH bool True ;
                                     DIG 14 ;
                                     CAR ;
                                     GET 6 ;
                                     { DIP 14 { DUP } ; DIG 15 } ;
                                     GET 3 ;
                                     PACK ;
                                     GET ;
                                     IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     DUP ;
                                     { DIP 5 { DUP } ; DIG 6 } ;
                                     GET 6 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                                     DUP ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     CAR ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                                     PUSH (option bool) (Some True) ;
                                     { DIP 9 { DUP } ; DIG 10 } ;
                                     GET 3 ;
                                     PACK ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     DUP ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 163 ; FAILWITH } {} ;
                                     DUP ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     CAR ;
                                     CAR ;
                                     DUP ;
                                     DUG 2 ;
                                     GET ;
                                     IF_NONE { PUSH int 163 ; FAILWITH } {} ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     PUSH bool True ;
                                     { DIP 13 { DUP } ; DIG 14 } ;
                                     CAR ;
                                     GET 4 ;
                                     PACK ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 6 ;
                                     MEM ;
                                     IF { SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 167 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CAR ;
                                          MEM }
                                        { PUSH bool False } ;
                                     IF { SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 167 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { PUSH int 167 ; FAILWITH } {} ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 3 ;
                                          PACK ;
                                          MEM }
                                        { PUSH bool False } ;
                                     IF { PUSH bool False ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 3 ;
                                          CAR ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 6 ;
                                          GET ;
                                          IF_NONE { PUSH int 168 ; FAILWITH } {} ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          CAR ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { PUSH int 168 ; FAILWITH } {} ;
                                          { DIP 2 { DUP } ; DIG 3 } ;
                                          GET 3 ;
                                          PACK ;
                                          GET ;
                                          IF_NONE { PUSH int 168 ; FAILWITH } {} ;
                                          COMPARE ;
                                          EQ ;
                                          IF {}
                                             { PUSH string
                                                    "WrongCondition: self.data.tokenAuthSings[params._tokenSymbol][params._hash][sp.pack(params._signerPublicKey)] == False" ;
                                               FAILWITH } }
                                        {} ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     EMPTY_MAP
                                       bytes
                                       (pair (pair (pair bytes (set bytes)) (pair (set string) string))
                                             (pair (pair address (set bytes)) (pair address string))) ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 5 ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     CAR ;
                                     GET 5 ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     GET 5 ;
                                     GET ;
                                     IF_NONE { PUSH int 127 ; FAILWITH } {} ;
                                     PAIR ;
                                     EMPTY_SET bytes ;
                                     PUSH bool True ;
                                     { DIP 9 { DUP } ; DIG 10 } ;
                                     CAR ;
                                     GET 4 ;
                                     PACK ;
                                     UPDATE ;
                                     SELF_ADDRESS ;
                                     PAIR ;
                                     PAIR ;
                                     { DIP 8 { DUP } ; DIG 9 } ;
                                     CAR ;
                                     GET 3 ;
                                     CAR ;
                                     EMPTY_SET string ;
                                     PUSH bool True ;
                                     DIG 11 ;
                                     CAR ;
                                     GET 6 ;
                                     { DIP 11 { DUP } ; DIG 12 } ;
                                     GET 3 ;
                                     PACK ;
                                     GET ;
                                     IF_NONE { PUSH int 170 ; FAILWITH } {} ;
                                     UPDATE ;
                                     PAIR ;
                                     EMPTY_SET bytes ;
                                     PUSH bool True ;
                                     { DIP 10 { DUP } ; DIG 11 } ;
                                     GET 3 ;
                                     PACK ;
                                     UPDATE ;
                                     { DIP 9 { DUP } ; DIG 10 } ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     SOME ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     CAR ;
                                     CAR ;
                                     UPDATE ;
                                     SOME ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     UPDATE ;
                                     PAIR ;
                                     SWAP ;
                                     EMPTY_MAP bytes (map bytes bool) ;
                                     EMPTY_MAP bytes bool ;
                                     PUSH (option bool) (Some True) ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     GET 3 ;
                                     PACK ;
                                     UPDATE ;
                                     SOME ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     CAR ;
                                     CAR ;
                                     UPDATE ;
                                     SOME ;
                                     { DIP 5 { DUP } ; DIG 6 } ;
                                     GET 6 ;
                                     UPDATE ;
                                     SWAP ;
                                     { { DUP ; CAR ; DIP { CDR } } } ;
                                     SWAP ;
                                     EMPTY_MAP bytes nat ;
                                     PUSH (option nat) (Some 1) ;
                                     { DIP 7 { DUP } ; DIG 8 } ;
                                     CAR ;
                                     CAR ;
                                     UPDATE ;
                                     SOME ;
                                     { DIP 6 { DUP } ; DIG 7 } ;
                                     GET 6 ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 6 ;
                                MEM ;
                                IF { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     GET 3 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CAR ;
                                     MEM }
                                   { PUSH bool False } ;
                                IF { SWAP ;
                                     DUP ;
                                     CAR ;
                                     GET 3 ;
                                     CDR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 3 ;
                                     GET 3 ;
                                     GET 3 ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     GET 6 ;
                                     GET ;
                                     IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                                     { DIP 2 { DUP } ; DIG 3 } ;
                                     CAR ;
                                     CAR ;
                                     GET ;
                                     IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     SIZE ;
                                     COMPARE ;
                                     EQ ;
                                     IF { SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 5 ;
                                          CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          GET 6 ;
                                          MEM ;
                                          IF { NIL operation ;
                                               { DIP 2 { DUP } ; DIG 3 } ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               CONTRACT %update
                                                 (pair (pair (pair bytes address) (pair nat string))
                                                       (pair (pair address string) (pair address (pair string nat)))) ;
                                               IF_NONE { PUSH int 202 ; FAILWITH } {} ;
                                               PUSH mutez 0 ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 5 ;
                                               CAR ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 193 ; FAILWITH } {} ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               GET 6 ;
                                               PAIR ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               GET 5 ;
                                               PAIR ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 6 ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               GET 3 ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               CAR ;
                                               GET 4 ;
                                               PUSH nat 1 ;
                                               PAIR ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 5 ;
                                               CDR ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 7 { DUP } ; DIG 8 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 7 { DUP } ; DIG 8 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               { DIP 7 { DUP } ; DIG 8 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR ;
                                               TRANSFER_TOKENS ;
                                               CONS }
                                             { NIL operation ;
                                               { DIP 2 { DUP } ; DIG 3 } ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               CONTRACT %mint
                                                 (pair (pair bytes (pair address nat)) (pair (pair string address) (pair string address))) ;
                                               IF_NONE { PUSH int 227 ; FAILWITH } {} ;
                                               PUSH mutez 0 ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               GET 5 ;
                                               { DIP 4 { DUP } ; DIG 5 } ;
                                               GET 6 ;
                                               PAIR ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               { DIP 5 { DUP } ; DIG 6 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               GET 3 ;
                                               CAR ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               CAR ;
                                               GET 4 ;
                                               PAIR ;
                                               PAIR ;
                                               PUSH nat 1 ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 5 ;
                                               CDR ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               PAIR ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 3 ;
                                               GET 3 ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               GET 6 ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               { DIP 6 { DUP } ; DIG 7 } ;
                                               CAR ;
                                               CAR ;
                                               GET ;
                                               IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               TRANSFER_TOKENS ;
                                               CONS } ;
                                          DIG 2 ;
                                          { { DUP ; CAR ; DIP { CDR } } } ;
                                          SWAP ;
                                          { { DUP ; CAR ; DIP { CDR } } } ;
                                          { { DUP ; CAR ; DIP { CDR } } } ;
                                          SWAP ;
                                          { { DUP ; CAR ; DIP { CDR } } } ;
                                          SWAP ;
                                          DUP ;
                                          { DIP 7 { DUP } ; DIG 8 } ;
                                          GET 6 ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { PUSH int 198 ; FAILWITH } {} ;
                                          PUSH (option nat) (Some 2) ;
                                          { DIP 9 { DUP } ; DIG 10 } ;
                                          CAR ;
                                          CAR ;
                                          UPDATE ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          SWAP ;
                                          DUP ;
                                          { DIP 7 { DUP } ; DIG 8 } ;
                                          GET 6 ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { PUSH int 199 ; FAILWITH } {} ;
                                          NONE (pair (pair (pair bytes (set bytes)) (pair (set string) string))
                                                     (pair (pair address (set bytes)) (pair address string))) ;
                                          DIG 9 ;
                                          CAR ;
                                          CAR ;
                                          UPDATE ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          SWAP }
                                        { DROP ; NIL operation } }
                                   { DROP ; NIL operation } } }
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                GET 3 ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {}
                                   { PUSH string "WrongCondition: sp.sender == self.data.adminAddress" ;
                                     FAILWITH } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                CAR ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                CAR ;
                                DIG 4 ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                PAIR }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "Only NFTContract can update tokenId" ; FAILWITH } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                CAR ;
                                SOME ;
                                DIG 6 ;
                                CDR ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR } ;
                            NIL operation } ;
                        PAIR } } ;
             PAIR ;
             DUP ;
             CAR ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIG 3 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CDR ;
             SOME ;
             DIG 6 ;
             GET 5 ;
             UPDATE ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CONTRACT %addAccountToWhitelist address ;
             IF_NONE { PUSH int 318 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             CDR ;
             TRANSFER_TOKENS ;
             CONS }
           { SENDER ;
             { DIP 2 { DUP } ; DIG 3 } ;
             GET 3 ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: self.data.factoryAdmin == sp.sender" ;
                  FAILWITH } ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
