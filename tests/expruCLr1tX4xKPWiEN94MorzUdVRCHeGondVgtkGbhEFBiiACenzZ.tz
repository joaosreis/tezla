{ storage
    (pair (map %entries nat address) (pair (nat %max_tickets) (mutez %ticket_price))) ;
  parameter unit ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(0)" ; FAILWITH } ;
         PUSH int 0 ;
         PUSH mutez 1 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CDR ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         PUSH mutez 1 ;
         AMOUNT ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         EDIV ;
         IF_NONE { PUSH int 43 ; FAILWITH } { CAR } ;
         PUSH mutez 1 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         CDR ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         MUL ;
         PUSH mutez 1 ;
         AMOUNT ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         SUB ;
         COMPARE ;
         EQ ;
         IF {}
            { PUSH string
                   "WrongCondition: (sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some()) - (sp.fst(sp.ediv(self.data.ticket_price, sp.mutez(1)).open_some()) * (sp.fst(sp.ediv(sp.amount, sp.mutez(1)).open_some()) // sp.fst(sp.ediv(self.data.ticket_price, sp.mutez(1)).open_some())))) == 0" ;
              FAILWITH } ;
         NIL operation ;
         PUSH mutez 1 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         CDR ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         PUSH mutez 1 ;
         AMOUNT ;
         EDIV ;
         IF_NONE { PUSH int 48 ; FAILWITH } {} ;
         CAR ;
         EDIV ;
         IF_NONE { PUSH int 60 ; FAILWITH } { CAR } ;
         PUSH nat 0 ;
         DUP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         GT ;
         LOOP { DIG 4 ;
                DUP ;
                DUG 5 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DIG 6 ;
                CAR ;
                SIZE ;
                SENDER ;
                SOME ;
                SWAP ;
                UPDATE ;
                PAIR ;
                DUP ;
                CDR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 6 ;
                CAR ;
                SIZE ;
                COMPARE ;
                EQ ;
                IF { DIG 2 ;
                     DIG 4 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     CAR ;
                     PUSH timestamp "0" ;
                     NOW ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 34 ; FAILWITH } {} ;
                     EDIV ;
                     IF_NONE { PUSH int 43 ; FAILWITH } { CAR } ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     CAR ;
                     MUL ;
                     PUSH timestamp "0" ;
                     NOW ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 34 ; FAILWITH } {} ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                     GET ;
                     IF_NONE { PUSH int 72 ; FAILWITH } {} ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 72 ; FAILWITH } {} ;
                     PUSH mutez 1 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     CAR ;
                     PUSH mutez 1 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CDR ;
                     CDR ;
                     EDIV ;
                     IF_NONE { PUSH int 48 ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUG 2 ;
                     DIG 4 ;
                     CDR ;
                     EMPTY_MAP nat address ;
                     PAIR ;
                     DUG 4 }
                   {} ;
                PUSH nat 1 ;
                ADD ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT } ;
         DROP 2 ;
         SWAP ;
         DROP ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
