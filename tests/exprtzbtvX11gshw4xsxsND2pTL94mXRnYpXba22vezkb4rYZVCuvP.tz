{ parameter
    (or (pair %launchExchange address address)
        (pair %tokenToExchangeLookup (pair address address) nat)) ;
  storage
    (pair (pair (big_map %launchExchange
                   nat
                   (lambda
                      (pair (pair address address)
                            (pair (pair (big_map %exchangeToToken address address) (list %tokenList address))
                                  (big_map %tokenToExchange address address)))
                      (pair (pair (big_map %exchangeToToken address address) (list %tokenList address))
                            (big_map %tokenToExchange address address))))
                (pair %storage
                   (pair (big_map %exchangeToToken address address) (list %tokenList address))
                   (big_map %tokenToExchange address address)))
          (big_map %tokenToExchangeLookup
             nat
             (lambda
                (pair (pair address address)
                      (pair nat
                            (pair (pair (big_map %exchangeToToken address address) (list %tokenList address))
                                  (big_map %tokenToExchange address address))))
                (list operation)))) ;
  code { DUP ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             PUSH nat 0 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             EXEC ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DIP { DROP 4 } ;
             NIL operation ;
             PAIR ;
             DIP { DROP } }
           { DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             DUP ;
             CDR ;
             PUSH nat 0 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             SWAP ;
             EXEC ;
             DIP { DROP 3 } ;
             PAIR ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
