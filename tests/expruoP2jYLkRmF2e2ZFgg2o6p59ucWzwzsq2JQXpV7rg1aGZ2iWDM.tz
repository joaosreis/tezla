{ parameter
    (or (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
                (or %assets
                   (or (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (list %transfer
                          (pair (address %from_)
                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                          (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
            (or (pair %mint
                   (address %owner)
                   (pair %token (nat %token_id) (map %token_info string bytes)))
                (pair %token_metadata
                   (list %token_ids nat)
                   (contract %callback (list (pair (nat %token_id) (map %token_info string bytes)))))))
        (pair %token_owners
           (list %token_ids nat)
           (contract %callback (list (pair (address %owner) (nat %token_id)))))) ;
  storage
    (pair (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
                (pair %assets
                   (big_map %ledger nat address)
                   (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
          (pair (big_map %metadata string bytes) (nat %next_token_id))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ; CDR ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SOME ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     UNPAIR ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             MAP { DUP 3 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DROP ; DUP 5 ; FAILWITH }
                                     { SWAP ;
                                       DUP ;
                                       CAR ;
                                       DIG 2 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       SWAP ;
                                       PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DROP 2 ; SWAP ; DROP ; PUSH string "FA2_TX_DENIED" ; FAILWITH } }
                       { DROP 2 ; SWAP ; DROP ; PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH } ;
                     UNPAIR ;
                     DUP 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "DUP_MINT_TOKEN_ID" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP 6 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     PAIR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP 6 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 7 ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP 8 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 8 ;
                     CAR ;
                     PAIR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 5 ;
                     CDR ;
                     DIG 5 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ; SWAP ; GET ; IF_NONE { DUP 4 ; FAILWITH } {} } ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             CAR ;
             MAP { DUP 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { DROP ; DUP 4 ; FAILWITH } { PAIR } } ;
             DIG 2 ;
             DROP ;
             DIG 3 ;
             DROP ;
             SWAP ;
             CDR ;
             PUSH mutez 0 ;
             DIG 2 ;
             TRANSFER_TOKENS ;
             SWAP ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } } }
