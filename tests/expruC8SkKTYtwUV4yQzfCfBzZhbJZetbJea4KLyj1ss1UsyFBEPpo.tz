{ parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (list %transfer
               (pair (address %from_)
                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
        (list %update_operators
           (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
               (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (big_map %ledger (pair address nat) nat)
                (big_map %operators (pair address (pair address nat)) unit))
          (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                (big_map %token_total_supply nat nat))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 MAP { DUP 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       MEM ;
                       NOT ;
                       IF { DROP ; DUP 6 ; FAILWITH }
                          { DUP 3 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DUP 3 ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            DUP 7 ;
                            SWAP ;
                            EXEC ;
                            SWAP ;
                            PAIR } } ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 SWAP ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 LAMBDA
                   (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                   unit
                   { UNPAIR ;
                     UNPAIR ;
                     DIG 2 ;
                     UNPAIR ;
                     DUP 4 ;
                     DUP 4 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP 4 ; UNIT }
                        { DIG 3 ;
                          PAIR ;
                          DIG 2 ;
                          PAIR ;
                          MEM ;
                          IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                 DIG 2 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 ITER { DUP ;
                        DUG 2 ;
                        CDR ;
                        ITER { SWAP ;
                               DUP 5 ;
                               CDR ;
                               CAR ;
                               DUP 3 ;
                               GET 3 ;
                               MEM ;
                               NOT ;
                               IF { DROP 2 ; DUP 6 ; FAILWITH }
                                  { DUP 5 ;
                                    CAR ;
                                    CDR ;
                                    DUP 3 ;
                                    GET 3 ;
                                    PAIR ;
                                    SENDER ;
                                    DUP 5 ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    DUP 5 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 4 ;
                                    PAIR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 3 ;
                                    DUP 4 ;
                                    CAR ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    DIG 3 ;
                                    DIG 3 ;
                                    PAIR ;
                                    DUP 3 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DUP 10 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 2 ;
                                    SWAP ;
                                    SUB ;
                                    ISNAT ;
                                    IF_NONE
                                      { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                      { PUSH nat 0 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                           { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 4 ;
                                    PAIR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 3 ;
                                    DIG 2 ;
                                    CAR ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    DIG 3 ;
                                    DIG 3 ;
                                    PAIR ;
                                    DUP 3 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DUP 9 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 2 ;
                                    ADD ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                       { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                        SWAP ;
                        DROP } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             SENDER ;
             DUG 2 ;
             ITER { SWAP ;
                    DUP 3 ;
                    DUP 3 ;
                    IF_LEFT {} {} ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                    SWAP ;
                    IF_LEFT
                      { SWAP ;
                        UNIT ;
                        SOME ;
                        DUP 3 ;
                        GET 4 ;
                        DUP 4 ;
                        GET 3 ;
                        PAIR ;
                        DIG 3 ;
                        CAR ;
                        PAIR ;
                        UPDATE }
                      { DUP ;
                        DUG 2 ;
                        GET 4 ;
                        DUP 3 ;
                        GET 3 ;
                        PAIR ;
                        DIG 2 ;
                        CAR ;
                        PAIR ;
                        NONE unit ;
                        SWAP ;
                        UPDATE } } ;
             SWAP ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }
