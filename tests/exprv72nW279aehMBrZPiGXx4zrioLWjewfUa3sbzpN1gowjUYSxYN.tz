{ parameter
    (or (pair %create
           (pair (signature %_factoryAdminSignature)
                 (pair (timestamp %_timestamp) (address %adminAddress)))
           (pair (key %admin_pk) (pair (string %groupId) (int %minSignerRequire))))
        (address %setNFTAddres)) ;
  storage
    (pair (pair (address %NFTAddress) (big_map %OracleList string address))
          (pair (address %factoryAdmin) (key %factoryAdminPublicKey))) ;
  code { CAST (pair (or (pair (pair signature (pair timestamp address)) (pair key (pair string int))) address)
                    (pair (pair address (big_map string address)) (pair address key))) ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             MEM ;
             IF { PUSH string "group id exist" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 6 ;
             PAIR ;
             SWAP ;
             DUP ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 3 ;
             GET 3 ;
             PAIR ;
             PAIR ;
             PACK ;
             BLAKE2B ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             GET 4 ;
             CHECK_SIGNATURE ;
             IF {} { PUSH string "verify hash: Invalid signature" ; FAILWITH } ;
             PUSH (pair (pair (map string address) (map bytes string)) (pair (set bytes) (set bytes)))
                  (Pair (Pair {} {}) (Pair {} {})) ;
             SWAP ;
             DUP ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 3 ;
             GET 3 ;
             PAIR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             GET 4 ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (pair %insertWhitelistedAddress
                          (pair (string %_alias) (timestamp %_timestamp))
                          (pair (address %address)
                                (pair (signature %adminSignature) (key %pubKeyToBeWhitelisted))))
                       (or (pair %issueCert
                              (pair (bytes %_hash) (pair (address %_publicSignerHash) (signature %_sigS)))
                              (pair (key %_signerPublicKey) (pair (string %_toAlias) (string %_tokenSymbol))))
                           (pair %setAdmin (address %adminAddress) (key %admin_pk)))) ;
                 storage
                   (pair (pair (pair (address %NFTAddress) (address %adminAddress))
                               (pair (key %adminPublicKey) (string %groupId)))
                         (pair (pair (map %signerAddress string address) (map %signerAddressAlias bytes string))
                               (pair (set %whiteListedAddresses bytes) (set %whitelist_msg_hashed bytes)))) ;
                 code { CAST (pair (or (pair (pair string timestamp) (pair address (pair signature key)))
                                       (or (pair (pair bytes (pair address signature)) (pair key (pair string string)))
                                           (pair address key)))
                                   (pair (pair (pair address address) (pair key string))
                                         (pair (pair (map string address) (map bytes string)) (pair (set bytes) (set bytes))))) ;
                        { { DUP ; CAR ; DIP { CDR } } } ;
                        IF_LEFT
                          { SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 5 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 6 ;
                            PACK ;
                            MEM ;
                            IF { PUSH string "Already whitelisted" ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 6 ;
                            SWAP ;
                            DUP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 3 ;
                            GET 6 ;
                            PAIR ;
                            DIG 2 ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 4 ;
                            GET 3 ;
                            PAIR ;
                            PAIR ;
                            PACK ;
                            BLAKE2B ;
                            MEM ;
                            IF { PUSH string "signature already exist" ; FAILWITH } {} ;
                            DUP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 6 ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 3 ;
                            GET 3 ;
                            PAIR ;
                            PAIR ;
                            PACK ;
                            BLAKE2B ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 5 ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            CAR ;
                            GET 3 ;
                            CHECK_SIGNATURE ;
                            IF {} { PUSH string "verify hash: Invalid signature" ; FAILWITH } ;
                            SWAP ;
                            { { DUP ; CAR ; DIP { CDR } } } ;
                            SWAP ;
                            { { DUP ; CAR ; DIP { CDR } } } ;
                            { { DUP ; CAR ; DIP { CDR } } } ;
                            { DIP 4 { DUP } ; DIG 5 } ;
                            GET 3 ;
                            SOME ;
                            { DIP 5 { DUP } ; DIG 6 } ;
                            CAR ;
                            CAR ;
                            UPDATE ;
                            SWAP ;
                            { DIP 4 { DUP } ; DIG 5 } ;
                            CAR ;
                            CAR ;
                            SOME ;
                            { DIP 5 { DUP } ; DIG 6 } ;
                            GET 6 ;
                            PACK ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUP ;
                            GET 5 ;
                            PUSH bool True ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            GET 6 ;
                            PACK ;
                            UPDATE ;
                            UPDATE 5 ;
                            DUP ;
                            GET 6 ;
                            PUSH bool True ;
                            DIG 3 ;
                            DUP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 5 ;
                            GET 6 ;
                            PAIR ;
                            DIG 4 ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            GET 3 ;
                            PAIR ;
                            PAIR ;
                            PACK ;
                            BLAKE2B ;
                            UPDATE ;
                            UPDATE 6 ;
                            NIL operation }
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                PACK ;
                                MEM ;
                                IF {} { PUSH string "signer not whitelisted" ; FAILWITH } ;
                                DUP ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                GET 3 ;
                                CHECK_SIGNATURE ;
                                IF {} { PUSH string "verify hash: Invalid Signature" ; FAILWITH } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                MEM ;
                                IF {} { PUSH string "No to address found" ; FAILWITH } ;
                                NIL operation ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CONTRACT %mint
                                  (pair (pair bytes (pair address nat)) (pair (map string bytes) (pair address string))) ;
                                IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                                PUSH mutez 0 ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                GET 6 ;
                                SELF_ADDRESS ;
                                PAIR ;
                                EMPTY_MAP string bytes ;
                                SELF_ADDRESS ;
                                PACK ;
                                SOME ;
                                PUSH string "oracle" ;
                                UPDATE ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                GET 6 ;
                                PACK ;
                                SOME ;
                                PUSH string "assetId" ;
                                UPDATE ;
                                { DIP 5 { DUP } ; DIG 6 } ;
                                CAR ;
                                CAR ;
                                SOME ;
                                PUSH string "cid" ;
                                UPDATE ;
                                PAIR ;
                                PUSH nat 1 ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                GET 3 ;
                                CAR ;
                                { DIP 6 { DUP } ; DIG 7 } ;
                                GET 5 ;
                                GET ;
                                IF_NONE { PUSH int 98 ; FAILWITH } {} ;
                                PAIR ;
                                DIG 5 ;
                                CAR ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                TRANSFER_TOKENS ;
                                CONS }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {}
                                   { PUSH string "WrongCondition: sp.sender == self.data.adminAddress" ;
                                     FAILWITH } ;
                                SWAP ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                { { DUP ; CAR ; DIP { CDR } } } ;
                                CAR ;
                                { DIP 3 { DUP } ; DIG 4 } ;
                                CAR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                NIL operation } } ;
                        PAIR } } ;
             PAIR ;
             DUP ;
             CAR ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIG 3 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CDR ;
             SOME ;
             DIG 6 ;
             GET 5 ;
             UPDATE ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CONTRACT %addAccountToWhitelist address ;
             IF_NONE { PUSH int 223 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             CDR ;
             TRANSFER_TOKENS ;
             CONS }
           { SENDER ;
             { DIP 2 { DUP } ; DIG 3 } ;
             GET 3 ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: self.data.factoryAdmin == sp.sender" ;
                  FAILWITH } ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
