{ parameter
    (or (or (pair %getBalance (address %owner) (contract int))
            (pair %mint (address %_to) (int %value)))
        (pair %transfer (address %_from) (pair (address %to) (int %amount)))) ;
  storage (pair (address %owner) (map %tokens address int)) ;
  code { DUP ;
         CDR ;
         DUG 1 ;
         CAR ;
         DIG 0 ;
         IF_LEFT
           { IF_LEFT
               { NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 2 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PUSH mutez 0 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 GET 2 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIP 3 { DROP } ;
                 DUG 2 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } }
               { NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 2 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 GET 1 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only owner can mint" ; FAILWITH } {} ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DUP ;
                 GET 2 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 GET 2 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 ADD ;
                 SOME ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 UPDATE ;
                 UPDATE 2 ;
                 DIP 5 { DROP } ;
                 DUG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } } }
           { NIL operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET 1 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET 3 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET 4 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             GET 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH int 0 } {} ;
             PUSH int 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SUB ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DUP ;
             GET 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SUB ;
             SOME ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             UPDATE ;
             UPDATE 2 ;
             DIP 7 { DROP } ;
             DUG 6 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             GET 2 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             GET ;
             IF_NONE { PUSH int 0 } {} ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DUP ;
             GET 2 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             ADD ;
             SOME ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             UPDATE ;
             UPDATE 2 ;
             DIP 8 { DROP } ;
             DUG 7 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } ;
             DIP 1 { DROP } } } }
