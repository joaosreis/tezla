{ parameter
    (or (or (or (pair %claimFees string string) (pair %ownerWithdraw string (pair address nat)))
            (or (pair %provideLiquidity string (pair string (pair address (pair address nat))))
                (pair %setOwnerAddress string address)))
        (or (or (pair %transferAmountToContract
                   string
                   (pair bytes (pair string (pair string (pair address nat)))))
                (pair %withdrawal
                   string
                   (pair string (pair string (pair bytes (pair string (pair string (pair address nat))))))))
            (pair %withdrawalLiquidity string (pair string (pair address (pair address nat)))))) ;
  storage (map string address) ;
  code { LAMBDA
           (pair string (map string address))
           address
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "No entry found." ; FAILWITH } {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         DIG 2 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     CONTRACT %claimFees string ;
                     IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     CDR ;
                     CDR ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     PUSH string "XTZ" ;
                     DIG 5 ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          CONTRACT %ownerWithdraw nat ;
                          IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CONTRACT %ownerWithdraw (pair address nat) ;
                          IF_NONE { PUSH string "not a correct contract 2" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 5 ;
                          DIG 4 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS } ;
                     PAIR } }
               { IF_LEFT
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     PUSH string "XTZ" ;
                     DIG 5 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 4 ;
                          DROP ;
                          SWAP ;
                          CONTRACT %provideLiquidity string ;
                          IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                          AMOUNT ;
                          DIG 4 ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CONTRACT %provideLiquidity (pair string (pair address (pair address nat))) ;
                          IF_NONE { PUSH string "not a correct contract 2" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          CAR ;
                          DIG 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          DIG 4 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS } ;
                     PAIR }
                   { PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     CONTRACT %setOwnerAddress address ;
                     IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CDR ;
                     DUP ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     PUSH string "XTZ" ;
                     DIG 7 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 6 ;
                          DROP ;
                          SWAP ;
                          CONTRACT %transferAmountToContract (pair bytes (pair string string)) ;
                          IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                          AMOUNT ;
                          DIG 4 ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CONTRACT %transferAmountToContract
                            (pair bytes (pair string (pair string (pair address (pair address nat))))) ;
                          IF_NONE { PUSH string "not a correct contract 2" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          DIG 9 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DIG 4 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS } ;
                     PAIR }
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CDR ;
                     DUP ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     PAIR ;
                     DIG 10 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     PUSH string "XTZ" ;
                     DIG 10 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 9 ;
                          DROP ;
                          SWAP ;
                          CONTRACT %withdrawal
                            (pair string (pair string (pair bytes (pair string (pair string nat))))) ;
                          IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CONTRACT %withdrawal
                            (pair string
                                  (pair string (pair bytes (pair string (pair string (pair address (pair address nat))))))) ;
                          IF_NONE { PUSH string "not a correct contract 2" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 5 ;
                          DIG 11 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 4 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          DIG 5 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS } ;
                     PAIR } }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 NIL operation ;
                 PUSH string "XTZ" ;
                 DIG 6 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 5 ;
                      DROP ;
                      SWAP ;
                      CONTRACT %withdrawalLiquidity (pair string nat) ;
                      IF_NONE { PUSH string "not a correct contract 1" ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DIG 5 ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CONTRACT %withdrawalLiquidity (pair string (pair address (pair address nat))) ;
                      IF_NONE { PUSH string "not a correct contract 2" ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DIG 5 ;
                      DIG 7 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      DIG 4 ;
                      PAIR ;
                      DIG 5 ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      CONS } ;
                 PAIR } } } }
