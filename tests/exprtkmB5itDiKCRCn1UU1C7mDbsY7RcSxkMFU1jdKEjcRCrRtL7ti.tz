{ storage (map int (map int int)) ;
  parameter (or (or (unit %bar) (unit %glider)) (or (unit %reset) (unit %run))) ;
  code { PUSH (map int (map int int))
              { Elt 0
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 1
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 2
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 3
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 4
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 5
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 6
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 7
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 8
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } ;
                Elt 9
                    { Elt 0 0 ;
                      Elt 1 0 ;
                      Elt 2 0 ;
                      Elt 3 0 ;
                      Elt 4 0 ;
                      Elt 5 0 ;
                      Elt 6 0 ;
                      Elt 7 0 ;
                      Elt 8 0 ;
                      Elt 9 0 } } ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   PUSH (list int) { 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 } ;
                   ITER { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DUP ;
                          PUSH int 5 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                          PUSH (option int) (Some 1) ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          UPDATE ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DUG 3 ;
                          DROP ;
                          SWAP ;
                          DROP } ;
                   DROP } }
               { { DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   PUSH int 3 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   PUSH (option int) (Some 1) ;
                   PUSH int 3 ;
                   UPDATE ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   PUSH int 4 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   PUSH (option int) (Some 1) ;
                   PUSH int 4 ;
                   UPDATE ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   PUSH int 5 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   PUSH (option int) (Some 1) ;
                   PUSH int 2 ;
                   UPDATE ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   PUSH int 5 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   PUSH (option int) (Some 1) ;
                   PUSH int 3 ;
                   UPDATE ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   PUSH int 5 ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                   PUSH (option int) (Some 1) ;
                   PUSH int 4 ;
                   UPDATE ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUG 2 ;
                   DROP 2 } } }
           { IF_LEFT
               { { DIG 2 ; DUP ; DUG 3 ; DUG 2 ; DROP 2 } }
               { { DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   PUSH (list int) { 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 } ;
                   ITER { PUSH (list int) { 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 } ;
                          ITER { PUSH int 0 ;
                                 PUSH int -1 ;
                                 PUSH bool True ;
                                 LOOP { DUP ;
                                        PUSH int 0 ;
                                        SWAP ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        ADD ;
                                        COMPARE ;
                                        GE ;
                                        IF { { DUP ; PUSH int 10 ; SWAP ; DIG 5 ; DUP ; DUG 6 ; ADD ; COMPARE ; LT } }
                                           { PUSH bool False } ;
                                        IF { { PUSH int -1 ;
                                               PUSH bool True ;
                                               LOOP { DUP ;
                                                      PUSH int 0 ;
                                                      SWAP ;
                                                      DIG 5 ;
                                                      DUP ;
                                                      DUG 6 ;
                                                      ADD ;
                                                      COMPARE ;
                                                      GE ;
                                                      IF { { DUP ; PUSH int 10 ; SWAP ; DIG 5 ; DUP ; DUG 6 ; ADD ; COMPARE ; LT } }
                                                         { PUSH bool False } ;
                                                      IF { { PUSH int 0 ;
                                                             DIG 2 ;
                                                             DUP ;
                                                             DUG 3 ;
                                                             COMPARE ;
                                                             NEQ ;
                                                             IF { PUSH bool True } { { DUP ; PUSH int 0 ; COMPARE ; NEQ } } ;
                                                             IF { { DIG 2 ;
                                                                    DIG 7 ;
                                                                    DUP ;
                                                                    DUG 8 ;
                                                                    DIG 3 ;
                                                                    DUP ;
                                                                    DUG 4 ;
                                                                    DIG 6 ;
                                                                    DUP ;
                                                                    DUG 7 ;
                                                                    ADD ;
                                                                    GET ;
                                                                    IF_NONE { { PUSH string "Get-item:44" ; FAILWITH } } {} ;
                                                                    DIG 2 ;
                                                                    DUP ;
                                                                    DUG 3 ;
                                                                    DIG 5 ;
                                                                    DUP ;
                                                                    DUG 6 ;
                                                                    ADD ;
                                                                    GET ;
                                                                    IF_NONE { { PUSH string "Get-item:44" ; FAILWITH } } {} ;
                                                                    SWAP ;
                                                                    DUP ;
                                                                    DUG 2 ;
                                                                    ADD ;
                                                                    SWAP ;
                                                                    DROP ;
                                                                    DUG 2 } }
                                                                { {} } } }
                                                         { {} } ;
                                                      PUSH int 1 ;
                                                      ADD ;
                                                      DUP ;
                                                      PUSH int 2 ;
                                                      COMPARE ;
                                                      GT } ;
                                               DROP } }
                                           { {} } ;
                                        PUSH int 1 ;
                                        ADD ;
                                        DUP ;
                                        PUSH int 2 ;
                                        COMPARE ;
                                        GT } ;
                                 DROP ;
                                 PUSH int 0 ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 GET ;
                                 IF_NONE { { PUSH string "Get-item:36" ; FAILWITH } } {} ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 GET ;
                                 IF_NONE { { PUSH string "Get-item:37" ; FAILWITH } } {} ;
                                 COMPARE ;
                                 EQ ;
                                 IF { { DUP ;
                                        PUSH int 3 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { { DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                               PUSH (option int) (Some 1) ;
                                               DIG 5 ;
                                               DUP ;
                                               DUG 6 ;
                                               UPDATE ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               DUG 4 ;
                                               DIG 3 ;
                                               DROP } }
                                           { {} } } }
                                    { { DUP ;
                                        PUSH int 2 ;
                                        SWAP ;
                                        COMPARE ;
                                        GE ;
                                        IF { { DUP ; PUSH int 3 ; SWAP ; COMPARE ; LE } } { PUSH bool False } ;
                                        IF { { DIG 3 ;
                                               DUP ;
                                               DUG 4 ;
                                               DUP ;
                                               DIG 4 ;
                                               DUP ;
                                               DUG 5 ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
                                               PUSH (option int) (Some 1) ;
                                               DIG 5 ;
                                               DUP ;
                                               DUG 6 ;
                                               UPDATE ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               DUG 4 ;
                                               DIG 3 ;
                                               DROP } }
                                           { {} } } } ;
                                 DROP 2 } ;
                          DROP } ;
                   DUG 2 ;
                   DROP 2 } } } ;
         NIL operation ;
         PAIR ;
         SWAP ;
         DROP } }
