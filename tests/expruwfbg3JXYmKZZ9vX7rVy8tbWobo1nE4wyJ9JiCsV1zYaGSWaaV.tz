{ parameter
    (or (or (unit %accept_admin)
            (pair %addupdate_evse (string %pevse_id) (address %pscontract)))
        (or (string %delete_evse) (address %transfer_admin))) ;
  storage
    (pair (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                (address %admin))
          (address %admin_candidate)) ;
  code { LAMBDA
           (pair (pair %0
                    (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                          (address %admin))
                    (address %admin_candidate))
                 (string %1))
           (pair (string %evse_id) (address %scontract))
           { DUP ;
             CDR ;
             DIP { DUP ; CAR ; CAR ; CAR } ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair (pair (pair %0
                          (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                                (address %admin))
                          (address %admin_candidate))
                       (string %1))
                 (pair %2 (string %evse_id) (address %scontract)))
           (pair (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                       (address %admin))
                 (address %admin_candidate))
           { DUP ;
             CAR ;
             CAR ;
             DUP ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             CDR ;
             DIP { DIP 2 { DUP } ;
                   DIG 2 ;
                   CDR ;
                   SOME ;
                   DIP { DIP { DUP } ; SWAP ; CAR ; CAR } } ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair (pair %0
                    (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                          (address %admin))
                    (address %admin_candidate))
                 (pair %1 (string %evse_id) (address %scontract)))
           (pair (pair (map %addressbook_assets string (pair (string %evse_id) (address %scontract)))
                       (address %admin))
                 (address %admin_candidate))
           { DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP } ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIP 4 { DUP } ;
             DIG 4 ;
             DIP 3 { DUP } ;
             DIG 3 ;
             DIP { DIP 4 { DUP } ; DIG 4 ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             DIP { DROP 6 } } ;
         DIP 3 { DUP } ;
         DIG 3 ;
         CDR ;
         DIP 4 { DUP } ;
         DIG 4 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 DUP ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CDR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 DIP { DIP 7 { DUP } ; DIG 7 } ;
                 PAIR ;
                 DIP { DIP 9 { DUP } ; DIG 9 ; DIP { DIP { DUP } ; SWAP } ; PAIR } ;
                 PAIR ;
                 DIP { DIP 8 { DUP } ; DIG 8 } ;
                 PAIR ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 NIL string ;
                 SWAP ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        CAR ;
                        DIP { DUP ; CAR } ;
                        CONS ;
                        DIP { DROP } } ;
                 DUP ;
                 NIL string ;
                 SWAP ;
                 ITER { SWAP ; PAIR ; DUP ; CDR ; DIP { DUP ; CAR } ; CONS ; DIP { DROP } } ;
                 DUP ;
                 DIP { DROP 2 ; DIP 3 { DUP } ; DIG 3 ; CAR } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 ITER { DROP } ;
                 DROP ;
                 PUSH bool False ;
                 IF { DIP 3 { DUP } ;
                      DIG 3 ;
                      CAR ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP { DUP } ;
                      PAIR ;
                      DIP { DIP 11 { DUP } ; DIG 11 } ;
                      EXEC ;
                      DIP 4 { DUP } ;
                      DIG 4 ;
                      DIP { DIP { DUP } ; SWAP } ;
                      PAIR ;
                      DIP { DUP ; CAR ; DIP { DIP 5 { DUP } ; DIG 5 ; CDR } ; PAIR } ;
                      PAIR ;
                      DIP { DIP 11 { DUP } ; DIG 11 } ;
                      EXEC ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP 3 } }
                    { DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DIP 3 { DUP } ;
                            DIG 3 ;
                            CAR ;
                            DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                            PAIR } ;
                      PAIR ;
                      DIP { DIP 8 { DUP } ; DIG 8 } ;
                      EXEC ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP { DUP } ;
                      SWAP ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP } } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 7 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 2 { DUP } ; DIG 2 ; CAR } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DIP { DUP ; CAR ; CAR ; NONE (pair (string %evse_id) (address %scontract)) } ;
                 UPDATE ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 DIP { DROP 3 } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 5 } }
               { DUP ;
                 DIP { DIP 2 { DUP } ; DIG 2 } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "invalid caller" ; FAILWITH } { PUSH unit Unit } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 CAR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 4 } } ;
             DIP { DROP } } ;
         DIP { DROP 5 } } }
