{ parameter unit ;
  storage (pair (int %r0) (int %r1)) ;
  code { DUP ;
         LAMBDA
           (pair (int %0) (int %1))
           int
           { DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIP { DUP ;
                   CAR ;
                   DIP { DUP ; CDR } ;
                   EDIV ;
                   IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                   CDR ;
                   PUSH nat 0 ;
                   SWAP ;
                   COMPARE ;
                   EQ ;
                   IF { PUSH int 0 } { PUSH int 1 } } ;
             ADD ;
             DIP { DROP } } ;
         SWAP ;
         CDR ;
         PUSH int 3 ;
         PUSH int 5 ;
         PAIR ;
         DIP { DIP { DUP } ; SWAP } ;
         EXEC ;
         SWAP ;
         CDR ;
         SWAP ;
         PAIR ;
         DUP ;
         PUSH int 3 ;
         PUSH int 5 ;
         PAIR ;
         DUP ;
         CAR ;
         NEG ;
         DIP { DUP ; CDR } ;
         PAIR ;
         DIP { DROP ; DIP 2 { DUP } ; DIG 2 } ;
         EXEC ;
         SWAP ;
         CAR ;
         PAIR ;
         DUP ;
         CDR ;
         DIP { PUSH int 1 ; NEG } ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "require failed" ; FAILWITH } { PUSH unit Unit } ;
         DIP { DUP } ;
         SWAP ;
         NIL operation ;
         PAIR ;
         DIP { DROP 5 } } }
