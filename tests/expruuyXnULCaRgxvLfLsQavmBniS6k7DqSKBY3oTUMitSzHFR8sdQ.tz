{ parameter
    (or (or (pair %balance_of
               (contract %contract
                  (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
               (list %requests (pair (address %owner) (nat %token_id))))
            (list %transfer
               (pair (address %from_)
                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
        (list %update_operators
           (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
               (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (big_map %metadata string bytes)
                (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
          (big_map %tokens nat (map address nat))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 MAP { CDR ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       SWAP ;
                       GET ;
                       IF_NONE
                         { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                         { DROP ; PUSH unit Unit } } ;
                 DROP ;
                 DUP ;
                 CDR ;
                 MAP { DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       GET ;
                       IF_NONE
                         { SWAP ; DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                         { DIG 2 ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
                       PAIR } ;
                 SWAP ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 NIL operation ;
                 PAIR ;
                 SWAP ;
                 ITER { SWAP ;
                        SENDER ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CAR ;
                        COMPARE ;
                        NEQ ;
                        IF { PUSH string "not authorized" ; FAILWITH } {} ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        ITER { SWAP ;
                               PAIR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               LAMBDA
                                 (pair address
                                       (pair (pair (list operation) (big_map nat (map address nat))) (pair address (pair nat nat))))
                                 (pair (list operation) (big_map nat (map address nat)))
                                 { DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   SWAP ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CDR ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH string "Token doesnt exist" ; FAILWITH } {} ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   GET ;
                                   IF_NONE { PUSH nat 0 } {} ;
                                   SUB ;
                                   PUSH int 0 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   LT ;
                                   IF { PUSH string "insufficient tokens" ; FAILWITH } {} ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CDR ;
                                   CDR ;
                                   DIG 3 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH nat 0 } {} ;
                                   ADD ;
                                   SOME ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   UPDATE ;
                                   SWAP ;
                                   ABS ;
                                   SOME ;
                                   DIG 5 ;
                                   UPDATE ;
                                   DIG 2 ;
                                   SWAP ;
                                   SOME ;
                                   DIG 3 ;
                                   CDR ;
                                   CAR ;
                                   UPDATE ;
                                   SWAP ;
                                   PAIR } ;
                               SWAP ;
                               APPLY ;
                               SWAP ;
                               EXEC } ;
                        SWAP ;
                        DROP } } }
           { DROP ; PUSH string "not done yet" ; FAILWITH } ;
         UNPAIR ;
         SWAP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         DIG 3 ;
         CAR ;
         CAR ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR } }
