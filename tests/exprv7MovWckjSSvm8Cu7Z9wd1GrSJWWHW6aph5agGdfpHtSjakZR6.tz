{ storage
    (pair (address %admin)
          (map %pixels nat (map nat (pair (string %color) (pair (address %owner) (mutez %price)))))) ;
  parameter
    (or (pair %setPixel (pair (string %color) (address %owner)) (pair (nat %x) (nat %y)))
        (unit %start)) ;
  code { CAST (pair (or (pair (pair string address) (pair nat nat)) unit)
                    (pair address (map nat (map nat (pair string (pair address mutez)))))) ;
         UNPAIR ;
         IF_LEFT
           { DUP ;
             GET 4 ;
             PUSH nat 0 ;
             SWAP ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "WrongCondition: params.y >= 0" ; FAILWITH } ;
             DUP ;
             GET 3 ;
             PUSH nat 0 ;
             SWAP ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "WrongCondition: params.x >= 0" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SIZE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: params.y < sp.len(self.data.pixels)" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             GET ;
             IF_NONE { PUSH int 21 ; FAILWITH } {} ;
             SIZE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             COMPARE ;
             LT ;
             IF {}
                { PUSH string "WrongCondition: params.x < sp.len(self.data.pixels[params.y])" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             GET ;
             IF_NONE { PUSH int 22 ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             GET ;
             IF_NONE { PUSH int 22 ; FAILWITH } {} ;
             GET 4 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF {}
                { PUSH string
                       "WrongCondition: sp.amount > self.data.pixels[params.y][params.x].price" ;
                  FAILWITH } ;
             DUP ;
             CAR ;
             CDR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "WrongCondition: params.owner == sp.sender" ; FAILWITH } ;
             SWAP ;
             DUP ;
             CDR ;
             DUP ;
             DUP 4 ;
             GET 4 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 31 ; FAILWITH } {} ;
             PUSH mutez 1 ;
             SENDER ;
             DUP 7 ;
             CAR ;
             CAR ;
             PAIR 3 ;
             SOME ;
             DIG 5 ;
             GET 3 ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 2 }
           { DROP ;
             DUP ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
             DUP ;
             EMPTY_MAP nat (map nat (pair string (pair address mutez))) ;
             EMPTY_MAP nat (pair string (pair address mutez)) ;
             PUSH mutez 0 ;
             DUP 5 ;
             CAR ;
             PUSH string "FFFFFF" ;
             PAIR 3 ;
             SOME ;
             PUSH nat 0 ;
             UPDATE ;
             PUSH mutez 0 ;
             DUP 5 ;
             CAR ;
             PUSH string "FFFFFF" ;
             PAIR 3 ;
             SOME ;
             PUSH nat 1 ;
             UPDATE ;
             PUSH mutez 0 ;
             DIG 4 ;
             CAR ;
             PUSH string "FFFFFF" ;
             PAIR 3 ;
             SOME ;
             PUSH nat 2 ;
             UPDATE ;
             SOME ;
             PUSH nat 0 ;
             UPDATE ;
             UPDATE 2 } ;
         NIL operation ;
         PAIR } }
