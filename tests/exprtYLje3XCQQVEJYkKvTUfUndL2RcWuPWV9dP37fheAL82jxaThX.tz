{ parameter
    (or (or (pair %configure
               (bool %isActive)
               (map %serviceMap
                  nat
                  (pair (pair (mutez %fee) (nat %interval)) (pair (nat %maxDuration) (string %name)))))
            (or (pair %deposit (nat %service) (option %subscriber address))
                (pair %registerName (int %duration) (pair (string %name) (address %registry)))))
        (or (option %setDelegate key_hash) (or (address %setManager) (unit %withdraw)))) ;
  storage
    (pair (pair (address %admin) (bool %isActive))
          (pair (big_map %registry address (pair (timestamp %expiration) (nat %service)))
                (map %serviceMap
                   nat
                   (pair (pair (mutez %fee) (nat %interval)) (pair (nat %maxDuration) (string %name)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 { CAR ; CAR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUG 2 ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 DROP 2 ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR } ;
                     IF {} { PUSH string "Registry is not active" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MEM ;
                     IF {} { PUSH string "Invalid service" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                     { CAR ; CAR } ;
                     AMOUNT ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Minimum service fee not met" ; FAILWITH } ;
                     SENDER ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                          SWAP ;
                          DROP }
                        {} ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     { CDR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET ;
                     { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                     { CAR ; CAR } ;
                     AMOUNT ;
                     EDIV ;
                     { IF_NONE { PUSH bool False } { DROP ; PUSH bool True } } ;
                     IF { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          { CDR ; CDR } ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                          { CDR ; CAR } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          { CDR ; CDR } ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                          { CAR ; CAR } ;
                          AMOUNT ;
                          EDIV ;
                          { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                          CAR ;
                          COMPARE ;
                          LE ;
                          IF {} { PUSH string "Invalid total duration" ; FAILWITH } ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          NOW ;
                          PUSH int 60 ;
                          DUP ;
                          PUSH int 24 ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          { CDR ; CDR } ;
                          DIG 10 ;
                          DUP ;
                          DUG 11 ;
                          CAR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                          { CAR ; CDR } ;
                          DIG 11 ;
                          DUP ;
                          DUG 12 ;
                          { CDR ; CDR } ;
                          DIG 11 ;
                          DUP ;
                          DUG 12 ;
                          CAR ;
                          GET ;
                          { IF_NONE { PUSH string "Get-item:17" ; FAILWITH } {} } ;
                          { CAR ; CAR } ;
                          AMOUNT ;
                          EDIV ;
                          { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                          CAR ;
                          MUL ;
                          INT ;
                          MUL ;
                          MUL ;
                          MUL ;
                          ADD ;
                          PAIR %expiration %service ;
                          SOME ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 3 ;
                          DIG 2 ;
                          DROP }
                        {} ;
                     DROP 2 ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                     DUP ;
                     { CDR ; CDR } ;
                     NIL operation ;
                     SWAP ;
                     CONTRACT %registerName
                       (pair (int %duration) (pair (string %name) (address %resolver))) ;
                     { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                     AMOUNT ;
                     SELF ;
                     ADDRESS ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     { CDR ; CAR } ;
                     PAIR %name %resolver ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     PAIR %duration ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                 DUP ;
                 NIL operation ;
                 SWAP ;
                 SET_DELEGATE ;
                 CONS ;
                 SWAP ;
                 DROP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     { CAR ; CDR } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Privileged operation" ; FAILWITH } ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT unit ;
                     { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                     BALANCE ;
                     PUSH unit Unit ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DROP } } } ;
         PAIR } }
