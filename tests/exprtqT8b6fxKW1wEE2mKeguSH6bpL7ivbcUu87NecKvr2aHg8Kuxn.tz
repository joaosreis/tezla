{ storage
    (pair (pair (address %admin)
                (pair (nat %all_artworks)
                      (big_map %artworks
                         nat
                         (pair (pair (pair (address %author) (nat %cut)) (pair (nat %edition_cur) (nat %edition_max)))
                               (pair (pair (timestamp %end_timestamp) (address %nft_address))
                                     (pair (nat %price)
                                           (pair (timestamp %start_timestamp) (map %token_metadata string bytes))))))))
          (pair (nat %counter)
                (pair (set %operators address)
                      (big_map %prints
                         nat
                         (list (pair (pair (nat %artwork_id) (address %owner))
                                     (pair (bytes %payment_data) (pair (string %payment_method) (address %user))))))))) ;
  parameter
    (or (or (pair %create_artwork
               (pair (pair (address %author) (nat %cut))
                     (pair (timestamp %end_timestamp) (nat %max_num)))
               (pair (pair (address %nft_address) (nat %price))
                     (pair (timestamp %start_timestamp) (map %token_metadata string bytes))))
            (nat %print))
        (or (pair %request_print
               (pair (nat %artwork_id) (address %owner))
               (pair (bytes %payment_data) (pair (string %payment_method) (address %user))))
            (list %update_operator (pair (address %operator) (bool %valid))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 DUP ;
                 GET 5 ;
                 PUSH int 60 ;
                 DUP ;
                 PUSH int 1 ;
                 MUL ;
                 MUL ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "END_DATE_TOO_SOON" ; FAILWITH } ;
                 DUP ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "END_DATE_TOO_SOON" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 4 ;
                 DUP ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 GET 5 ;
                 PAIR %start_timestamp %token_metadata ;
                 DUP 6 ;
                 GET 3 ;
                 CDR ;
                 PAIR %price ;
                 DIG 5 ;
                 DUP ;
                 GET 3 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 GET 3 ;
                 PAIR %end_timestamp %nft_address ;
                 PAIR ;
                 DUP 6 ;
                 CAR ;
                 GET 4 ;
                 PUSH nat 0 ;
                 PAIR %edition_cur %edition_max ;
                 DIG 6 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR %author %cut ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 GET 3 ;
                 UPDATE ;
                 SWAP ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "OPEN_EDITION_IS_GOING" ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH int 1050 ; FAILWITH } {} ;
                 ITER { DUP ;
                        DUG 2 ;
                        GET 6 ;
                        CONTRACT %unlock (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                        IF_NONE { PUSH int 1052 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        DIG 3 ;
                        DUP ;
                        GET 5 ;
                        SWAP ;
                        DUP ;
                        DUG 5 ;
                        GET 3 ;
                        PAIR %data %method ;
                        DUP 7 ;
                        CAR ;
                        GET 4 ;
                        DUP 7 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        GET 5 ;
                        PAIR %amount ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 6 ;
                        CONTRACT %pay (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                        IF_NONE { PUSH int 1055 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        DIG 3 ;
                        DUP ;
                        GET 5 ;
                        SWAP ;
                        DUP ;
                        DUG 5 ;
                        GET 3 ;
                        PAIR %data %method ;
                        DUP 7 ;
                        CAR ;
                        GET 4 ;
                        DUP 7 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        GET 5 ;
                        PAIR %amount ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        SWAP ;
                        DUP 4 ;
                        UNPAIR ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUP 8 ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH int 1062 ; FAILWITH } {} ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        PUSH nat 1 ;
                        DUP 15 ;
                        CAR ;
                        GET 4 ;
                        DUP 15 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        CAR ;
                        GET 3 ;
                        DUP 16 ;
                        CAR ;
                        GET 4 ;
                        DUP 16 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        CAR ;
                        GET 3 ;
                        DUP 17 ;
                        GET 3 ;
                        PUSH timestamp "1970-01-01T00:00:00Z" ;
                        NOW ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 1049 ; FAILWITH } {} ;
                        ADD ;
                        EDIV ;
                        IF_NONE { PUSH int 1059 ; FAILWITH } { CAR } ;
                        MUL ;
                        DIG 15 ;
                        GET 3 ;
                        PUSH timestamp "1970-01-01T00:00:00Z" ;
                        NOW ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 1049 ; FAILWITH } {} ;
                        ADD ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 1060 ; FAILWITH } {} ;
                        ADD ;
                        PACK ;
                        SOME ;
                        PUSH string "edition" ;
                        UPDATE ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SOME ;
                        SWAP ;
                        UPDATE ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        PAIR ;
                        DUG 3 ;
                        SWAP ;
                        DUP 4 ;
                        CAR ;
                        GET 4 ;
                        DUP 4 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        GET 3 ;
                        CDR ;
                        CONTRACT %mint (pair (address %address) (map %metadata string bytes)) ;
                        IF_NONE { PUSH int 1063 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        DUP 6 ;
                        CAR ;
                        GET 4 ;
                        DUP 6 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        GET 8 ;
                        DIG 4 ;
                        CAR ;
                        CDR ;
                        PAIR %address %metadata ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        DUP 3 ;
                        CAR ;
                        GET 4 ;
                        DUP 3 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        CAR ;
                        CAR ;
                        CAR ;
                        CONTRACT %update_balance (pair (nat %amount) (bool %increase)) ;
                        IF_NONE { PUSH int 1067 ; FAILWITH } {} ;
                        PUSH mutez 0 ;
                        PUSH bool True ;
                        PUSH nat 100 ;
                        DUP 7 ;
                        CAR ;
                        GET 4 ;
                        DUP 7 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        CAR ;
                        CAR ;
                        CDR ;
                        DUP 8 ;
                        CAR ;
                        GET 4 ;
                        DUP 8 ;
                        GET ;
                        IF_NONE { PUSH int 1046 ; FAILWITH } {} ;
                        GET 5 ;
                        MUL ;
                        EDIV ;
                        IF_NONE { PUSH int 1066 ; FAILWITH } { CAR } ;
                        PAIR %amount %increase ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        DIG 2 ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        PUSH nat 1 ;
                        ADD ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        DUG 2 } ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 NONE (list (pair (pair (nat %artwork_id) (address %owner))
                                  (pair (bytes %payment_data) (pair (string %payment_method) (address %user))))) ;
                 DUP 7 ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 NONE (pair (pair (pair (address %author) (nat %cut)) (pair (nat %edition_cur) (nat %edition_max)))
                            (pair (pair (timestamp %end_timestamp) (address %nft_address))
                                  (pair (nat %price)
                                        (pair (timestamp %start_timestamp) (map %token_metadata string bytes))))) ;
                 DIG 6 ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CDR ;
                 PUSH nat 0 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1027 ; FAILWITH } {} ;
                 GET 3 ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "OPEN_EDITION_IS_OVER" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1027 ; FAILWITH } {} ;
                 GET 7 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "OPEN_EDITION_NOT_START" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1027 ; FAILWITH } {} ;
                 CAR ;
                 GET 4 ;
                 DUP 3 ;
                 CAR ;
                 GET 4 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1027 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 LT ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.artworks[params.artwork_id].edition_cur < self.data.artworks[params.artwork_id].edition_max" ;
                      FAILWITH } ;
                 DUP ;
                 GET 6 ;
                 CONTRACT %lock (pair (nat %amount) (pair (bytes %data) (string %method))) ;
                 IF_NONE { PUSH int 1032 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 GET 3 ;
                 PAIR %data %method ;
                 DUP 6 ;
                 CAR ;
                 GET 4 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1027 ; FAILWITH } {} ;
                 GET 5 ;
                 PAIR %amount ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 6 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 MEM ;
                 IF {}
                    { DIG 2 ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      PUSH (option
                              (list (pair (pair (nat %artwork_id) (address %owner))
                                          (pair (bytes %payment_data) (pair (string %payment_method) (address %user))))))
                           (Some {}) ;
                      DUP 7 ;
                      CAR ;
                      CAR ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 2 } ;
                 DUP 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DIG 6 ;
                 GET 6 ;
                 DUP 7 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 1037 ; FAILWITH } {} ;
                 DUP 7 ;
                 CONS ;
                 SOME ;
                 DUP 7 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 1039 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 ITER { DUP ;
                        CDR ;
                        IF { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             PUSH bool True ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             PUSH bool False ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } ;
                 DROP ;
                 NIL operation } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
