{ storage
    (pair (pair (pair (bool %active) (address %admin))
                (pair (pair %currentRound
                         (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                         (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                      (pair %futureRounds
                         (pair (nat %maxSubmissions) (nat %minSubmissions))
                         (pair (int %timeout)
                               (pair (big_map %toActivate nat (set address))
                                     (big_map %toDeactivate nat (set address)))))))
          (pair (pair (pair %latestRoundData
                         (pair (nat %answer) (nat %answeredInRound))
                         (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt))))
                      (big_map %metaData string bytes))
                (pair (big_map %oracles
                         address
                         (pair (nat %endingRound) (pair (int %lastStartedRound) (nat %startingRound))))
                      (pair (pair %previousRound
                               (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                               (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                            (nat %restartDelay))))) ;
  parameter
    (or (or (pair %changeOracles
               (list %added (pair address (pair (option %endingRound nat) (nat %startingRound))))
               (list %removed address))
            (address %latestRoundData))
        (or (pair %setup (bool %active) (address %admin))
            (or (pair %submit nat nat)
                (pair %updateFutureRounds
                   (pair (nat %maxSubmissions) (nat %minSubmissions))
                   (pair (nat %restartDelay) (int %timeout)))))) ;
  code { LAMBDA
           (pair (list %in_param nat)
                 (pair %in_storage
                    (pair (pair (bool %active) (address %admin))
                          (pair (pair %currentRound
                                   (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                                   (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                                (pair %futureRounds
                                   (pair (nat %maxSubmissions) (nat %minSubmissions))
                                   (pair (int %timeout)
                                         (pair (big_map %toActivate nat (set address))
                                               (big_map %toDeactivate nat (set address)))))))
                    (pair (pair (pair %latestRoundData
                                   (pair (nat %answer) (nat %answeredInRound))
                                   (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt))))
                                (big_map %metaData string bytes))
                          (pair (big_map %oracles
                                   address
                                   (pair (nat %endingRound) (pair (int %lastStartedRound) (nat %startingRound))))
                                (pair (pair %previousRound
                                         (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                                         (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                                      (nat %restartDelay))))))
           (pair (list %operations operation)
                 (pair (nat %result)
                       (pair %storage
                          (pair (pair (bool %active) (address %admin))
                                (pair (pair %currentRound
                                         (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                                         (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                                      (pair %futureRounds
                                         (pair (nat %maxSubmissions) (nat %minSubmissions))
                                         (pair (int %timeout)
                                               (pair (big_map %toActivate nat (set address))
                                                     (big_map %toDeactivate nat (set address)))))))
                          (pair (pair (pair %latestRoundData
                                         (pair (nat %answer) (nat %answeredInRound))
                                         (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt))))
                                      (big_map %metaData string bytes))
                                (pair (big_map %oracles
                                         address
                                         (pair (nat %endingRound) (pair (int %lastStartedRound) (nat %startingRound))))
                                      (pair (pair %previousRound
                                               (pair (set %activeOracles address) (pair (nat %maxSubmissions) (nat %minSubmissions)))
                                               (pair (timestamp %startedAt) (pair (map %submissions address nat) (int %timeout))))
                                            (nat %restartDelay)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             PUSH nat 0 ;
             PUSH nat 2 ;
             DUP 5 ;
             CAR ;
             SIZE ;
             EDIV ;
             IF_NONE { PUSH int 139 ; FAILWITH } { CAR } ;
             EMPTY_MAP nat nat ;
             DUP 6 ;
             CAR ;
             SIZE ;
             PUSH nat 2 ;
             DUP 4 ;
             MUL ;
             COMPARE ;
             EQ ;
             DUP 7 ;
             CAR ;
             ITER { DUP 3 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    MEM ;
                    IF { DIG 2 ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 144 ; FAILWITH } {} ;
                         PUSH nat 1 ;
                         ADD ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP }
                       { DIG 2 ; PUSH (option nat) (Some 1) ; DIG 2 ; UPDATE ; SWAP } } ;
             PUSH nat 0 ;
             DUP 3 ;
             ITER { DUP 3 ;
                    IF { DUP 5 ;
                         DUP 3 ;
                         COMPARE ;
                         LT ;
                         IF { DIG 5 ; DROP ; DUP ; CAR ; DUG 5 }
                            { DIG 2 ;
                              DROP ;
                              DUP ;
                              CAR ;
                              DIG 5 ;
                              ADD ;
                              DUG 4 ;
                              PUSH nat 2 ;
                              DIG 5 ;
                              EDIV ;
                              IF_NONE { PUSH int 154 ; FAILWITH } { CAR } ;
                              DUG 4 ;
                              PUSH bool False ;
                              DUG 2 } ;
                         CDR ;
                         ADD }
                       { DUP 5 ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DIG 5 ; DROP ; DUP ; CAR ; DUG 5 ; CDR ; ADD } { DROP } } } ;
             DROP 4 ;
             DIG 3 ;
             DROP ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Aggregator_NotAdmin" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 ITER { DUP 3 ;
                        GET 5 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        MEM ;
                        IF { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             NONE (pair (nat %endingRound) (pair (int %lastStartedRound) (nat %startingRound))) ;
                             DIG 5 ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DROP } } ;
                 DUP ;
                 CAR ;
                 ITER { DUP ;
                        UNPAIR ;
                        DIG 4 ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        SWAP ;
                        UNPAIR ;
                        DUP 6 ;
                        CDR ;
                        PUSH int 0 ;
                        PAIR %lastStartedRound %startingRound ;
                        PUSH nat 4294967295 ;
                        PAIR %endingRound ;
                        SOME ;
                        DUP 6 ;
                        UPDATE ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        SWAP ;
                        PAIR ;
                        DUP ;
                        DUG 5 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        DUP 3 ;
                        CDR ;
                        COMPARE ;
                        LT ;
                        IF { DIG 4 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             PUSH bool True ;
                             DUP 8 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             DUG 4 }
                           {} ;
                        PUSH nat 1 ;
                        DUP 6 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 344 ; FAILWITH } {} ;
                        DUP 3 ;
                        CDR ;
                        COMPARE ;
                        LT ;
                        IF { DIG 4 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             PUSH bool True ;
                             DUP 9 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUG 4 }
                           {} ;
                        DUP 5 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        DUP 3 ;
                        CDR ;
                        COMPARE ;
                        GT ;
                        IF { DIG 4 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DUP ;
                             DUP 10 ;
                             CDR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 347 ; FAILWITH } {} ;
                             PUSH bool True ;
                             DUP 11 ;
                             UPDATE ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             DUG 4 }
                           {} ;
                        PUSH nat 4294967295 ;
                        DUP 6 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        COMPARE ;
                        GT ;
                        IF { DIG 4 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             PUSH bool False ;
                             DUP 8 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             DUG 4 }
                           {} ;
                        PUSH nat 4294967295 ;
                        PUSH nat 1 ;
                        DUP 7 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH int 350 ; FAILWITH } {} ;
                        COMPARE ;
                        GT ;
                        IF { DIG 4 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             PUSH bool False ;
                             DUP 9 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUG 4 }
                           {} ;
                        PUSH nat 4294967295 ;
                        DUP 6 ;
                        CDR ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        COMPARE ;
                        LT ;
                        IF { SWAP ;
                             DROP ;
                             SWAP ;
                             DROP ;
                             DIG 2 ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             PUSH nat 4294967295 ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 353 ; FAILWITH } {} ;
                             PUSH bool True ;
                             DIG 10 ;
                             UPDATE ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP }
                           { DROP 3 } } ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 NIL operation }
               { DIG 2 ;
                 DROP ;
                 CONTRACT
                   (pair (pair (nat %answer) (nat %answeredInRound))
                         (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt)))) ;
                 IF_NONE
                   { PUSH string
                          "Wrong Interface: Could not resolve proxy transmitLatestRoundData entry-point." ;
                     FAILWITH }
                   {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Aggregator_NotAdmin" ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 CAR ;
                 DIG 3 ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation }
               { IF_LEFT
                   { DUP ;
                     UNPAIR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     IF {} { PUSH string "WrongCondition: self.data.active" ; FAILWITH } ;
                     DUP 4 ;
                     GET 5 ;
                     SENDER ;
                     MEM ;
                     IF {} { PUSH string "Aggregator_NotOracle" ; FAILWITH } ;
                     DUP ;
                     DUP 5 ;
                     GET 5 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 247 ; FAILWITH } {} ;
                     GET 4 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "Aggregator_NotYetEnabledOracle" ; FAILWITH } ;
                     DUP ;
                     DUP 5 ;
                     GET 5 ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 248 ; FAILWITH } {} ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Aggregator_NotLongerAllowedOracle" ; FAILWITH } ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 249 ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Aggregator_PastRound" ; FAILWITH } ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "Aggregator_FutureRound" ; FAILWITH } ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 251 ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          SENDER ;
                          MEM ;
                          IF { PUSH string "Aggregator_SubmittedInCurrent" ; FAILWITH } {} ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          SENDER ;
                          MEM ;
                          IF { PUSH string "Aggregator_AlreadySubmittedForThisRound" ; FAILWITH } {} ;
                          SWAP ;
                          DUP ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          SIZE ;
                          COMPARE ;
                          LT ;
                          IF {} { PUSH string "Aggregator_RoundMaxSubmissionExceed" ; FAILWITH } ;
                          SWAP ;
                          DUP ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          COMPARE ;
                          LT ;
                          IF {} { PUSH string "Aggregator_CurrentHasValue" ; FAILWITH } ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DIG 8 ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          SIZE ;
                          COMPARE ;
                          GE ;
                          IF { DUP ;
                               DUG 2 ;
                               NIL nat ;
                               DIG 3 ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               ITER { CDR ; CONS } ;
                               NIL nat ;
                               SWAP ;
                               ITER { CONS } ;
                               PAIR %in_param %in_storage ;
                               EXEC ;
                               DUP ;
                               GET 4 ;
                               SWAP ;
                               DUP ;
                               CAR ;
                               NIL operation ;
                               SWAP ;
                               ITER { CONS } ;
                               DUP 3 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               CDR ;
                               NOW ;
                               DUP 7 ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR %startedAt %updatedAt ;
                               DUP 7 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR %roundId ;
                               PUSH nat 1 ;
                               DIG 7 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { PUSH int 172 ; FAILWITH } {} ;
                               DIG 6 ;
                               GET 3 ;
                               PAIR %answer %answeredInRound ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP }
                             { SWAP ; DROP ; NIL operation } }
                        { DUP 4 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ;
                               SWAP ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               SENDER ;
                               MEM ;
                               IF { PUSH string "Aggregator_AlreadySubmittedForThisRound" ; FAILWITH } {} ;
                               SWAP ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               SIZE ;
                               COMPARE ;
                               LT ;
                               IF {} { PUSH string "Aggregator_RoundMaxSubmissionExceed" ; FAILWITH } ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               DIG 7 ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               SIZE ;
                               COMPARE ;
                               GE ;
                               IF { DUP ;
                                    DUG 2 ;
                                    NIL nat ;
                                    DIG 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    ITER { CDR ; CONS } ;
                                    NIL nat ;
                                    SWAP ;
                                    ITER { CONS } ;
                                    PAIR %in_param %in_storage ;
                                    EXEC ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    CAR ;
                                    NIL operation ;
                                    SWAP ;
                                    ITER { CONS } ;
                                    DUP 3 ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    CDR ;
                                    NOW ;
                                    DUP 7 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR %startedAt %updatedAt ;
                                    DUP 7 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR %roundId ;
                                    DIG 6 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    DIG 6 ;
                                    GET 3 ;
                                    PAIR %answer %answeredInRound ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { SWAP ; DROP ; NIL operation } }
                             { DUP 4 ;
                               GET 8 ;
                               INT ;
                               DUP 5 ;
                               GET 5 ;
                               SENDER ;
                               GET ;
                               IF_NONE { PUSH int 200 ; FAILWITH } {} ;
                               GET 3 ;
                               ADD ;
                               ISNAT ;
                               IF_NONE { PUSH int 200 ; FAILWITH } {} ;
                               PUSH nat 1 ;
                               DUP 6 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               ADD ;
                               COMPARE ;
                               GT ;
                               IF {} { PUSH string "Aggregator_WaitBeforeInit" ; FAILWITH } ;
                               DUP 4 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PUSH int 60 ;
                               DUP 6 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               MUL ;
                               ADD ;
                               NOW ;
                               COMPARE ;
                               GT ;
                               IF { PUSH bool True }
                                  { DIG 3 ;
                                    DUP ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 5 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    COMPARE ;
                                    EQ } ;
                               IF {} { PUSH string "Aggregator_PreviousRoundNotOver" ; FAILWITH } ;
                               DUP 4 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               CDR ;
                               DIG 7 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               DUG 4 ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               CDR ;
                               DUP 7 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               EMPTY_MAP address nat ;
                               DUP 7 ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               PAIR %submissions %timeout ;
                               NOW ;
                               PAIR %startedAt ;
                               DIG 7 ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 9 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               PAIR %maxSubmissions %minSubmissions ;
                               DIG 8 ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               PAIR %activeOracles ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               PUSH nat 1 ;
                               ADD ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               DUG 4 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               DUP ;
                               SENDER ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               IF_NONE { PUSH int 215 ; FAILWITH } {} ;
                               UNPAIR ;
                               SWAP ;
                               CDR ;
                               DIG 10 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               INT ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 5 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               MEM ;
                               IF { DIG 3 ;
                                    DUP ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 5 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH int 224 ; FAILWITH } {} ;
                                    ITER { DIG 4 ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           PUSH bool True ;
                                           DIG 7 ;
                                           UPDATE ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           PAIR ;
                                           DUG 3 } ;
                                    DUP 4 ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    NONE (set address) ;
                                    DIG 11 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    UPDATE ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    DUG 3 }
                                  {} ;
                               DIG 3 ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 5 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               MEM ;
                               IF { DIG 3 ;
                                    DUP ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 5 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH int 229 ; FAILWITH } {} ;
                                    ITER { DIG 4 ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           SWAP ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           UNPAIR ;
                                           PUSH bool False ;
                                           DIG 7 ;
                                           UPDATE ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           PAIR ;
                                           DUG 3 } ;
                                    DROP 3 ;
                                    SWAP ;
                                    DROP ;
                                    DUP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    UNPAIR ;
                                    SWAP ;
                                    NONE (set address) ;
                                    DIG 8 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    UPDATE ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR }
                                  { DROP 3 ; SWAP ; DROP } ;
                               NIL operation } } }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Aggregator_NotAdmin" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SIZE ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Aggregator_MaxInferiorToMin" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Aggregator_MaxExceedActive" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH string "Aggregator_DelayExceedTotal" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DUP 5 ;
                     GET 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CAR ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 5 ;
                     GET 4 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
