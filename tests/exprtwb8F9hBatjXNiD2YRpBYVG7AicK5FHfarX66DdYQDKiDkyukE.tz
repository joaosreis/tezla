{ parameter
    (or (or (or (unit %default) (pair %divestLiquidity (pair nat nat) nat))
            (or (nat %initializeExchange) (nat %investLiquidity)))
        (or (or (pair %tezToTokenPayment nat address)
                (pair %tokenToTezPayment (pair nat nat) address))
            (pair %tokenToTokenPayment (pair nat nat) (pair address address)))) ;
  storage
    (pair (pair (pair (big_map %divestLiquidity
                         nat
                         (lambda
                            (pair (pair (pair address nat) (pair nat nat))
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))
                            (pair (list operation)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))))
                      (big_map %initializeExchange
                         nat
                         (lambda
                            (pair (pair address nat)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))
                            (pair (list operation)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares)))))))
                (pair (big_map %investLiquidity
                         nat
                         (lambda
                            (pair (pair address nat)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))
                            (pair (list operation)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))))
                      (pair %storage
                         (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                     (pair (nat %feeRate) (nat %invariant)))
                               (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                     (pair (nat %tezPool) (address %tokenAddress))))
                         (pair (nat %tokenPool) (nat %totalShares)))))
          (pair (pair (big_map %tezToToken
                         nat
                         (lambda
                            (pair (pair (pair address address) (pair nat nat))
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))
                            (pair (list operation)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares))))))
                      (big_map %tokenToTez
                         nat
                         (lambda
                            (pair (pair (pair address address) (pair address nat))
                                  (pair nat
                                        (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                          (pair (nat %feeRate) (nat %invariant)))
                                                    (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                          (pair (nat %tezPool) (address %tokenAddress))))
                                              (pair (nat %tokenPool) (nat %totalShares)))))
                            (pair (list operation)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares)))))))
                (big_map %tokenToTokenOut
                   nat
                   (lambda
                      (pair (pair (pair address address) (pair address nat))
                            (pair (pair nat address)
                                  (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                                    (pair (nat %feeRate) (nat %invariant)))
                                              (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                                    (pair (nat %tezPool) (address %tokenAddress))))
                                        (pair (nat %tokenPool) (nat %totalShares)))))
                      (pair (list operation)
                            (pair (pair (pair (pair (key_hash %delegated) (address %factoryAddress))
                                              (pair (nat %feeRate) (nat %invariant)))
                                        (pair (pair (key_hash %nextDelegated) (big_map %shares address nat))
                                              (pair (nat %tezPool) (address %tokenAddress))))
                                  (pair (nat %tokenPool) (nat %totalShares)))))))) ;
  code { DUP ;
         CDR ;
         SELF ;
         ADDRESS ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 4 ; DUP ; DUG 5 ; NIL operation ; PAIR ; DIP { DROP } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PUSH nat 0 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 5 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 5 } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 0 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 5 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PUSH nat 0 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 5 } }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 5 } } ;
                 DIP { DROP } }
               { DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 PUSH nat 0 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 5 } } ;
             DIP { DROP } } ;
         DIP { DROP 3 } } }
