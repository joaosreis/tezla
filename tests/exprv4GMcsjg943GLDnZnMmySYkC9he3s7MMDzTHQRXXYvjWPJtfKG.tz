{ parameter
    (or (or %assets
           (or %fa2
              (or (pair %balance_of
                     (list %requests (pair (address %owner) (nat %token_id)))
                     (contract %callback
                        (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                  (list %transfer
                     (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
              (list %update_operators
                 (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                     (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
           (pair %token_metadata
              (list %token_ids nat)
              (lambda %handler (list (pair (nat %token_id) (map %token_info string bytes))) unit)))
        (pair %tokens
           (pair %token_def (nat %from_) (nat %to_))
           (pair (pair %metadata (nat %token_id) (map %token_info string bytes))
                 (list %owners address)))) ;
  storage
    (pair (pair %assets
             (pair (big_map %ledger nat address)
                   (pair %metadata
                      (pair (big_map %metadata
                               (pair (nat %from_) (nat %to_))
                               (pair (nat %token_id) (map %token_info string bytes)))
                            (nat %next_token_id))
                      (set %token_defs (pair (nat %from_) (nat %to_)))))
             (big_map %operators (pair address (pair address nat)) unit))
          (big_map %metadata string bytes)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         MAP { DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               GET ;
                               IF_NONE
                                 { DROP ; DUP 5 ; FAILWITH }
                                 { SWAP ;
                                   DUP ;
                                   CAR ;
                                   DIG 2 ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                                   SWAP ;
                                   PAIR } } ;
                         DIG 2 ;
                         DIG 5 ;
                         DROP 2 ;
                         SWAP ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         CDR ;
                         PAIR ;
                         LAMBDA
                           (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                           unit
                           { UNPAIR ;
                             UNPAIR ;
                             DIG 2 ;
                             UNPAIR ;
                             DUP 4 ;
                             DUP 4 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 4 ; UNIT }
                                { DIG 3 ;
                                  PAIR ;
                                  DIG 2 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DIG 2 ;
                         ITER { DUP ;
                                DUG 2 ;
                                CDR ;
                                ITER { SWAP ;
                                       PUSH nat 0 ;
                                       DUP 3 ;
                                       GET 4 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { SWAP ; DROP }
                                          { PUSH nat 1 ;
                                            DUP 3 ;
                                            GET 4 ;
                                            COMPARE ;
                                            NEQ ;
                                            IF { DROP 2 ; DUP 6 ; FAILWITH }
                                               { DUP ;
                                                 DUP 3 ;
                                                 GET 3 ;
                                                 GET ;
                                                 IF_NONE
                                                   { DROP 2 ; DUP 7 ; FAILWITH }
                                                   { DUP 4 ;
                                                     CAR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     COMPARE ;
                                                     NEQ ;
                                                     IF { DROP 3 ; DUP 6 ; FAILWITH }
                                                        { DUP 5 ;
                                                          DUP 4 ;
                                                          GET 3 ;
                                                          PAIR ;
                                                          SENDER ;
                                                          DIG 2 ;
                                                          PAIR ;
                                                          PAIR ;
                                                          DUP 6 ;
                                                          SWAP ;
                                                          EXEC ;
                                                          DROP ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          CAR ;
                                                          SOME ;
                                                          DIG 2 ;
                                                          GET 3 ;
                                                          UPDATE } } } } } ;
                                SWAP ;
                                DROP } ;
                         SWAP ;
                         DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     SENDER ;
                     DUG 2 ;
                     ITER { SWAP ;
                            DUP 3 ;
                            DUP 3 ;
                            IF_LEFT {} {} ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                            SWAP ;
                            IF_LEFT
                              { SWAP ;
                                UNIT ;
                                SOME ;
                                DUP 3 ;
                                GET 4 ;
                                DUP 4 ;
                                GET 3 ;
                                PAIR ;
                                DIG 3 ;
                                CAR ;
                                PAIR ;
                                UPDATE }
                              { DUP ;
                                DUG 2 ;
                                GET 4 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                DIG 2 ;
                                CAR ;
                                PAIR ;
                                NONE unit ;
                                SWAP ;
                                UPDATE } } ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 MAP { SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       NONE (pair nat nat) ;
                       DIG 2 ;
                       ITER { SWAP ;
                              DUP ;
                              IF_NONE
                                { DROP ;
                                  DUP ;
                                  CDR ;
                                  DUP 3 ;
                                  COMPARE ;
                                  LT ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  DUP 4 ;
                                  COMPARE ;
                                  GE ;
                                  AND ;
                                  IF { SOME } { DROP ; NONE (pair nat nat) } }
                                { DIG 2 ; DROP 2 } } ;
                       SWAP ;
                       DROP ;
                       IF_NONE { DUP 6 ; FAILWITH } {} ;
                       DUP 3 ;
                       CAR ;
                       CAR ;
                       SWAP ;
                       GET ;
                       IF_NONE { DROP ; PUSH string "NO_DATA" ; FAILWITH } { SWAP ; UPDATE 1 } } ;
                 SWAP ;
                 DIG 5 ;
                 DROP 2 ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 NIL operation ;
                 PAIR } ;
             UNPAIR ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             PAIR }
           { DIG 2 ;
             DIG 3 ;
             DROP 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SUB ;
             ISNAT ;
             IF_NONE
               { PUSH string "EMPTY_TOKEN_DEF_RANGE" ; FAILWITH }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SIZE ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "INVALID_OWNERS_LENGTH" ; FAILWITH } {} } ;
             DUP ;
             CAR ;
             CAR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             COMPARE ;
             GT ;
             IF { DROP 2 ; PUSH string "USED_TOKEN_IDS" ; FAILWITH }
                { DUP ;
                  CAR ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 4 ;
                  NIL (pair address nat) ;
                  DIG 2 ;
                  PAIR ;
                  SWAP ;
                  ITER { SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIG 3 ;
                         PAIR ;
                         CONS ;
                         PUSH nat 1 ;
                         DIG 2 ;
                         CAR ;
                         ADD ;
                         PAIR } ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  SWAP ;
                  ITER { UNPAIR ; DIG 2 ; SWAP ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE } ;
                  DUP 3 ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  PUSH bool True ;
                  SWAP ;
                  UPDATE ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  DUP 6 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  DUP 6 ;
                  GET 3 ;
                  DIG 6 ;
                  CAR ;
                  SWAP ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  PAIR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  CDR ;
                  DIG 2 ;
                  PAIR ;
                  PAIR } ;
             NIL operation ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             PAIR } } }
