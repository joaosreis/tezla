{ parameter
    (or (list %transfer
           (pair (address %from_)
                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
        (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                   (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))) ;
  storage
    (pair (pair (pair (pair (pair %constants (nat %loserXp) (nat %winnerXp))
                            (address %contractOwnerAddress))
                      (pair (big_map %indexToTitan
                               nat
                               (pair (pair (pair (pair (pair (nat %agility) (nat %agilityPowerUp))
                                                       (pair (bool %alive) (nat %attackPower)))
                                                 (pair (pair (nat %attackPowerPowerUp) (nat %basicDmg))
                                                       (pair (nat %currentExperience) (nat %defense))))
                                           (pair (pair (pair (nat %defensePowerUp) (nat %exhaustion))
                                                       (pair (nat %experienceForNextLevel) (nat %fightsLost)))
                                                 (pair (pair (nat %fightsWon) (bool %hasPowerUps)) (pair (nat %hitPoints) (nat %hunger)))))
                                     (pair (pair (pair (pair (nat %id) (nat %image)) (pair (nat %initiative) (nat %initiativePowerUp)))
                                                 (pair (pair (timestamp %lastTimeFed) (timestamp %lastTimeRested))
                                                       (pair (nat %level) (nat %luck))))
                                           (pair (pair (pair (string %name) (address %owner)) (pair (nat %price) (nat %resCounter)))
                                                 (pair (pair (nat %restPoints) (nat %stamina)) (nat %staminaPowerUp))))))
                            (nat %jackpot)))
                (pair (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))
                      (pair (big_map %nameTaken string bool)
                            (big_map %operators (pair address (pair address nat)) unit))))
          (pair (pair (pair (nat %ownerReward)
                            (pair %statistic
                               (pair (pair (nat %totalFights) (nat %totalPotSize))
                                     (pair (nat %totalPotsPayedOut) (nat %totalPowerupsBought)))
                               (pair (pair (nat %totalTitansSales) (nat %totalTitansStat)) (nat %totalTitsBurned))))
                      (pair (nat %titanId)
                            (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                (nat %totalTitans))) ;
  code { PUSH string "FA2_NOT_OWNER" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         DIG 3 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { DIG 4 ;
             DROP ;
             ITER { DUP ;
                    DUG 2 ;
                    CDR ;
                    ITER { { DIP 2 { DUP } ; DIG 3 } ;
                           CAR ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           GET 3 ;
                           PAIR ;
                           SENDER ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           DIG 2 ;
                           { { DUP ; CAR ; DIP { CDR } } } ;
                           { DIP 3 { DUP } ; DIG 4 } ;
                           { DIP 3 { DUP } ; DIG 4 } ;
                           COMPARE ;
                           EQ ;
                           IF { DROP 4 ; PUSH unit Unit }
                              { DIG 3 ;
                                PAIR ;
                                DIG 2 ;
                                PAIR ;
                                GET ;
                                IF_NONE
                                  { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH }
                                  { DROP ; PUSH unit Unit } } ;
                           DROP ;
                           PUSH nat 0 ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           GET 3 ;
                           COMPARE ;
                           EQ ;
                           IF { { DIP 2 { DUP } ; DIG 3 } ;
                                CAR ;
                                CDR ;
                                CAR ;
                                CAR ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                GET 3 ;
                                { DIP 2 { DUP } ; DIG 3 } ;
                                PAIR ;
                                GET ;
                                IF_NONE
                                  { DROP 2 ; { DIP 3 { DUP } ; DIG 4 } ; FAILWITH }
                                  { { DIP 2 { DUP } ; DIG 3 } ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    COMPARE ;
                                    GE ;
                                    IF { { DIP 3 { DUP } ; DIG 4 } ;
                                         CDR ;
                                         { DIP 4 { DUP } ; DIG 5 } ;
                                         CAR ;
                                         CDR ;
                                         CDR ;
                                         { DIP 5 { DUP } ; DIG 6 } ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         { DIP 6 { DUP } ; DIG 7 } ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         { DIP 6 { DUP } ; DIG 7 } ;
                                         GET 4 ;
                                         DIG 5 ;
                                         SUB ;
                                         ABS ;
                                         { DIP 6 { DUP } ; DIG 7 } ;
                                         GET 3 ;
                                         DIG 6 ;
                                         PAIR ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         PAIR ;
                                         DIG 3 ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         CDR ;
                                         CDR ;
                                         { DIP 2 { DUP } ; DIG 3 } ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         { DIP 3 { DUP } ; DIG 4 } ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         { DIP 5 { DUP } ; DIG 6 } ;
                                         GET 4 ;
                                         { DIP 5 { DUP } ; DIG 6 } ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         { DIP 7 { DUP } ; DIG 8 } ;
                                         GET 3 ;
                                         { DIP 8 { DUP } ; DIG 9 } ;
                                         CAR ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE { PUSH nat 0 } {} ;
                                         ADD ;
                                         { DIP 6 { DUP } ; DIG 7 } ;
                                         GET 3 ;
                                         DIG 7 ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         PAIR ;
                                         DIG 2 ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR }
                                       { DROP 3 ; { DIP 3 { DUP } ; DIG 4 } ; FAILWITH } } }
                              { DROP 2 ; { DIP 2 { DUP } ; DIG 3 } ; FAILWITH } } ;
                    SWAP ;
                    DROP } ;
             SWAP ;
             DIG 2 ;
             DROP 2 ;
             NIL operation ;
             PAIR }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 NIL operation ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CDR ;
                 AMOUNT ;
                 DIG 4 ;
                 CAR ;
                 MAP { PUSH nat 0 ;
                       PUSH nat 0 ;
                       { DIP 2 { DUP } ; DIG 3 } ;
                       CDR ;
                       COMPARE ;
                       NEQ ;
                       IF { { DIP 7 { DUP } ; DIG 8 } ; FAILWITH }
                          { { DIP 6 { DUP } ; DIG 7 } ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CAR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CDR ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            CAR ;
                            PAIR ;
                            GET ;
                            IF_NONE {} { SWAP ; DROP } } ;
                       SWAP ;
                       PAIR } ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 2 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 ITER { IF_LEFT
                          { DUP ;
                            CAR ;
                            SENDER ;
                            COMPARE ;
                            EQ ;
                            IF {} { { DIP 2 { DUP } ; DIG 3 } ; FAILWITH } ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            PUSH unit Unit ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            GET 4 ;
                            { DIP 4 { DUP } ; DIG 5 } ;
                            GET 3 ;
                            PAIR ;
                            DIG 4 ;
                            CAR ;
                            PAIR ;
                            SWAP ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DIG 2 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR }
                          { DUP ;
                            CAR ;
                            SENDER ;
                            COMPARE ;
                            EQ ;
                            IF {} { { DIP 2 { DUP } ; DIG 3 } ; FAILWITH } ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CDR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            GET 4 ;
                            { DIP 3 { DUP } ; DIG 4 } ;
                            GET 3 ;
                            PAIR ;
                            DIG 3 ;
                            CAR ;
                            PAIR ;
                            NONE unit ;
                            SWAP ;
                            UPDATE ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DIG 2 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR } } ;
                 SWAP ;
                 DROP ;
                 NIL operation ;
                 PAIR } } } }
