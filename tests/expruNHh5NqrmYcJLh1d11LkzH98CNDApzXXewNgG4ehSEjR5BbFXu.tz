{ storage
    (pair (pair (pair (address %administrator) (nat %all_tokens))
                (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)))
          (pair (pair (bool %minting_paused)
                      (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit))
                (pair (bool %paused)
                      (pair (option %protocol_address address)
                            (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))))) ;
  parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (list %mint (pair (nat %token_id) (map %token_info string bytes))))
            (or (pair %mutez_transfer (mutez %amount) (address %destination))
                (or (address %set_administrator) (bool %set_minting_pause))))
        (or (or (bool %set_pause) (option %set_protocol_address address))
            (or (pair %token_metadata
                   (list %token_ids nat)
                   (lambda %handler (list (pair (nat %token_id) (map %token_info string bytes))) unit))
                (or (list %transfer
                       (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id)))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     IF { PUSH int 427 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     MAP { DUP 3 ;
                           GET 8 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                           DUP 3 ;
                           CAR ;
                           GET 3 ;
                           SWAP ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           PAIR ;
                           MEM ;
                           IF { DUP 3 ;
                                CAR ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                PAIR ;
                                GET ;
                                IF_NONE { PUSH int 434 ; FAILWITH } {} ;
                                SWAP ;
                                PAIR }
                              { PUSH nat 0 ; SWAP ; PAIR } } ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          COMPARE ;
                          EQ ;
                          IF {} { PUSH int 555 ; FAILWITH } ;
                          DUP ;
                          ITER { DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { PUSH string "FA2_CANNOT_MINT_SAME_TOKEN_TWICE" ; FAILWITH } {} ;
                                 DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { PUSH string "FA2_CANNOT_MINT_SAME_TOKEN_TWICE" ; FAILWITH } {} ;
                                 DUP 3 ;
                                 CAR ;
                                 GET 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 SENDER ;
                                 PAIR ;
                                 MEM ;
                                 IF { DIG 2 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      DUP ;
                                      DUP 6 ;
                                      CAR ;
                                      SENDER ;
                                      PAIR ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE { PUSH int 531 ; FAILWITH } {} ;
                                      PUSH nat 1 ;
                                      ADD ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 2 }
                                    { DIG 2 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      PUSH (option nat) (Some 1) ;
                                      DUP 6 ;
                                      CAR ;
                                      SENDER ;
                                      PAIR ;
                                      UPDATE ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 2 } ;
                                 DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { DROP }
                                    { DIG 2 ;
                                      DUP ;
                                      GET 8 ;
                                      DIG 2 ;
                                      DUP ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      PAIR ;
                                      SOME ;
                                      DIG 3 ;
                                      CAR ;
                                      UPDATE ;
                                      UPDATE 8 ;
                                      SWAP } ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 PUSH nat 1 ;
                                 ADD ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP } ;
                          DROP }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 7 ;
                          SENDER ;
                          SOME ;
                          COMPARE ;
                          EQ ;
                          IF {} { PUSH int 558 ; FAILWITH } ;
                          DUP ;
                          ITER { DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { PUSH string "FA2_CANNOT_MINT_SAME_TOKEN_TWICE" ; FAILWITH } {} ;
                                 DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { PUSH string "FA2_CANNOT_MINT_SAME_TOKEN_TWICE" ; FAILWITH } {} ;
                                 DUP 3 ;
                                 CAR ;
                                 GET 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 SENDER ;
                                 PAIR ;
                                 MEM ;
                                 IF { DIG 2 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      DUP ;
                                      DUP 6 ;
                                      CAR ;
                                      SENDER ;
                                      PAIR ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE { PUSH int 531 ; FAILWITH } {} ;
                                      PUSH nat 1 ;
                                      ADD ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 2 }
                                    { DIG 2 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      PUSH (option nat) (Some 1) ;
                                      DUP 6 ;
                                      CAR ;
                                      SENDER ;
                                      PAIR ;
                                      UPDATE ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 2 } ;
                                 DUP 3 ;
                                 GET 8 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 MEM ;
                                 IF { DROP }
                                    { DIG 2 ;
                                      DUP ;
                                      GET 8 ;
                                      DIG 2 ;
                                      DUP ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      PAIR ;
                                      SOME ;
                                      DIG 3 ;
                                      CAR ;
                                      UPDATE ;
                                      UPDATE 8 ;
                                      SWAP } ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 PUSH nat 1 ;
                                 ADD ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP } ;
                          DROP } ;
                     NIL operation } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 354 ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 357 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 485 ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 548 ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 504 ; FAILWITH } ;
                     UPDATE 5 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 492 ; FAILWITH } ;
                     UPDATE 7 } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     IF { PUSH int 566 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MAP { DUP 4 ; GET 8 ; SWAP ; GET ; IF_NONE { PUSH int 576 ; FAILWITH } {} } ;
                     DIG 2 ;
                     DROP ;
                     EXEC ;
                     DROP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         IF { PUSH int 408 ; FAILWITH } {} ;
                         DUP ;
                         ITER { DUP 3 ;
                                GET 7 ;
                                SENDER ;
                                SOME ;
                                COMPARE ;
                                EQ ;
                                IF {}
                                   { DUP ;
                                     CAR ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     IF {} { PUSH int 412 ; FAILWITH } } ;
                                DUP ;
                                CDR ;
                                ITER { DUP 4 ;
                                       GET 8 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       MEM ;
                                       IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                       PUSH nat 1 ;
                                       DUP 5 ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 3 ;
                                       CDR ;
                                       DUP 5 ;
                                       CAR ;
                                       PAIR ;
                                       GET ;
                                       IF_NONE { PUSH int 417 ; FAILWITH } {} ;
                                       COMPARE ;
                                       EQ ;
                                       IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                       DIG 3 ;
                                       UNPAIR ;
                                       UNPAIR ;
                                       SWAP ;
                                       UNPAIR ;
                                       PUSH (option nat) (Some 1) ;
                                       DIG 5 ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 7 ;
                                       CAR ;
                                       PAIR ;
                                       UPDATE ;
                                       NONE nat ;
                                       DIG 5 ;
                                       CDR ;
                                       DUP 7 ;
                                       CAR ;
                                       PAIR ;
                                       UPDATE ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DUG 2 } ;
                                DROP } ;
                         DROP }
                       { PUSH string "FA2_OPERATORS_UNSUPPORTED" ; FAILWITH } } } ;
             NIL operation } ;
         PAIR } }
