{ parameter
    (or (or (pair %addNewExchange
               (pair (string %domain_name) (string %exchange_type))
               (pair (mutez %price) (address %seller)))
            (address %changeOwner))
        (or (pair %updateEscrowType (string %escrow_type) (nat %commission))
            (or (address %validateExchange) (address %validateSellerTransmission)))) ;
  storage
    (pair (pair (map %escrow_states int string) (big_map %escrow_types string nat))
          (pair (big_map %exchanges
                   address
                   (pair (pair (string %domain_name) (pair (string %exchange_type) (timestamp %lastUpdate)))
                         (pair (pair %paid_price
                                  (pair (mutez %asked_price) (mutez %commission))
                                  (pair (mutez %escrow) (mutez %slashing)))
                               (pair (address %seller) (string %state)))))
                (pair (address %owner) (nat %slashing_rate)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 MEM ;
                 IF {} { PUSH string "This type does not exist" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 PUSH nat 100 ;
                 SWAP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                 CAR ;
                 PUSH nat 100 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 ADD ;
                 ADD ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "The amount sent is not enough" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      PUSH int 2 ;
                      GET ;
                      IF_NONE { PUSH int 93 ; FAILWITH } {} ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      SENDER ;
                      GET ;
                      IF_NONE { PUSH int 92 ; FAILWITH } {} ;
                      CDR ;
                      CDR ;
                      CDR ;
                      COMPARE ;
                      EQ ;
                      IF { PUSH bool True }
                         { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           PUSH int 3 ;
                           GET ;
                           IF_NONE { PUSH int 93 ; FAILWITH } {} ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           CAR ;
                           SENDER ;
                           GET ;
                           IF_NONE { PUSH int 92 ; FAILWITH } {} ;
                           CDR ;
                           CDR ;
                           CDR ;
                           COMPARE ;
                           EQ } ;
                      IF {}
                         { PUSH string "There is already an ongoin exchange for this buyer" ;
                           FAILWITH } }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 PUSH int 0 ;
                 GET ;
                 IF_NONE { PUSH int 95 ; FAILWITH } {} ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 PAIR %seller %state ;
                 PUSH nat 100 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                 CAR ;
                 AMOUNT ;
                 PAIR %escrow %slashing ;
                 PUSH nat 100 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CAR ;
                 DIG 8 ;
                 CAR ;
                 CDR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                 CAR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 CAR ;
                 PAIR %asked_price %commission ;
                 PAIR ;
                 PAIR %paid_price ;
                 NOW ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 PAIR %exchange_type %lastUpdate ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 PAIR %domain_name ;
                 PAIR ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "Only the owner of the contract can designate a new owner" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR } ;
             NIL operation }
           { IF_LEFT
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "Only the owner of the contract can update the escrow types" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 SOME ;
                 DIG 4 ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation }
               { IF_LEFT
                   { SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True } { DUP ; SENDER ; COMPARE ; EQ } ;
                     IF {}
                        { PUSH string
                               "Only the owner of the contract or the buyer can validate the reception of the goods" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {} { PUSH string "The exchange does not exist" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PUSH int 1 ;
                     GET ;
                     IF_NONE { PUSH int 127 ; FAILWITH } {} ;
                     PACK ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 127 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PACK ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "The exchange is not waiting for a validation" ; FAILWITH } ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 129 ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET ;
                     IF_NONE { PUSH int 129 ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 130 ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET ;
                     IF_NONE { PUSH int 130 ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 132 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE { PUSH int 132 ; FAILWITH } {} ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET ;
                     IF_NONE { PUSH int 132 ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 133 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     DIG 9 ;
                     CAR ;
                     CAR ;
                     PUSH int 2 ;
                     GET ;
                     IF_NONE { PUSH int 133 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 5 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 134 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     NOW ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string
                               "Only the owner of the contract can validate the transmission of the goods" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {} { PUSH string "The exchange does not exist" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     PUSH int 0 ;
                     GET ;
                     IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                     PACK ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET ;
                     IF_NONE { PUSH int 116 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PACK ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string
                               "WrongCondition: sp.pack(sp.set_type_expr(self.data.exchanges[params.buyer].state, sp.TString)) == sp.pack(sp.set_type_expr(self.data.escrow_states[0], sp.TString))" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 117 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     DIG 8 ;
                     CAR ;
                     CAR ;
                     PUSH int 1 ;
                     GET ;
                     IF_NONE { PUSH int 117 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 4 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 118 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     NOW ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
