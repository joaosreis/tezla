{ parameter
    (or unit
        (pair (pair nat
                    (or (or (or (or (pair address (pair address nat)) (pair address nat))
                                (or (pair (pair address address) (contract nat))
                                    (or (pair address (contract nat)) (pair unit (contract nat)))))
                            (or (or bool address)
                                (or (pair unit (contract address)) (or (pair address nat) (pair address nat)))))
                        (pair nat (list key))))
              (list (option signature)))) ;
  storage
    (pair (big_map address (pair nat (map address nat)))
          (pair (pair (lambda
                         (pair (or (or (or (pair address (pair address nat)) (pair address nat))
                                       (or (pair (pair address address) (contract nat))
                                           (or (pair address (contract nat)) (pair unit (contract nat)))))
                                   (or (or bool address)
                                       (or (pair unit (contract address)) (or (pair address nat) (pair address nat)))))
                               (pair (big_map address (pair nat (map address nat))) (pair address (pair bool nat))))
                         (pair (list operation)
                               (pair (big_map address (pair nat (map address nat))) (pair address (pair bool nat)))))
                      (pair address (pair bool nat)))
                (pair nat (pair nat (list key))))) ;
  code { DUP ;
         CAR ;
         DIP { CDR } ;
         IF_LEFT
           { DROP ; NIL operation ; PAIR }
           { DIP { DUP ;
                   CAR ;
                   DIP { CDR } ;
                   DIP { DUP ; CAR ; DIP { CDR } } ;
                   PAIR } ;
             SWAP ;
             DIP { PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {}
                      { PUSH string
                             "Some tokens were sent to this contract outside of the default entry point." ;
                        FAILWITH } ;
                   SWAP ;
                   DUP ;
                   DIP { SWAP } ;
                   DIP { DUP ;
                         CAR ;
                         DIP { CDR } ;
                         DUP ;
                         SELF ;
                         ADDRESS ;
                         PAIR ;
                         PACK ;
                         DIP { DUP ; CAR ; DIP { CDR } ; DIP { SWAP } } ;
                         SWAP } ;
                   DUP ;
                   CAR ;
                   DIP { CDR } ;
                   DIP { SWAP } ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Counters do not match." ; FAILWITH } ;
                   DIP { SWAP } ;
                   DUP ;
                   CAR ;
                   DIP { CDR } ;
                   DIP { PUSH nat 0 ;
                         SWAP ;
                         ITER { DIP { SWAP } ;
                                SWAP ;
                                IF_CONS
                                  { IF_NONE
                                      { SWAP ; DROP }
                                      { SWAP ;
                                        DIP { SWAP ;
                                              DIP { DIP { DIP { DUP } ; SWAP } } ;
                                              DIP { DIP { DUP } ; SWAP } ;
                                              SWAP ;
                                              DIP { CHECK_SIGNATURE } ;
                                              SWAP ;
                                              IF { DROP } { FAILWITH } ;
                                              PUSH nat 1 ;
                                              ADD } } }
                                  { FAILWITH } ;
                                SWAP } } ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "Quorum not present" ; FAILWITH } ;
                   IF_CONS { FAILWITH } {} ;
                   DROP ;
                   DIP { DUP ; CAR ; DIP { CDR } ; PUSH nat 1 ; ADD ; PAIR } } ;
             SWAP ;
             DIP { SWAP } ;
             IF_LEFT
               { DIP { SWAP ;
                       DUP ;
                       CAR ;
                       DIP { CDR } ;
                       DIP { DUP ; CAR ; DIP { CDR } ; SWAP ; DIP { DUP } } ;
                       PAIR } ;
                 PAIR ;
                 EXEC ;
                 DUP ;
                 CAR ;
                 DIP { CDR } ;
                 DIP { DUP ; CAR ; DIP { CDR } ; DIP { SWAP ; PAIR } ; PAIR } }
               { DIP { CAR } ; SWAP ; PAIR ; SWAP ; NIL operation } ;
             DIP { DUP ; CAR ; DIP { CDR } ; DIP { PAIR } ; PAIR } ;
             PAIR } } }
