{ storage
    (pair (pair (address %administrator) (pair (int %contributionCount) (timestamp %end_date)))
          (pair (timestamp %start_date)
                (pair (address %tokenContract) (int %xtzContributionTotal)))) ;
  parameter int ;
  code { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         GET 4 ;
         NOW ;
         COMPARE ;
         LE ;
         IF {}
            { PUSH string "WrongCondition: sp.now <= self.data.end_date" ; FAILWITH } ;
         DUP ;
         ISNAT ;
         IF_NONE { PUSH int 15 ; FAILWITH } {} ;
         PUSH mutez 1000000 ;
         MUL ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         IF {}
            { PUSH string "WrongCondition: sp.amount == sp.tez(sp.as_nat(params.amount))" ;
              FAILWITH } ;
         PUSH int 50000 ;
         DUP 3 ;
         GET 6 ;
         COMPARE ;
         LT ;
         IF { NIL operation ;
              DUP 3 ;
              GET 5 ;
              CONTRACT %mint (pair (address %address) (int %amount)) ;
              IF_NONE { PUSH int 18 ; FAILWITH } {} ;
              AMOUNT ;
              PUSH int 1200 ;
              DUP 5 ;
              MUL ;
              SENDER ;
              PAIR %address %amount ;
              TRANSFER_TOKENS ;
              CONS ;
              DUP 3 ;
              GET 5 ;
              CONTRACT %mint (pair (address %address) (int %amount)) ;
              IF_NONE { PUSH int 18 ; FAILWITH } {} ;
              PUSH mutez 0 ;
              PUSH int 120 ;
              DUP 5 ;
              MUL ;
              DUP 6 ;
              CAR ;
              CAR ;
              PAIR %address %amount ;
              TRANSFER_TOKENS ;
              CONS }
            { NIL operation ;
              DUP 3 ;
              GET 5 ;
              CONTRACT %mint (pair (address %address) (int %amount)) ;
              IF_NONE { PUSH int 18 ; FAILWITH } {} ;
              AMOUNT ;
              PUSH int 1000 ;
              DUP 5 ;
              MUL ;
              SENDER ;
              PAIR %address %amount ;
              TRANSFER_TOKENS ;
              CONS ;
              DUP 3 ;
              GET 5 ;
              CONTRACT %mint (pair (address %address) (int %amount)) ;
              IF_NONE { PUSH int 18 ; FAILWITH } {} ;
              PUSH mutez 0 ;
              PUSH int 100 ;
              DUP 5 ;
              MUL ;
              DUP 6 ;
              CAR ;
              CAR ;
              PAIR %address %amount ;
              TRANSFER_TOKENS ;
              CONS } ;
         DIG 2 ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         DIG 5 ;
         ADD ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         PUSH int 1 ;
         ADD ;
         PAIR ;
         SWAP ;
         PAIR ;
         PAIR ;
         SWAP ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
