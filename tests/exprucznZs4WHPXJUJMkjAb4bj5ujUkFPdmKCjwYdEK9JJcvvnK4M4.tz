{ storage string ;
  parameter nat ;
  code { LAMBDA
           nat
           string
           { PUSH nat 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { PUSH string "" ;
                  EMPTY_MAP nat string ;
                  PUSH string "9" ;
                  SOME ;
                  PUSH nat 9 ;
                  UPDATE ;
                  PUSH string "8" ;
                  SOME ;
                  PUSH nat 8 ;
                  UPDATE ;
                  PUSH string "7" ;
                  SOME ;
                  PUSH nat 7 ;
                  UPDATE ;
                  PUSH string "6" ;
                  SOME ;
                  PUSH nat 6 ;
                  UPDATE ;
                  PUSH string "5" ;
                  SOME ;
                  PUSH nat 5 ;
                  UPDATE ;
                  PUSH string "4" ;
                  SOME ;
                  PUSH nat 4 ;
                  UPDATE ;
                  PUSH string "3" ;
                  SOME ;
                  PUSH nat 3 ;
                  UPDATE ;
                  PUSH string "2" ;
                  SOME ;
                  PUSH nat 2 ;
                  UPDATE ;
                  PUSH string "1" ;
                  SOME ;
                  PUSH nat 1 ;
                  UPDATE ;
                  PUSH string "0" ;
                  SOME ;
                  PUSH nat 0 ;
                  UPDATE ;
                  PUSH nat 0 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  COMPARE ;
                  GT ;
                  LOOP { PUSH nat 10 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         EDIV ;
                         IF_NONE { PUSH string "DivByZero" ; FAILWITH } {} ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         CONCAT ;
                         DIP { DIG 2 ; DROP } ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         DIP { DIG 3 ; DROP } ;
                         DUG 3 ;
                         DROP ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         COMPARE ;
                         GT } ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DROP 2 }
                { PUSH string "0" } ;
             DUG 1 ;
             DROP } ;
         DIG 1 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         EXEC ;
         DIP { DIG 1 ; DROP } ;
         DUG 1 ;
         DROP ;
         NIL operation ;
         PAIR ;
         DIP { DROP } } }
