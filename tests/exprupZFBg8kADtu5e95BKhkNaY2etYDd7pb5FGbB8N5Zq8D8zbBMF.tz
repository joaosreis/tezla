{ storage
    (pair (pair (pair (nat %Fee) (address %LPTokenAddress))
                (pair (address %PlentyAddress) (nat %Plenty_pool)))
          (pair (pair (address %TokenAddress) (nat %Token_pool))
                (pair (address %administrator) (pair (bool %paused) (nat %totalSupply))))) ;
  parameter
    (or (or (pair %AddLiquidity (nat %Plenty_amount) (nat %Token_amount))
            (or (unit %ChangeState) (nat %ModifyFee)))
        (or (pair %PlentyToTokenSwap
               (nat %min_amount)
               (pair (address %recipent) (nat %swap_amount)))
            (or (nat %RemoveLiquidity)
                (pair %TokenToPlentySwap
                   (nat %min_amount)
                   (pair (address %recipent) (nat %swap_amount)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CDR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string " Token Amount is Less than Zero" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string " Token Amount is Less than Zero" ; FAILWITH } ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 GET 8 ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DUP ;
                      CAR ;
                      GET 4 ;
                      SWAP ;
                      DUP ;
                      DUG 3 ;
                      GET 3 ;
                      CDR ;
                      DUP 3 ;
                      CAR ;
                      MUL ;
                      EDIV ;
                      IF_NONE { PUSH int 158 ; FAILWITH } { CAR } ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      LE ;
                      IF {}
                         { PUSH string "Token Amount required is less than the Maximum Allocated" ;
                           FAILWITH } ;
                      DIG 2 ;
                      DUP ;
                      CAR ;
                      GET 4 ;
                      SWAP ;
                      DUP ;
                      DUG 4 ;
                      GET 8 ;
                      DUP 4 ;
                      CAR ;
                      MUL ;
                      EDIV ;
                      IF_NONE { PUSH int 162 ; FAILWITH } { CAR } ;
                      SWAP ;
                      DIG 3 ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      UNPAIR ;
                      SWAP ;
                      DUP 7 ;
                      CAR ;
                      ADD ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      DUP 5 ;
                      ADD ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      DUG 3 }
                    { DUP ;
                      CAR ;
                      PUSH nat 10000000000000000000 ;
                      SWAP ;
                      COMPARE ;
                      GE ;
                      IF {}
                         { PUSH string "Initial Liquidty should be greater than 10 Plenty" ; FAILWITH } ;
                      SWAP ;
                      UNPAIR ;
                      UNPAIR ;
                      SWAP ;
                      CAR ;
                      DUP 4 ;
                      CAR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      UNPAIR ;
                      CAR ;
                      DUP 4 ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      DUP ;
                      CAR ;
                      PUSH nat 1000000000000000000 ;
                      MUL ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR } ;
                 DIG 3 ;
                 DUP ;
                 GET 8 ;
                 DUP 4 ;
                 ADD ;
                 UPDATE 8 ;
                 DUG 3 ;
                 NIL operation ;
                 DUP 5 ;
                 CAR ;
                 GET 3 ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE { PUSH string "Transferring Plenty Tokens Failed" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 5 ;
                 CAR ;
                 SELF_ADDRESS ;
                 SENDER ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 4 ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE
                   { PUSH string "Transferring Tokens to Exchange Failed" ; FAILWITH }
                   {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 SELF_ADDRESS ;
                 SENDER ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CONTRACT %mint (pair address nat) ;
                 IF_NONE { PUSH string "Minting LP Token call failed" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 SENDER ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string " Sender is not Authorized" ; FAILWITH } ;
                     DUP ;
                     GET 7 ;
                     NOT ;
                     UPDATE 7 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Sender is not Authorized" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR } ;
                 NIL operation } }
           { IF_LEFT
               { DUP ;
                 GET 4 ;
                 DUP 3 ;
                 GET 7 ;
                 IF { PUSH string "Exchange is not accepting New Swap Orders" ; FAILWITH } {} ;
                 DUP ;
                 DUP 4 ;
                 CAR ;
                 GET 4 ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "Exchange has Insufficient Funds" ; FAILWITH } ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 EDIV ;
                 IF_NONE { PUSH int 35 ; FAILWITH } { CAR } ;
                 DIG 3 ;
                 DUP ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 GET 3 ;
                 CDR ;
                 MUL ;
                 SWAP ;
                 DUP 3 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 39 ; FAILWITH } {} ;
                 DUP 5 ;
                 CAR ;
                 GET 4 ;
                 ADD ;
                 SWAP ;
                 EDIV ;
                 IF_NONE { PUSH int 39 ; FAILWITH } { CAR } ;
                 DUP ;
                 DUP 5 ;
                 GET 3 ;
                 CDR ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 41 ; FAILWITH } {} ;
                 SWAP ;
                 DUP 4 ;
                 CAR ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: TokenTransfer.value > params.min_amount" ;
                      FAILWITH } ;
                 DIG 4 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DUP 7 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 UNPAIR ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUG 3 ;
                 NIL operation ;
                 DUP 5 ;
                 CAR ;
                 GET 3 ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE { PUSH int 59 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 SELF_ADDRESS ;
                 SENDER ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 4 ;
                 GET 3 ;
                 CAR ;
                 CONTRACT %transfer (pair address (pair address nat)) ;
                 IF_NONE { PUSH int 75 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DIG 4 ;
                 GET 3 ;
                 SELF_ADDRESS ;
                 PAIR 3 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { IF_LEFT
                   { PUSH nat 0 ;
                     DUP 3 ;
                     GET 8 ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "WrongCondition: self.data.totalSupply > 0" ; FAILWITH } ;
                     DUP ;
                     DUP 3 ;
                     GET 8 ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.totalSupply >= params.token_amount" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 8 ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET 4 ;
                     DUP 3 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 233 ; FAILWITH } { CAR } ;
                     DIG 2 ;
                     DUP ;
                     GET 8 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     GET 3 ;
                     CDR ;
                     DUP 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH int 234 ; FAILWITH } { CAR } ;
                     DUP 4 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DUP 5 ;
                     DIG 7 ;
                     CAR ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 4 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     CAR ;
                     DUP 4 ;
                     DIG 7 ;
                     GET 3 ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 238 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 ;
                     NIL operation ;
                     PUSH address "KT1ChoJPqBdDuSHJmdrfGuYhQapqiyEVyZxT" ;
                     CONTRACT %burn (pair address nat) ;
                     IF_NONE { PUSH string "burning wDAL call failed" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 5 ;
                     SENDER ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 4 ;
                     CAR ;
                     GET 3 ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 261 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     SENDER ;
                     SELF_ADDRESS ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     SENDER ;
                     SELF_ADDRESS ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     IF { PUSH string "Exchange is not accepting New Swap Orders" ; FAILWITH } {} ;
                     DUP ;
                     GET 4 ;
                     DUP 3 ;
                     GET 3 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "Exchange has Insufficient Funds" ; FAILWITH } ;
                     DUP ;
                     GET 4 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     EDIV ;
                     IF_NONE { PUSH int 97 ; FAILWITH } { CAR } ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     GET 3 ;
                     CDR ;
                     MUL ;
                     SWAP ;
                     DUP 3 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 101 ; FAILWITH } {} ;
                     DUP 5 ;
                     GET 3 ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     EDIV ;
                     IF_NONE { PUSH int 101 ; FAILWITH } { CAR } ;
                     DUP ;
                     DUP 5 ;
                     CAR ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 103 ; FAILWITH } {} ;
                     SWAP ;
                     DUP 4 ;
                     CAR ;
                     DUP 3 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "Swap Amount is Less than Mint Amount" ; FAILWITH } ;
                     DIG 4 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DUP 6 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 ;
                     NIL operation ;
                     DUP 5 ;
                     GET 3 ;
                     CAR ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 119 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     SELF_ADDRESS ;
                     SENDER ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 4 ;
                     CAR ;
                     GET 3 ;
                     CONTRACT %transfer (pair address (pair address nat)) ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DIG 4 ;
                     GET 3 ;
                     SELF_ADDRESS ;
                     PAIR 3 ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
