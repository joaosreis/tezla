{ storage
    (pair (pair (address %admin) (nat %all_auctions))
          (pair (big_map %auctions
                   nat
                   (pair (pair (pair (address %author) (address %bidder))
                               (pair (nat %cut) (pair (timestamp %end_timestamp) (address %nft_address))))
                         (pair (pair (nat %nft_id) (pair (bytes %payment_data) (string %payment_method)))
                               (pair (nat %price) (pair (address %seller) (timestamp %start_timestamp))))))
                (pair (set %operators address) (address %user_manager)))) ;
  parameter
    (or (or (pair %bid
               (pair (nat %auction_id) (pair (address %bidder) (bytes %payment_data)))
               (pair (string %payment_method) (pair (nat %price) (timestamp %timestamp))))
            (or (pair %create_auction
                   (pair (pair (address %author) (nat %cut))
                         (pair (timestamp %end_timestamp) (address %nft_address)))
                   (pair (pair (nat %nft_id) (nat %price))
                         (pair (address %seller) (timestamp %start_timestamp))))
                (address %set_administrator)))
        (or (list %update_operator (pair (address %operator) (bool %valid)))
            (or (address %update_user_manager) (nat %withdraw)))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 GET 3 ;
                 PUSH address "tz3jfebmewtfXYD1Xef34TwrfMg2rrrw6oum" ;
                 SWAP ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "AUC_INVALID_ADDRESS" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 GET 7 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "AUC_SELLER_CANNOT_BID" ; FAILWITH } ;
                 PUSH nat 10 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 GET 5 ;
                 ADD ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 GET 8 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 COMPARE ;
                 GE ;
                 IF {} { PUSH string "AUC_AUCTION_NOT_START" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 CAR ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "AUC_AUCTION_IS_OVER" ; FAILWITH } ;
                 NIL operation ;
                 DUP 3 ;
                 GET 6 ;
                 CONTRACT %lock
                   (pair (pair (address %account) (nat %amount)) (pair (bytes %data) (string %method))) ;
                 IF_NONE { PUSH int 938 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 GET 4 ;
                 PAIR %data %method ;
                 DIG 4 ;
                 DUP ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 GET 3 ;
                 PAIR %account %amount ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 GET 7 ;
                 DUP 4 ;
                 GET 3 ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 CAR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP 3 ;
                      GET 6 ;
                      CONTRACT %unlock
                        (pair (pair (address %account) (nat %amount)) (pair (bytes %data) (string %method))) ;
                      IF_NONE { PUSH int 942 ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DUP 5 ;
                      GET 3 ;
                      DUP 5 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 4 ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                      GET 3 ;
                      GET 3 ;
                      PAIR %data %method ;
                      DUP 6 ;
                      GET 3 ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                      GET 5 ;
                      DUP 7 ;
                      GET 3 ;
                      DUP 7 ;
                      CAR ;
                      CAR ;
                      GET ;
                      IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR %account %amount ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      CONS }
                    {} ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 945 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 CAR ;
                 DUP 9 ;
                 CAR ;
                 GET 3 ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 946 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 9 ;
                 GET 5 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 947 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CAR ;
                 DUP 10 ;
                 GET 3 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 948 ; FAILWITH } {} ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 CDR ;
                 DUP 10 ;
                 CAR ;
                 GET 4 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 DUG 3 ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DIG 5 ;
                 GET 3 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 931 ; FAILWITH } {} ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                          FAILWITH } ;
                     DUP ;
                     GET 6 ;
                     PUSH int 60 ;
                     DUP ;
                     PUSH int 0 ;
                     MUL ;
                     MUL ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
                     DUP ;
                     GET 6 ;
                     PUSH int 60 ;
                     DUP ;
                     PUSH int 168 ;
                     MUL ;
                     MUL ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "AUC_END_DATE_TOO_LATE" ; FAILWITH } ;
                     DUP ;
                     GET 3 ;
                     CDR ;
                     PUSH nat 100 ;
                     SWAP ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_BID_PRICE_TOO_LOW" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     GET 4 ;
                     CONTRACT %transfer
                       (list (pair (address %from_)
                                   (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                     IF_NONE { PUSH int 907 ; FAILWITH } {} ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     NIL (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                     NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                     DUP 6 ;
                     GET 3 ;
                     CAR ;
                     SELF_ADDRESS ;
                     PAIR %to_ %token_id ;
                     PUSH nat 1 ;
                     PAIR %amount ;
                     CONS ;
                     DUP 6 ;
                     GET 5 ;
                     PAIR %from_ %txs ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 4 ;
                     DUP ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     GET 5 ;
                     PAIR %seller %start_timestamp ;
                     DUP 6 ;
                     GET 3 ;
                     CDR ;
                     PAIR %price ;
                     PUSH (pair (bytes %payment_data) (string %payment_method)) (Pair 0x "") ;
                     DUP 7 ;
                     GET 3 ;
                     CAR ;
                     PAIR %nft_id ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     GET 3 ;
                     PAIR %end_timestamp %nft_address ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR %cut ;
                     DIG 6 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR %author %bidder ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 5 ;
                     CAR ;
                     CDR ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH nat 1 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     NIL operation } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                 DUP ;
                 ITER { DUP ;
                        CDR ;
                        IF { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             PUSH bool True ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             PUSH bool False ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } ;
                 DROP ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.operators.contains(sp.sender)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     CAR ;
                     GET 5 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_AUCTION_IS_ONGOING" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     GET 7 ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     IF { NIL operation ;
                          DUP 3 ;
                          GET 6 ;
                          CONTRACT %unlock_pay
                            (pair (pair (address %account) (nat %amount)) (pair (bytes %data) (string %method))) ;
                          IF_NONE { PUSH int 963 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DUP 5 ;
                          GET 3 ;
                          DUP 5 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 3 ;
                          GET 4 ;
                          DUP 6 ;
                          GET 3 ;
                          DUP 6 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 3 ;
                          GET 3 ;
                          PAIR %data %method ;
                          DUP 6 ;
                          GET 3 ;
                          DUP 6 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 5 ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          CAR ;
                          CAR ;
                          CDR ;
                          PAIR %account %amount ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          DUP 3 ;
                          GET 6 ;
                          CONTRACT %update_balance
                            (pair (address %account) (pair (nat %amount) (bool %increase))) ;
                          IF_NONE { PUSH int 967 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          PUSH bool True ;
                          PUSH nat 100 ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          CAR ;
                          GET 3 ;
                          DUP 8 ;
                          GET 3 ;
                          DUP 8 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 5 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 966 ; FAILWITH } { CAR } ;
                          PAIR %amount %increase ;
                          DUP 6 ;
                          GET 3 ;
                          DUP 6 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR %account ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          DUP 3 ;
                          GET 6 ;
                          CONTRACT %update_balance
                            (pair (address %account) (pair (nat %amount) (bool %increase))) ;
                          IF_NONE { PUSH int 970 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          PUSH bool True ;
                          PUSH nat 100 ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          CAR ;
                          GET 3 ;
                          DUP 8 ;
                          GET 3 ;
                          DUP 8 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 5 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 966 ; FAILWITH } { CAR } ;
                          DUP 7 ;
                          GET 3 ;
                          DUP 7 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 5 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 971 ; FAILWITH } {} ;
                          PAIR %amount %increase ;
                          DUP 6 ;
                          GET 3 ;
                          DUP 6 ;
                          GET ;
                          IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                          GET 7 ;
                          PAIR %account ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { NIL operation } ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     CAR ;
                     GET 6 ;
                     CONTRACT %transfer
                       (list (pair (address %from_)
                                   (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id)))))) ;
                     IF_NONE { PUSH int 973 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair (address %from_)
                               (list %txs (pair (nat %amount) (pair (address %to_) (nat %token_id))))) ;
                     NIL (pair (nat %amount) (pair (address %to_) (nat %token_id))) ;
                     DUP 7 ;
                     GET 3 ;
                     DUP 7 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     GET 3 ;
                     CAR ;
                     DUP 8 ;
                     GET 3 ;
                     DUP 8 ;
                     GET ;
                     IF_NONE { PUSH int 959 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR %to_ %token_id ;
                     PUSH nat 1 ;
                     PAIR %amount ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR %from_ %txs ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     NONE (pair (pair (pair (address %author) (address %bidder))
                                      (pair (nat %cut) (pair (timestamp %end_timestamp) (address %nft_address))))
                                (pair (pair (nat %nft_id) (pair (bytes %payment_data) (string %payment_method)))
                                      (pair (nat %price) (pair (address %seller) (timestamp %start_timestamp))))) ;
                     DIG 5 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
