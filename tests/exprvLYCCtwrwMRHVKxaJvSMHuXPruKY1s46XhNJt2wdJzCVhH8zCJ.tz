{ parameter
    (or (or (pair %callCustom string bytes)
            (or (or (or (or (unit %accept_ownership)
                            (pair %burn (address %from_) (nat %token_id) (nat %amount)))
                        (or (or %call_FA2
                               (or (pair %balance_of
                                      (list %requests (pair (address %owner) (nat %token_id)))
                                      (contract %callback
                                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                   (list %transfer
                                      (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                               (list %update_operators
                                  (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                      (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))
                            (unit %confirm_migration)))
                    (or (or (bytes %drop_proposal) (nat %flush))
                        (or (pair %getVotePermitCounter (unit %param) (contract %callback nat))
                            (pair %get_total_supply (nat %token_id) (contract %callback nat)))))
                (or (or (or (address %migrate) (pair %mint (address %to_) (nat %token_id) (nat %amount)))
                        (or (pair %propose (nat %frozen_token) (map %proposal_metadata string bytes))
                            (nat %set_quorum_threshold)))
                    (or (or (nat %set_voting_period) (address %transfer_ownership))
                        (list %vote
                           (pair (pair %argument (bytes %proposal_key) (bool %vote_type) (nat %vote_amount))
                                 (option %permit (pair (key %key) (signature %signature)))))))))
        (pair %transfer_contract_tokens
           (address %contract_address)
           (list %params
              (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))) ;
  storage
    (pair (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                            (big_map %ledger (pair address nat) nat)
                            (big_map %metadata string bytes))
                      (pair (or %migration_status
                               (unit %not_in_migration)
                               (or (address %migratingTo) (address %migratedTo)))
                            (big_map %operators (pair (address %owner) (address %operator)) unit))
                      (address %pending_owner)
                      (nat %permits_counter))
                (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                            (big_map %proposals
                               bytes
                               (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                           (address %proposer)
                                           (nat %proposer_frozen_token))
                                     (pair (timestamp %start_date) (nat %upvotes))
                                     (list %voters (pair address nat)))))
                      (nat %quorum_threshold)
                      (address %token_address))
                (map %total_supply nat nat)
                (nat %voting_period))
          (pair (pair (pair (map %custom_entrypoints string bytes)
                            (lambda %decision_lambda
                               (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                 (address %proposer)
                                                 (nat %proposer_frozen_token))
                                           (pair (timestamp %start_date) (nat %upvotes))
                                           (list %voters (pair address nat)))
                                     (map string bytes))
                               (pair (list operation) (map string bytes))))
                      (nat %max_proposals)
                      (nat %max_quorum_threshold))
                (pair (nat %max_votes) (nat %max_voting_period))
                (nat %min_quorum_threshold)
                (nat %min_voting_period))
          (lambda %proposal_check
             (pair (pair (nat %frozen_token) (map %proposal_metadata string bytes))
                   (map string bytes))
             bool)
          (lambda %rejected_proposal_return_value
             (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                               (address %proposer)
                               (nat %proposer_frozen_token))
                         (pair (timestamp %start_date) (nat %upvotes))
                         (list %voters (pair address nat)))
                   (map string bytes))
             nat)) ;
  code { PUSH nat 0 ;
         PUSH nat 1 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair nat address) (pair (big_map (pair address nat) nat) (map nat nat))))
           (pair (big_map (pair address nat) nat) (map nat nat))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 5 ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             GET ;
             IF_NONE
               { DROP ;
                 DIG 2 ;
                 DROP ;
                 PUSH nat 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; PAIR }
                    { DROP ;
                      SWAP ;
                      DROP ;
                      PUSH nat 0 ;
                      SWAP ;
                      PAIR ;
                      PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                      PAIR ;
                      FAILWITH } }
               { DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET ;
                 IF_NONE
                   { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE
                   { DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                     PAIR ;
                     FAILWITH }
                   { DIG 2 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 5 ;
                     DIG 2 ;
                     SOME ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     UPDATE ;
                     DIG 3 ;
                     DIG 2 ;
                     SOME ;
                     DIG 3 ;
                     DIG 4 ;
                     PAIR ;
                     UPDATE ;
                     PAIR } } ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 PAIR ;
                 GET ;
                 IF_NONE { DIG 3 ; DUP ; DUG 4 } { DIG 4 ; DUP ; DUG 5 ; ADD } ;
                 DIG 6 ;
                 DIG 5 ;
                 DIG 3 ;
                 ADD ;
                 SOME ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 UPDATE ;
                 DIG 3 ;
                 DIG 2 ;
                 SOME ;
                 DIG 3 ;
                 DIG 4 ;
                 PAIR ;
                 UPDATE ;
                 PAIR } } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair (lambda
                                      (pair (pair (pair (pair nat (map string bytes)) (pair address nat))
                                                  (pair (pair timestamp nat) (list (pair address nat))))
                                            (map string bytes))
                                      nat)
                                   bool)
                             (pair (pair (pair (pair nat (map string bytes)) (pair address nat))
                                         (pair (pair timestamp nat) (list (pair address nat))))
                                   bytes))
                       (pair (pair (pair (pair address (map string bytes))
                                         (pair (big_map (pair address nat) nat) (big_map string bytes)))
                                   (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                         (pair address nat)))
                             (pair (pair (pair (set (pair timestamp bytes))
                                               (big_map
                                                  bytes
                                                  (pair (pair (pair nat (map string bytes)) (pair address nat))
                                                        (pair (pair timestamp nat) (list (pair address nat))))))
                                         (pair nat address))
                                   (pair (map nat nat) nat)))))
           (pair (pair (pair (pair address (map string bytes))
                             (pair (big_map (pair address nat) nat) (big_map string bytes)))
                       (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                             (pair address nat)))
                 (pair (pair (pair (set (pair timestamp bytes))
                                   (big_map
                                      bytes
                                      (pair (pair (pair nat (map string bytes)) (pair address nat))
                                            (pair (pair timestamp nat) (list (pair address nat))))))
                             (pair nat address))
                       (pair (map nat nat) nat)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             { DUP ; CAR ; DIP { CDR } } ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 3 ;
             IF { DIG 2 ; DROP ; DIG 2 ; SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CDR ; PAIR }
                { DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DIG 3 ;
                  SWAP ;
                  EXEC ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 4 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 2 ;
                  { DUP ; CAR ; DIP { CDR } } ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  SUB ;
                  ISNAT ;
                  IF_NONE { DIG 2 ; DROP ; DIG 2 } { DROP ; DIG 3 ; DROP ; DIG 2 } ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CDR ;
                  CAR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  DIG 9 ;
                  DUP ;
                  DUG 10 ;
                  PAIR ;
                  DIG 3 ;
                  DIG 3 ;
                  DIG 2 ;
                  { DUP ; CAR ; DIP { CDR } } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  PAIR ;
                  GET ;
                  IF_NONE
                    { DROP ;
                      DIG 2 ;
                      DROP ;
                      PUSH nat 0 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      COMPARE ;
                      EQ ;
                      IF { SWAP ; DROP ; PAIR }
                         { DROP ;
                           SWAP ;
                           DROP ;
                           PUSH nat 0 ;
                           SWAP ;
                           PAIR ;
                           PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                           PAIR ;
                           FAILWITH } }
                    { DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      GET ;
                      IF_NONE
                        { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                        { DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          SWAP ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      SUB ;
                      ISNAT ;
                      IF_NONE
                        { DROP ;
                          SWAP ;
                          DROP ;
                          SWAP ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          SWAP ;
                          PAIR ;
                          PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                          PAIR ;
                          FAILWITH }
                        { DIG 2 ;
                          DROP ;
                          DIG 4 ;
                          DROP ;
                          DIG 5 ;
                          DIG 2 ;
                          SOME ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          UPDATE ;
                          DIG 3 ;
                          DIG 2 ;
                          SOME ;
                          DIG 3 ;
                          DIG 4 ;
                          PAIR ;
                          UPDATE ;
                          PAIR } } ;
                  { DUP ; CAR ; DIP { CDR } } ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DIG 2 ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DUG 2 ;
                  SUB ;
                  ISNAT ;
                  IF_NONE { PUSH nat 0 } {} ;
                  PAIR } ;
             { DUP ; CAR ; DIP { CDR } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 3 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "PROPOSER_NOT_EXIST_IN_LEDGER" ; FAILWITH } {} ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             COMPARE ;
             GT ;
             IF { SWAP ; DROP } { DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CAR ;
             DUG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             PAIR ;
             GET ;
             IF_NONE
               { DROP ;
                 DIG 2 ;
                 DROP ;
                 PUSH nat 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; PAIR }
                    { DROP ;
                      SWAP ;
                      DROP ;
                      PUSH nat 0 ;
                      SWAP ;
                      PAIR ;
                      PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                      PAIR ;
                      FAILWITH } }
               { DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET ;
                 IF_NONE
                   { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                   { DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE
                   { DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                     PAIR ;
                     FAILWITH }
                   { DIG 2 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 5 ;
                     DIG 2 ;
                     SOME ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     UPDATE ;
                     DIG 3 ;
                     DIG 2 ;
                     SOME ;
                     DIG 3 ;
                     DIG 4 ;
                     PAIR ;
                     UPDATE ;
                     PAIR } } ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             DIG 2 ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 PAIR ;
                 GET ;
                 IF_NONE { DIG 3 ; DUP ; DUG 4 } { DIG 4 ; DUP ; DUG 5 ; ADD } ;
                 DIG 6 ;
                 DIG 5 ;
                 DIG 3 ;
                 ADD ;
                 SOME ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 UPDATE ;
                 DIG 3 ;
                 DIG 2 ;
                 SOME ;
                 DIG 3 ;
                 DIG 4 ;
                 PAIR ;
                 UPDATE ;
                 PAIR } ;
             DIG 2 ;
             CDR ;
             CDR ;
             ITER { SWAP ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    DIG 2 ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    DIG 3 ;
                    DIG 3 ;
                    PAIR ;
                    SWAP ;
                    DUG 2 ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    PAIR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    DIG 2 ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    PAIR ;
                    GET ;
                    IF_NONE
                      { DROP ;
                        DIG 2 ;
                        DROP ;
                        PUSH nat 0 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        COMPARE ;
                        EQ ;
                        IF { SWAP ; DROP ; PAIR }
                           { DROP ;
                             SWAP ;
                             DROP ;
                             PUSH nat 0 ;
                             SWAP ;
                             PAIR ;
                             PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                             PAIR ;
                             FAILWITH } }
                      { DIG 5 ;
                        DUP ;
                        DUG 6 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            SWAP ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                        DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        SUB ;
                        ISNAT ;
                        IF_NONE
                          { DROP ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DROP ;
                            DIG 2 ;
                            DROP ;
                            DIG 2 ;
                            DROP ;
                            SWAP ;
                            PAIR ;
                            PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                            PAIR ;
                            FAILWITH }
                          { DIG 2 ;
                            DROP ;
                            DIG 4 ;
                            DROP ;
                            DIG 5 ;
                            DIG 2 ;
                            SOME ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            UPDATE ;
                            DIG 3 ;
                            DIG 2 ;
                            SOME ;
                            DIG 3 ;
                            DIG 4 ;
                            PAIR ;
                            UPDATE ;
                            PAIR } } ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    DIG 6 ;
                    DUP ;
                    DUG 7 ;
                    PAIR ;
                    DIG 3 ;
                    DIG 3 ;
                    DIG 2 ;
                    { DUP ; CAR ; DIP { CDR } } ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    GET ;
                    IF_NONE
                      { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                      { DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        DIG 6 ;
                        DUP ;
                        DUG 7 ;
                        PAIR ;
                        GET ;
                        IF_NONE { DIG 3 ; DUP ; DUG 4 } { DIG 4 ; DUP ; DUG 5 ; ADD } ;
                        DIG 6 ;
                        DIG 5 ;
                        DIG 3 ;
                        ADD ;
                        SOME ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        UPDATE ;
                        DIG 3 ;
                        DIG 2 ;
                        SOME ;
                        DIG 3 ;
                        DIG 4 ;
                        PAIR ;
                        UPDATE ;
                        PAIR } } ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             { DUP ; CAR ; DIP { CDR } } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             DIG 4 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 4 ;
         { DUP ; CAR ; DIP { CDR } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         DIG 2 ;
         CDR ;
         DIG 2 ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             IF_LEFT
               { DROP ; SWAP }
               { IF_LEFT
                   { DROP ; SWAP }
                   { DIG 2 ; DROP ; PUSH string "MIGRATED" ; PAIR ; FAILWITH } } ;
             SWAP ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "ENTRYPOINT_NOT_FOUND" ; FAILWITH } {} ;
                 UNPACK
                   (lambda
                      (pair bytes
                            (pair (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                                                    (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)))
                                              (pair (pair (or %migration_status
                                                             (unit %not_in_migration)
                                                             (or (address %migratingTo) (address %migratedTo)))
                                                          (big_map %operators (pair (address %owner) (address %operator)) unit))
                                                    (pair (address %pending_owner) (nat %permits_counter))))
                                        (pair (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                                                          (big_map %proposals
                                                             bytes
                                                             (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                         (pair (address %proposer) (nat %proposer_frozen_token)))
                                                                   (pair (pair (timestamp %start_date) (nat %upvotes)) (list %voters (pair address nat))))))
                                                    (pair (nat %quorum_threshold) (address %token_address)))
                                              (pair (map %total_supply nat nat) (nat %voting_period))))
                                  (pair (pair (pair (pair (map %custom_entrypoints string bytes)
                                                          (lambda %decision_lambda
                                                             (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                               (pair (address %proposer) (nat %proposer_frozen_token)))
                                                                         (pair (pair (timestamp %start_date) (nat %upvotes)) (list %voters (pair address nat))))
                                                                   (map string bytes))
                                                             (pair (list operation) (map string bytes))))
                                                    (pair (nat %max_proposals) (nat %max_quorum_threshold)))
                                              (pair (pair (nat %max_votes) (nat %max_voting_period))
                                                    (pair (nat %min_quorum_threshold) (nat %min_voting_period))))
                                        (pair (lambda %proposal_check
                                                 (pair (pair (nat %frozen_token) (map %proposal_metadata string bytes))
                                                       (map string bytes))
                                                 bool)
                                              (lambda %rejected_proposal_return_value
                                                 (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                   (pair (address %proposer) (nat %proposer_frozen_token)))
                                                             (pair (pair (timestamp %start_date) (nat %upvotes)) (list %voters (pair address nat))))
                                                       (map string bytes))
                                                 nat)))))
                      (pair (list operation)
                            (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                                              (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes)))
                                        (pair (pair (or %migration_status
                                                       (unit %not_in_migration)
                                                       (or (address %migratingTo) (address %migratedTo)))
                                                    (big_map %operators (pair (address %owner) (address %operator)) unit))
                                              (pair (address %pending_owner) (nat %permits_counter))))
                                  (pair (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                                                    (big_map %proposals
                                                       bytes
                                                       (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                   (pair (address %proposer) (nat %proposer_frozen_token)))
                                                             (pair (pair (timestamp %start_date) (nat %upvotes)) (list %voters (pair address nat))))))
                                              (pair (nat %quorum_threshold) (address %token_address)))
                                        (pair (map %total_supply nat nat) (nat %voting_period)))))) ;
                 IF_NONE
                   { DROP 3 ; PUSH string "UNPACKING_FAILED" ; FAILWITH }
                   { DIG 3 ; DIG 3 ; PAIR ; DIG 2 ; CDR ; PAIR ; EXEC } }
               { PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 GT ;
                 IF { DROP 3 ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      PUSH string "FORBIDDEN_XTZ" ;
                      FAILWITH }
                    { IF_LEFT
                        { DIG 5 ;
                          DROP ;
                          IF_LEFT
                            { DIG 2 ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              IF_LEFT
                                { DIG 3 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  IF_LEFT
                                    { DROP ;
                                      SENDER ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DUP ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           CDR ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           SENDER ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR ;
                                           NIL operation ;
                                           PAIR }
                                         { DROP ; PUSH string "NOT_PENDING_ADMIN" ; FAILWITH } }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      DIG 4 ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      PAIR ;
                                      GET ;
                                      IF_NONE
                                        { DROP ;
                                          DIG 2 ;
                                          DROP ;
                                          PUSH nat 0 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { SWAP ; DROP ; PAIR }
                                             { DROP ;
                                               SWAP ;
                                               DROP ;
                                               PUSH nat 0 ;
                                               SWAP ;
                                               PAIR ;
                                               PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                               PAIR ;
                                               FAILWITH } }
                                        { DIG 5 ;
                                          DUP ;
                                          DUG 6 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          GET ;
                                          IF_NONE
                                            { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                            { DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              SWAP ;
                                              SUB ;
                                              ISNAT ;
                                              IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                          DIG 4 ;
                                          DUP ;
                                          DUG 5 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          SUB ;
                                          ISNAT ;
                                          IF_NONE
                                            { DROP ;
                                              SWAP ;
                                              DROP ;
                                              SWAP ;
                                              DROP ;
                                              DIG 2 ;
                                              DROP ;
                                              DIG 2 ;
                                              DROP ;
                                              SWAP ;
                                              PAIR ;
                                              PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                              PAIR ;
                                              FAILWITH }
                                            { DIG 2 ;
                                              DROP ;
                                              DIG 4 ;
                                              DROP ;
                                              DIG 5 ;
                                              DIG 2 ;
                                              SOME ;
                                              DIG 3 ;
                                              DUP ;
                                              DUG 4 ;
                                              UPDATE ;
                                              DIG 3 ;
                                              DIG 2 ;
                                              SOME ;
                                              DIG 3 ;
                                              DIG 4 ;
                                              PAIR ;
                                              UPDATE ;
                                              PAIR } } ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      CDR ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      PAIR ;
                                      DIG 4 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      PAIR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR } }
                                { IF_LEFT
                                    { IF_LEFT
                                        { IF_LEFT
                                            { DUP ;
                                              CAR ;
                                              MAP { DUP ;
                                                    CDR ;
                                                    DIG 5 ;
                                                    DUP ;
                                                    DUG 6 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DIG 7 ;
                                                    DUP ;
                                                    DUG 8 ;
                                                    DIG 2 ;
                                                    DUP ;
                                                    DUG 3 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    OR ;
                                                    IF {}
                                                       { DROP ;
                                                         PUSH unit Unit ;
                                                         PUSH string "FA2_TOKEN_UNDEFINED" ;
                                                         PAIR ;
                                                         FAILWITH } ;
                                                    DIG 3 ;
                                                    DUP ;
                                                    DUG 4 ;
                                                    CAR ;
                                                    CAR ;
                                                    CDR ;
                                                    CAR ;
                                                    SWAP ;
                                                    DIG 2 ;
                                                    DUP ;
                                                    DUG 3 ;
                                                    CAR ;
                                                    PAIR ;
                                                    GET ;
                                                    IF_NONE { PUSH nat 0 } {} ;
                                                    SWAP ;
                                                    PAIR } ;
                                              DIG 4 ;
                                              DROP ;
                                              DIG 4 ;
                                              DROP ;
                                              SWAP ;
                                              CDR ;
                                              PUSH mutez 0 ;
                                              DIG 2 ;
                                              TRANSFER_TOKENS ;
                                              SWAP ;
                                              NIL operation ;
                                              DIG 2 ;
                                              CONS ;
                                              PAIR }
                                            { ITER { DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     ITER { SWAP ;
                                                            DUP ;
                                                            DIG 3 ;
                                                            DUP ;
                                                            DUG 4 ;
                                                            CAR ;
                                                            SWAP ;
                                                            DUP ;
                                                            DUG 2 ;
                                                            CAR ;
                                                            CAR ;
                                                            CAR ;
                                                            CAR ;
                                                            SENDER ;
                                                            COMPARE ;
                                                            EQ ;
                                                            IF { SWAP ; DROP }
                                                               { DUP ;
                                                                 SENDER ;
                                                                 COMPARE ;
                                                                 EQ ;
                                                                 IF { SWAP ; DROP }
                                                                    { SENDER ;
                                                                      SWAP ;
                                                                      DUP ;
                                                                      DUG 2 ;
                                                                      PAIR ;
                                                                      DIG 2 ;
                                                                      CAR ;
                                                                      CDR ;
                                                                      CAR ;
                                                                      CDR ;
                                                                      SWAP ;
                                                                      MEM ;
                                                                      IF {}
                                                                         { DROP ; PUSH unit Unit ; PUSH string "FA2_NOT_OPERATOR" ; PAIR ; FAILWITH } } } ;
                                                            PUSH nat 0 ;
                                                            DIG 3 ;
                                                            DUP ;
                                                            DUG 4 ;
                                                            CDR ;
                                                            CDR ;
                                                            COMPARE ;
                                                            EQ ;
                                                            IF { DROP ; SWAP ; DROP }
                                                               { DIG 6 ;
                                                                 DUP ;
                                                                 DUG 7 ;
                                                                 DIG 3 ;
                                                                 DUP ;
                                                                 DUG 4 ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 COMPARE ;
                                                                 EQ ;
                                                                 IF { DIG 2 ; DUP ; DUG 3 ; CDR ; CAR }
                                                                    { DIG 5 ;
                                                                      DUP ;
                                                                      DUG 6 ;
                                                                      DIG 3 ;
                                                                      DUP ;
                                                                      DUG 4 ;
                                                                      CDR ;
                                                                      CAR ;
                                                                      COMPARE ;
                                                                      EQ ;
                                                                      IF { SWAP ;
                                                                           DUP ;
                                                                           DUG 2 ;
                                                                           CAR ;
                                                                           CAR ;
                                                                           CAR ;
                                                                           CAR ;
                                                                           SENDER ;
                                                                           COMPARE ;
                                                                           EQ ;
                                                                           IF { DIG 2 ; DUP ; DUG 3 ; CDR ; CAR }
                                                                              { PUSH string "FROZEN_TOKEN_NOT_TRANSFERABLE" ; FAILWITH } }
                                                                         { PUSH unit Unit ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } } ;
                                                                 DIG 2 ;
                                                                 DUP ;
                                                                 DUG 3 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 DIG 3 ;
                                                                 DUP ;
                                                                 DUG 4 ;
                                                                 CAR ;
                                                                 CAR ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 DIG 2 ;
                                                                 DUP ;
                                                                 DUG 3 ;
                                                                 PAIR ;
                                                                 DIG 3 ;
                                                                 DIG 5 ;
                                                                 DUP ;
                                                                 DUG 6 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 DIG 2 ;
                                                                 { DUP ; CAR ; DIP { CDR } } ;
                                                                 SWAP ;
                                                                 DUP ;
                                                                 DUG 2 ;
                                                                 SWAP ;
                                                                 DUP ;
                                                                 DUG 2 ;
                                                                 DIG 5 ;
                                                                 DUP ;
                                                                 DUG 6 ;
                                                                 PAIR ;
                                                                 GET ;
                                                                 IF_NONE
                                                                   { DROP ;
                                                                     DIG 2 ;
                                                                     DROP ;
                                                                     PUSH nat 0 ;
                                                                     DIG 2 ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { SWAP ; DROP ; PAIR }
                                                                        { DROP ;
                                                                          SWAP ;
                                                                          DROP ;
                                                                          PUSH nat 0 ;
                                                                          SWAP ;
                                                                          PAIR ;
                                                                          PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                                          PAIR ;
                                                                          FAILWITH } }
                                                                   { DIG 5 ;
                                                                     DUP ;
                                                                     DUG 6 ;
                                                                     DIG 2 ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     GET ;
                                                                     IF_NONE
                                                                       { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                                       { DIG 4 ;
                                                                         DUP ;
                                                                         DUG 5 ;
                                                                         SWAP ;
                                                                         SUB ;
                                                                         ISNAT ;
                                                                         IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                                                     DIG 4 ;
                                                                     DUP ;
                                                                     DUG 5 ;
                                                                     DIG 2 ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     SUB ;
                                                                     ISNAT ;
                                                                     IF_NONE
                                                                       { DROP ;
                                                                         SWAP ;
                                                                         DROP ;
                                                                         SWAP ;
                                                                         DROP ;
                                                                         DIG 2 ;
                                                                         DROP ;
                                                                         DIG 2 ;
                                                                         DROP ;
                                                                         SWAP ;
                                                                         PAIR ;
                                                                         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                                         PAIR ;
                                                                         FAILWITH }
                                                                       { DIG 2 ;
                                                                         DROP ;
                                                                         DIG 4 ;
                                                                         DROP ;
                                                                         DIG 5 ;
                                                                         DIG 2 ;
                                                                         SOME ;
                                                                         DIG 3 ;
                                                                         DUP ;
                                                                         DUG 4 ;
                                                                         UPDATE ;
                                                                         DIG 3 ;
                                                                         DIG 2 ;
                                                                         SOME ;
                                                                         DIG 3 ;
                                                                         DIG 4 ;
                                                                         PAIR ;
                                                                         UPDATE ;
                                                                         PAIR } } ;
                                                                 { DUP ; CAR ; DIP { CDR } } ;
                                                                 DIG 2 ;
                                                                 PAIR ;
                                                                 DIG 3 ;
                                                                 DUP ;
                                                                 DUG 4 ;
                                                                 CAR ;
                                                                 DIG 4 ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 DIG 2 ;
                                                                 { DUP ; CAR ; DIP { CDR } } ;
                                                                 DIG 4 ;
                                                                 DUP ;
                                                                 DUG 5 ;
                                                                 SWAP ;
                                                                 DUP ;
                                                                 DUG 2 ;
                                                                 GET ;
                                                                 IF_NONE
                                                                   { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                                   { DIG 2 ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     DIG 2 ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     DIG 6 ;
                                                                     DUP ;
                                                                     DUG 7 ;
                                                                     PAIR ;
                                                                     GET ;
                                                                     IF_NONE { DIG 3 ; DUP ; DUG 4 } { DIG 4 ; DUP ; DUG 5 ; ADD } ;
                                                                     DIG 6 ;
                                                                     DIG 5 ;
                                                                     DIG 3 ;
                                                                     ADD ;
                                                                     SOME ;
                                                                     DIG 3 ;
                                                                     DUP ;
                                                                     DUG 4 ;
                                                                     UPDATE ;
                                                                     DIG 3 ;
                                                                     DIG 2 ;
                                                                     SOME ;
                                                                     DIG 3 ;
                                                                     DIG 4 ;
                                                                     PAIR ;
                                                                     UPDATE ;
                                                                     PAIR } ;
                                                                 { DUP ; CAR ; DIP { CDR } } ;
                                                                 DIG 2 ;
                                                                 DUP ;
                                                                 DUG 3 ;
                                                                 CDR ;
                                                                 DIG 3 ;
                                                                 DUP ;
                                                                 DUG 4 ;
                                                                 CAR ;
                                                                 CDR ;
                                                                 DIG 4 ;
                                                                 DUP ;
                                                                 DUG 5 ;
                                                                 CAR ;
                                                                 CAR ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 DIG 3 ;
                                                                 PAIR ;
                                                                 DIG 4 ;
                                                                 CAR ;
                                                                 CAR ;
                                                                 CAR ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 DUP ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 CDR ;
                                                                 DIG 2 ;
                                                                 PAIR ;
                                                                 SWAP ;
                                                                 DUP ;
                                                                 DUG 2 ;
                                                                 CDR ;
                                                                 CAR ;
                                                                 PAIR ;
                                                                 SWAP ;
                                                                 CAR ;
                                                                 PAIR } } ;
                                                     SWAP ;
                                                     DROP } ;
                                              DIG 2 ;
                                              DROP ;
                                              DIG 2 ;
                                              DROP ;
                                              NIL operation ;
                                              PAIR } }
                                        { ITER { IF_LEFT { UNIT ; SOME ; PAIR } { NONE unit ; PAIR } ;
                                                 { DUP ; CAR ; DIP { CDR } } ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 6 ;
                                                 DUP ;
                                                 DUG 7 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DROP }
                                                    { DIG 5 ;
                                                      DUP ;
                                                      DUG 6 ;
                                                      SWAP ;
                                                      COMPARE ;
                                                      EQ ;
                                                      IF { PUSH string "OPERATION_PROHIBITED" ; FAILWITH }
                                                         { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } } ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 SENDER ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DIG 2 ;
                                                      DUP ;
                                                      DUG 3 ;
                                                      CDR ;
                                                      DIG 3 ;
                                                      DUP ;
                                                      DUG 4 ;
                                                      CAR ;
                                                      CDR ;
                                                      CDR ;
                                                      DIG 4 ;
                                                      DUP ;
                                                      DUG 5 ;
                                                      CAR ;
                                                      CDR ;
                                                      CAR ;
                                                      CDR ;
                                                      DIG 3 ;
                                                      DIG 4 ;
                                                      DUP ;
                                                      DUG 5 ;
                                                      CDR ;
                                                      CAR ;
                                                      DIG 5 ;
                                                      CAR ;
                                                      PAIR ;
                                                      UPDATE ;
                                                      DIG 3 ;
                                                      DUP ;
                                                      DUG 4 ;
                                                      CAR ;
                                                      CDR ;
                                                      CAR ;
                                                      CAR ;
                                                      PAIR ;
                                                      PAIR ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      PAIR ;
                                                      PAIR }
                                                    { DROP 3 ; PUSH string "NOT_OWNER" ; FAILWITH } } ;
                                          DIG 2 ;
                                          DROP ;
                                          DIG 2 ;
                                          DROP ;
                                          NIL operation ;
                                          PAIR } }
                                    { DIG 3 ;
                                      DROP ;
                                      DIG 3 ;
                                      DROP 2 ;
                                      DUP ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      IF_LEFT
                                        { DROP 2 ; PUSH string "NOT_MIGRATING" ; FAILWITH }
                                        { IF_LEFT
                                            { SENDER ;
                                              SWAP ;
                                              DUP ;
                                              DUG 2 ;
                                              COMPARE ;
                                              EQ ;
                                              IF { SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CDR ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   DIG 3 ;
                                                   RIGHT address ;
                                                   RIGHT unit ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DIG 2 ;
                                                   CAR ;
                                                   CAR ;
                                                   PAIR ;
                                                   PAIR ;
                                                   NIL operation ;
                                                   PAIR }
                                                 { DROP 2 ; PUSH string "NOT_MIGRATION_TARGET" ; FAILWITH } }
                                            { SWAP ; DROP ; PUSH string "MIGRATED" ; PAIR ; FAILWITH } } } } }
                            { DIG 5 ;
                              DROP ;
                              DIG 5 ;
                              DROP ;
                              IF_LEFT
                                { IF_LEFT
                                    { SWAP ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      DUP ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      SWAP ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      SWAP ;
                                      GET ;
                                      IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      SWAP ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      INT ;
                                      SWAP ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      ADD ;
                                      NOW ;
                                      COMPARE ;
                                      GE ;
                                      IF { DUP ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           COMPARE ;
                                           GT ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DIG 2 ;
                                           DUP ;
                                           DUG 3 ;
                                           DUP ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           SWAP ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           ADD ;
                                           SWAP ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           CAR ;
                                           COMPARE ;
                                           LE ;
                                           AND ;
                                           IF { SWAP ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                PAIR ;
                                                PUSH bool True ;
                                                DIG 5 ;
                                                CDR ;
                                                CDR ;
                                                PAIR ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 4 ;
                                                SWAP ;
                                                EXEC ;
                                                DUG 2 ;
                                                CDR ;
                                                CAR ;
                                                CAR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CDR ;
                                                CDR ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CDR ;
                                                CAR ;
                                                CDR ;
                                                DIG 4 ;
                                                DUP ;
                                                DUG 5 ;
                                                CDR ;
                                                CAR ;
                                                CAR ;
                                                CDR ;
                                                DIG 5 ;
                                                DUP ;
                                                DUG 6 ;
                                                CDR ;
                                                CAR ;
                                                CAR ;
                                                CAR ;
                                                DIG 5 ;
                                                DIG 5 ;
                                                PAIR ;
                                                PUSH bool False ;
                                                SWAP ;
                                                UPDATE ;
                                                PAIR ;
                                                PAIR ;
                                                PAIR ;
                                                SWAP ;
                                                CAR ;
                                                PAIR ;
                                                NIL operation ;
                                                PAIR }
                                              { DROP 4 ;
                                                SWAP ;
                                                DROP ;
                                                PUSH string "FAIL_DROP_PROPOSAL_NOT_ACCEPTED" ;
                                                FAILWITH } }
                                         { DROP 4 ;
                                           SWAP ;
                                           DROP ;
                                           PUSH string "FAIL_DROP_PROPOSAL_NOT_OVER" ;
                                           FAILWITH } }
                                    { SWAP ;
                                      DUG 2 ;
                                      PUSH nat 0 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIG 2 ; DROP ; PUSH string "BAD_ENTRYPOINT_PARAMETER" ; FAILWITH }
                                         { DIG 2 } ;
                                      SWAP ;
                                      PUSH nat 0 ;
                                      PAIR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      NIL operation ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      ITER { SWAP ;
                                             { DUP ; CAR ; DIP { CDR } } ;
                                             { DUP ; CAR ; DIP { CDR } } ;
                                             DIG 3 ;
                                             { DUP ; CAR ; DIP { CDR } } ;
                                             DIG 4 ;
                                             DIG 3 ;
                                             PAIR ;
                                             DIG 3 ;
                                             DIG 3 ;
                                             PAIR ;
                                             DIG 2 ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             DIG 2 ;
                                             { DUP ; CAR ; DIP { CDR } } ;
                                             DIG 4 ;
                                             { DUP ; CAR ; DIP { CDR } } ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             SWAP ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             SWAP ;
                                             GET ;
                                             IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             CDR ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             COMPARE ;
                                             LT ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             SWAP ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             INT ;
                                             SWAP ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             ADD ;
                                             NOW ;
                                             COMPARE ;
                                             GE ;
                                             AND ;
                                             IF { DIG 2 ;
                                                  DUP ;
                                                  DUG 3 ;
                                                  CDR ;
                                                  PUSH nat 1 ;
                                                  DIG 4 ;
                                                  CAR ;
                                                  ADD ;
                                                  PAIR ;
                                                  SWAP ;
                                                  DUP ;
                                                  DUG 2 ;
                                                  CAR ;
                                                  CAR ;
                                                  CAR ;
                                                  DIG 2 ;
                                                  DUP ;
                                                  DUG 3 ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  COMPARE ;
                                                  GT ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  DIG 3 ;
                                                  DUP ;
                                                  DUG 4 ;
                                                  DUP ;
                                                  CAR ;
                                                  CAR ;
                                                  CAR ;
                                                  SWAP ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  ADD ;
                                                  SWAP ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  CAR ;
                                                  COMPARE ;
                                                  LE ;
                                                  AND ;
                                                  DIG 5 ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  DIG 4 ;
                                                  DUP ;
                                                  DUG 5 ;
                                                  PAIR ;
                                                  DIG 2 ;
                                                  DUP ;
                                                  DUG 3 ;
                                                  DIG 8 ;
                                                  DUP ;
                                                  DUG 9 ;
                                                  CDR ;
                                                  CDR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DIG 10 ;
                                                  DUP ;
                                                  DUG 11 ;
                                                  SWAP ;
                                                  EXEC ;
                                                  SWAP ;
                                                  IF { DUP ;
                                                       CAR ;
                                                       CAR ;
                                                       CAR ;
                                                       CDR ;
                                                       DIG 3 ;
                                                       PAIR ;
                                                       DIG 5 ;
                                                       CAR ;
                                                       CAR ;
                                                       CAR ;
                                                       CDR ;
                                                       SWAP ;
                                                       EXEC ;
                                                       { DUP ; CAR ; DIP { CDR } } ;
                                                       DIG 2 ;
                                                       DUP ;
                                                       DUG 3 ;
                                                       CDR ;
                                                       DIG 3 ;
                                                       DUP ;
                                                       DUG 4 ;
                                                       CAR ;
                                                       CDR ;
                                                       DIG 4 ;
                                                       DUP ;
                                                       DUG 5 ;
                                                       CAR ;
                                                       CAR ;
                                                       CDR ;
                                                       DIG 4 ;
                                                       DIG 5 ;
                                                       CAR ;
                                                       CAR ;
                                                       CAR ;
                                                       CAR ;
                                                       PAIR ;
                                                       PAIR ;
                                                       PAIR ;
                                                       PAIR ;
                                                       SWAP ;
                                                       PAIR }
                                                     { DIG 2 ; DROP ; DIG 4 ; DROP ; NIL operation ; PAIR } ;
                                                  { DUP ; CAR ; DIP { CDR } } ;
                                                  DIG 3 ;
                                                  ITER { CONS } ;
                                                  DUG 2 ;
                                                  DIG 3 ;
                                                  DIG 4 ;
                                                  DIG 2 ;
                                                  DUP ;
                                                  DUG 3 ;
                                                  CDR ;
                                                  CDR ;
                                                  DIG 3 ;
                                                  DUP ;
                                                  DUG 4 ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 4 ;
                                                  DUP ;
                                                  DUG 5 ;
                                                  CDR ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 5 ;
                                                  DUP ;
                                                  DUG 6 ;
                                                  CDR ;
                                                  CAR ;
                                                  CAR ;
                                                  CAR ;
                                                  DIG 5 ;
                                                  DIG 5 ;
                                                  PAIR ;
                                                  PUSH bool False ;
                                                  SWAP ;
                                                  UPDATE ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  SWAP ;
                                                  CAR ;
                                                  PAIR ;
                                                  DIG 2 ;
                                                  PAIR ;
                                                  PAIR }
                                                { DROP ;
                                                  DIG 2 ;
                                                  DROP ;
                                                  DIG 3 ;
                                                  DROP ;
                                                  DIG 3 ;
                                                  DROP ;
                                                  SWAP ;
                                                  DUG 2 ;
                                                  PAIR ;
                                                  PAIR } } ;
                                      SWAP ;
                                      DROP ;
                                      DIG 2 ;
                                      DROP ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      SWAP ;
                                      DROP } }
                                { DIG 2 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  IF_LEFT
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      NIL operation ;
                                      DIG 2 ;
                                      CDR ;
                                      PUSH mutez 0 ;
                                      DIG 4 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      TRANSFER_TOKENS ;
                                      CONS ;
                                      PAIR }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      GET ;
                                      IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
                                      DIG 2 ;
                                      NIL operation ;
                                      DIG 3 ;
                                      CDR ;
                                      PUSH mutez 0 ;
                                      DIG 4 ;
                                      TRANSFER_TOKENS ;
                                      CONS ;
                                      PAIR } } } }
                        { DIG 4 ;
                          DROP ;
                          DIG 5 ;
                          DROP ;
                          IF_LEFT
                            { IF_LEFT
                                { DIG 2 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  IF_LEFT
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      DUP ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      DIG 4 ;
                                      LEFT address ;
                                      RIGHT unit ;
                                      PAIR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      DIG 4 ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE
                                        { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                        { DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          DIG 6 ;
                                          DUP ;
                                          DUG 7 ;
                                          PAIR ;
                                          GET ;
                                          IF_NONE { DIG 3 ; DUP ; DUG 4 } { DIG 4 ; DUP ; DUG 5 ; ADD } ;
                                          DIG 6 ;
                                          DIG 5 ;
                                          DIG 3 ;
                                          ADD ;
                                          SOME ;
                                          DIG 3 ;
                                          DUP ;
                                          DUG 4 ;
                                          UPDATE ;
                                          DIG 3 ;
                                          DIG 2 ;
                                          SOME ;
                                          DIG 3 ;
                                          DIG 4 ;
                                          PAIR ;
                                          UPDATE ;
                                          PAIR } ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      CDR ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      PAIR ;
                                      DIG 4 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      PAIR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR } }
                                { IF_LEFT
                                    { DUP ;
                                      DUG 2 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      DIG 2 ;
                                      PAIR ;
                                      SWAP ;
                                      CDR ;
                                      CAR ;
                                      SWAP ;
                                      EXEC ;
                                      IF {} { DROP ; PUSH string "FAIL_PROPOSAL_CHECK" ; FAILWITH } ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 3 ;
                                      SWAP ;
                                      DROP ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SIZE ;
                                      SWAP ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      COMPARE ;
                                      LE ;
                                      IF { DROP ; PUSH string "MAX_PROPOSALS_REACHED" ; FAILWITH } {} ;
                                      DUP ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 7 ;
                                      SENDER ;
                                      PAIR ;
                                      GET ;
                                      IF_NONE
                                        { SWAP ;
                                          DROP ;
                                          PUSH nat 0 ;
                                          SWAP ;
                                          CAR ;
                                          PAIR ;
                                          PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                          PAIR ;
                                          FAILWITH }
                                        { SWAP ;
                                          CAR ;
                                          COMPARE ;
                                          GT ;
                                          IF { DROP ; PUSH string "PROPOSAL_INSUFFICIENT_BALANCE" ; FAILWITH } {} } ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      SWAP ;
                                      PAIR ;
                                      SENDER ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      DIG 4 ;
                                      SWAP ;
                                      EXEC ;
                                      { DUP ; CAR ; DIP { CDR } } ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      CDR ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      PAIR ;
                                      DIG 4 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      DIG 2 ;
                                      PAIR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      DUP ;
                                      DUG 2 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      SENDER ;
                                      SWAP ;
                                      PAIR ;
                                      PACK ;
                                      BLAKE2B ;
                                      SWAP ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      MEM ;
                                      IF { DROP ; PUSH string "PROPOSAL_NOT_UNIQUE" ; FAILWITH } {} ;
                                      NOW ;
                                      NIL (pair address nat) ;
                                      PUSH nat 0 ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      PAIR ;
                                      PAIR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      SENDER ;
                                      PAIR ;
                                      DIG 4 ;
                                      CDR ;
                                      PUSH nat 0 ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CDR ;
                                      CDR ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      DIG 3 ;
                                      DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      SWAP ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      PAIR ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      DIG 6 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      DIG 6 ;
                                      DIG 6 ;
                                      PAIR ;
                                      PUSH bool True ;
                                      SWAP ;
                                      UPDATE ;
                                      PAIR ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR }
                                    { DIG 4 ;
                                      DROP ;
                                      DIG 4 ;
                                      DROP ;
                                      SWAP ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      COMPARE ;
                                      GT ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      DIG 4 ;
                                      CAR ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      COMPARE ;
                                      LT ;
                                      OR ;
                                      IF { DROP ; PUSH string "OUT_OF_BOUND_QUORUM_THRESHOLD" ; FAILWITH } {} ;
                                      DUP ;
                                      CDR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      PAIR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR } } }
                            { IF_LEFT
                                { DIG 4 ;
                                  DROP ;
                                  DIG 4 ;
                                  DROP ;
                                  IF_LEFT
                                    { SWAP ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      COMPARE ;
                                      GT ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      DIG 4 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      CDR ;
                                      COMPARE ;
                                      LT ;
                                      OR ;
                                      IF { DROP ; PUSH string "OUT_OF_BOUND_VOTING_PERIOD" ; FAILWITH } {} ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      SWAP ;
                                      CAR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR }
                                    { DIG 2 ;
                                      DROP ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      CAR ;
                                      SENDER ;
                                      COMPARE ;
                                      EQ ;
                                      IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                      DUP ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      PAIR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation ;
                                      PAIR } }
                                { ITER { DUP ;
                                         CDR ;
                                         IF_NONE
                                           { SWAP ; SENDER ; DIG 2 ; CAR ; PAIR ; PAIR }
                                           { DUG 2 ;
                                             CAR ;
                                             DUP ;
                                             DUG 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             PUSH nat 1 ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             ADD ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             PAIR ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP ;
                                             DIG 2 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             PAIR ;
                                             SELF_ADDRESS ;
                                             CHAIN_ID ;
                                             PAIR ;
                                             PAIR ;
                                             PACK ;
                                             DIG 2 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             CAR ;
                                             CHECK_SIGNATURE ;
                                             IF { SWAP ; DROP ; CAR ; HASH_KEY ; IMPLICIT_ACCOUNT ; ADDRESS }
                                                { DROP ; PUSH string "MISSIGNED" ; PAIR ; FAILWITH } ;
                                             DIG 2 ;
                                             PAIR ;
                                             PAIR } ;
                                         { DUP ; CAR ; DIP { CDR } } ;
                                         { DUP ; CAR ; DIP { CDR } } ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         SWAP ;
                                         GET ;
                                         IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         DIG 6 ;
                                         DUP ;
                                         DUG 7 ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         CDR ;
                                         CDR ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         DIG 3 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         ADD ;
                                         ADD ;
                                         SWAP ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         COMPARE ;
                                         LT ;
                                         IF { DROP ; PUSH string "MAX_VOTES_REACHED" ; FAILWITH } { DROP } ;
                                         DIG 3 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         CDR ;
                                         CDR ;
                                         INT ;
                                         SWAP ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         ADD ;
                                         NOW ;
                                         COMPARE ;
                                         GE ;
                                         IF { DROP ; PUSH string "VOTING_PERIOD_OVER" ; FAILWITH } {} ;
                                         DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         DIG 10 ;
                                         DUP ;
                                         DUG 11 ;
                                         DIG 3 ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE
                                           { PUSH nat 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             CDR ;
                                             PAIR ;
                                             PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                             PAIR ;
                                             FAILWITH }
                                           {} ;
                                         SWAP ;
                                         CDR ;
                                         CDR ;
                                         COMPARE ;
                                         GT ;
                                         IF { DROP ; PUSH string "VOTING_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                         DIG 3 ;
                                         DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         CDR ;
                                         CAR ;
                                         IF { DIG 2 ;
                                              DUP ;
                                              DUG 3 ;
                                              CDR ;
                                              CDR ;
                                              DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CDR ;
                                              CDR ;
                                              DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CDR ;
                                              CAR ;
                                              CDR ;
                                              ADD ;
                                              DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CDR ;
                                              CAR ;
                                              CAR ;
                                              PAIR ;
                                              PAIR ;
                                              DIG 3 ;
                                              CAR ;
                                              PAIR }
                                            { DIG 2 ;
                                              DUP ;
                                              DUG 3 ;
                                              CDR ;
                                              DIG 3 ;
                                              DUP ;
                                              DUG 4 ;
                                              CAR ;
                                              CDR ;
                                              DIG 4 ;
                                              DUP ;
                                              DUG 5 ;
                                              CAR ;
                                              CAR ;
                                              CDR ;
                                              DIG 6 ;
                                              DUP ;
                                              DUG 7 ;
                                              CDR ;
                                              CDR ;
                                              DIG 6 ;
                                              CAR ;
                                              CAR ;
                                              CAR ;
                                              ADD ;
                                              PAIR ;
                                              PAIR ;
                                              PAIR } ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         CDR ;
                                         CDR ;
                                         CAR ;
                                         DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         PAIR ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         DIG 5 ;
                                         DUP ;
                                         DUG 6 ;
                                         CDR ;
                                         CDR ;
                                         PAIR ;
                                         PAIR ;
                                         DIG 7 ;
                                         DUP ;
                                         DUG 8 ;
                                         SWAP ;
                                         EXEC ;
                                         { DUP ; CAR ; DIP { CDR } } ;
                                         DIG 4 ;
                                         DUP ;
                                         DUG 5 ;
                                         CDR ;
                                         DIG 5 ;
                                         DUP ;
                                         DUG 6 ;
                                         CAR ;
                                         CDR ;
                                         DIG 6 ;
                                         DUP ;
                                         DUG 7 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         CDR ;
                                         DIG 3 ;
                                         PAIR ;
                                         DIG 6 ;
                                         DUP ;
                                         DUG 7 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         DUP ;
                                         CDR ;
                                         CDR ;
                                         CDR ;
                                         DIG 2 ;
                                         PAIR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         CAR ;
                                         PAIR ;
                                         DUP ;
                                         CDR ;
                                         CDR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         DIG 5 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         DUP ;
                                         DUG 5 ;
                                         CDR ;
                                         CDR ;
                                         DIG 7 ;
                                         DUP ;
                                         DUG 8 ;
                                         CDR ;
                                         CDR ;
                                         DIG 7 ;
                                         PAIR ;
                                         CONS ;
                                         DIG 5 ;
                                         DUP ;
                                         DUG 6 ;
                                         CDR ;
                                         CAR ;
                                         PAIR ;
                                         DIG 5 ;
                                         CAR ;
                                         PAIR ;
                                         DIG 5 ;
                                         CAR ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE ;
                                         DIG 3 ;
                                         DUP ;
                                         DUG 4 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP ;
                                         CAR ;
                                         PAIR } ;
                                  SWAP ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  DIG 2 ;
                                  DROP ;
                                  NIL operation ;
                                  PAIR } } } } } }
           { DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 2 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE
               { DROP 2 ; PUSH string "FAIL_TRANSFER_CONTRACT_TOKENS" ; FAILWITH }
               { PUSH mutez 0 ;
                 DIG 3 ;
                 CDR ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } ;
         { DUP ; CAR ; DIP { CDR } } ;
         DUG 2 ;
         PAIR ;
         SWAP ;
         PAIR } }
