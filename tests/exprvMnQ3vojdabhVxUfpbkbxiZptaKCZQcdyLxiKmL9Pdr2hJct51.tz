{ parameter
    (or (or (or (address %addAdmin) (map %addVoters address nat))
            (or (string %init) (address %removeAdmin)))
        (or (int %startVote) (nat %vote))) ;
  storage
    (pair (pair (pair (set %admins address) (timestamp %enddate))
                (pair (string %proposal) (map %voters address nat)))
          (map %votes nat nat)) ;
  code { LAMBDA
           (set address)
           unit
           { DUP ;
             SENDER ;
             MEM ;
             NOT ;
             IF { PUSH string "You don't have this privilege." ; FAILWITH }
                { PUSH unit Unit } ;
             DROP 2 ;
             UNIT } ;
         LAMBDA
           timestamp
           unit
           { DUP ;
             NOW ;
             COMPARE ;
             LT ;
             IF { PUSH string "The vote is still ongoing." ; FAILWITH }
                { PUSH unit Unit } ;
             DROP 2 ;
             PUSH unit Unit } ;
         LAMBDA
           timestamp
           unit
           { DUP ;
             NOW ;
             COMPARE ;
             GT ;
             IF { PUSH string "The vote has ended." ; FAILWITH } { PUSH unit Unit } ;
             DROP 2 ;
             UNIT } ;
         DIP 3 { DUP } ;
         DIG 3 ;
         CDR ;
         DIP 4 { DUP } ;
         DIG 4 ;
         DIP { DIP { DUP } ; SWAP } ;
         PAIR ;
         DIP { DIP 3 { DUP } ; DIG 3 ; DIP { DIP 2 { DUP } ; DIG 2 } ; PAIR } ;
         PAIR ;
         DIP { DUP } ;
         PAIR ;
         DIP 5 { DUP } ;
         DIG 5 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIP 4 { DUP } ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     EXEC ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     DIP 6 { DUP } ;
                     DIG 6 ;
                     DIP 3 { DUP } ;
                     DIG 3 ;
                     DIP { DIP 7 { DUP } ; DIG 7 ; CAR ; CAR ; CAR ; PUSH bool True } ;
                     UPDATE ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 2 } }
                   { DUP ;
                     ITER { DROP } ;
                     PUSH unit Unit ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIP 4 { DUP } ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     EXEC ;
                     DIP 5 { DUP } ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     EXEC ;
                     DIP 5 { DUP } ;
                     DIG 5 ;
                     DIP 7 { DUP } ;
                     DIG 7 ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 0 ;
                     SOME ;
                     DIP { PUSH nat 0 ;
                           SOME ;
                           DIP { PUSH nat 0 ; SOME ; EMPTY_MAP nat nat ; SWAP ; PUSH nat 1 ; UPDATE } ;
                           PUSH nat 2 ;
                           UPDATE } ;
                     PUSH nat 3 ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 3 } }
                   { DIP 4 { DUP } ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIP { DIP 7 { DUP } ; DIG 7 } ;
                     EXEC ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     DIP 6 { DUP } ;
                     DIG 6 ;
                     DIP 3 { DUP } ;
                     DIG 3 ;
                     DIP { DIP 7 { DUP } ; DIG 7 ; CAR ; CAR ; CAR ; PUSH bool False } ;
                     UPDATE ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 NOW ;
                 ADD ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIP { DIP 6 { DUP } ; DIG 6 } ;
                 EXEC ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 DIP 6 { DUP } ;
                 DIG 6 ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DUP ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIP { DIP 5 { DUP } ; DIG 5 } ;
                 EXEC ;
                 DIP 5 { DUP } ;
                 DIG 5 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIP 6 { DUP } ;
                 DIG 6 ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DIP 3 { DUP } ;
                       DIG 3 ;
                       DIP { DIP 7 { DUP } ; DIG 7 ; CDR } ;
                       GET ;
                       IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                       DIP { DIP { DUP } ; SWAP } ;
                       ADD ;
                       SOME ;
                       DIP { DIP 7 { DUP } ; DIG 7 ; CDR } } ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 NONE nat ;
                 SENDER ;
                 UPDATE ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIP 7 { DUP } ;
                 DIG 7 ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 CAR ;
                 DIP { DUP } ;
                 PAIR ;
                 DIP { DROP 6 } } ;
             DIP { DROP } } ;
         DIP { DROP } ;
         DUP ;
         CDR ;
         NIL operation ;
         PAIR ;
         DIP { DROP 6 } } }
