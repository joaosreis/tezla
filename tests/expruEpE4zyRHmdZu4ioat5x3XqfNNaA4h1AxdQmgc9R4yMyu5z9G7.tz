{ parameter
    (or (or (or (pair %gameEntryHook
                   (address %player)
                   (pair (list %guess_lists (list nat)) (pair (list %custom_price_list nat) (nat %price))))
                (pair %playCard
                   (list %sol_prophecy nat)
                   (pair (string %nonce_prophecy) (bool %action_get_card))))
            (or (pair %playResolve
                   (list %sol_prophecy nat)
                   (pair (string %nonce_prophecy) (address %player_address)))
                (bytes %prophecyCallbackEntry)))
        (or (or (bytes %prophecyCallbackOnResolve)
                (pair %setupContract
                   (address %oracle)
                   (pair (address %tezcas_contract) (pair (address %fa2_contract) (set %owners address)))))
            (pair %setupGame
               (nat %min_entry_price)
               (pair (nat %max_entry_price) (pair (bool %enable) (nat %reward_ratio_bj)))))) ;
  storage
    (pair (pair (pair %contract_infos
                   (pair (address %fa2_contract) (address %oracle))
                   (pair (set %owners address) (address %tezcas_contract)))
                (pair %game_infos
                   (pair (bool %enable) (nat %max_entry_price))
                   (pair (nat %min_entry_price) (nat %reward_ratio_bj))))
          (big_map %games
             address
             (pair (pair (pair (pair (list %card_sums nat) (list %contract_card_prophecy nat))
                               (pair (bytes %contract_card_prophecy_hash) (bool %ended)))
                         (pair (pair (nat %highest_value) (list %player_cards nat))
                               (pair (list %player_cards_prophecy_hash bytes) (nat %price))))
                   (pair (map %sols_list nat (list nat)) (timestamp %start_at))))) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair (map nat (list nat)) nat)
           (map nat (list nat))
           { UNPAIR ;
             DUP ;
             SIZE ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ;
                  PUSH nat 1 ;
                  DUP 3 ;
                  COMPARE ;
                  GT ;
                  IF { NIL nat ; DIG 2 ; CONS ; SOME ; PUSH nat 0 ; UPDATE }
                     { SWAP ;
                       DROP ;
                       NIL nat ;
                       PUSH nat 1 ;
                       CONS ;
                       SOME ;
                       PUSH nat 0 ;
                       UPDATE ;
                       NIL nat ;
                       PUSH nat 11 ;
                       CONS ;
                       SOME ;
                       PUSH nat 1 ;
                       UPDATE } }
                { PUSH nat 1 ;
                  DUP 4 ;
                  COMPARE ;
                  GT ;
                  IF { DROP ;
                       DUP ;
                       ITER { SWAP ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              DUP 4 ;
                              CONS ;
                              SOME ;
                              DIG 2 ;
                              CDR ;
                              CAR ;
                              UPDATE } ;
                       SWAP ;
                       DROP }
                     { DIG 2 ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       ITER { SWAP ;
                              DUP ;
                              CDR ;
                              DIG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              PUSH nat 1 ;
                              DIG 2 ;
                              CAR ;
                              ADD ;
                              PAIR } ;
                       CDR ;
                       DUP ;
                       DUG 2 ;
                       ITER { SWAP ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              DIG 2 ;
                              CDR ;
                              CDR ;
                              PUSH nat 2 ;
                              DUP 5 ;
                              SIZE ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              DUP 3 ;
                              COMPARE ;
                              LT ;
                              IF { DIG 2 ; SWAP ; PUSH nat 1 ; CONS ; SOME ; DIG 2 ; UPDATE }
                                 { DIG 2 ; SWAP ; PUSH nat 11 ; CONS ; SOME ; DIG 2 ; UPDATE } } ;
                       SWAP ;
                       DROP } } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair (map nat (list nat)) nat) (map nat (list nat))) (list nat))
           (list nat)
           { UNPAIR ;
             SWAP ;
             EMPTY_MAP nat (list nat) ;
             SWAP ;
             ITER { SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
             SWAP ;
             DROP ;
             NIL nat ;
             SWAP ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    CDR ;
                    DUP ;
                    PUSH nat 0 ;
                    PUSH nat 0 ;
                    PAIR ;
                    PAIR ;
                    SWAP ;
                    LAMBDA
                      (pair (list nat) (pair (pair nat nat) (list nat)))
                      (pair bool (pair (pair nat nat) (list nat)))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        CAR ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        DIG 3 ;
                        SIZE ;
                        DUP 3 ;
                        COMPARE ;
                        LT ;
                        IF { DUP ;
                             IF_CONS { SWAP ; DROP ; SOME } { NONE nat } ;
                             IF_NONE { PUSH string "TZC_BJ_SUM_N_NO_HEAD" ; FAILWITH } {} ;
                             SWAP ;
                             IF_CONS { DROP ; SOME } { NONE (list nat) } ;
                             IF_NONE { PUSH string "TZC_BJ_SUM_N_NO_TAIL" ; FAILWITH } {} ;
                             SWAP ;
                             DUP 4 ;
                             CAR ;
                             CDR ;
                             ADD ;
                             PUSH nat 1 ;
                             DIG 3 ;
                             ADD ;
                             DIG 2 ;
                             DIG 3 ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DIG 3 ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             CDR ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             PUSH bool True ;
                             PAIR }
                           { DROP 2 ; PUSH bool False ; PAIR } } ;
                    SWAP ;
                    APPLY ;
                    SWAP ;
                    PUSH bool True ;
                    LOOP { DIP { DUP } ; EXEC ; UNPAIR } ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    CAR ;
                    SWAP ;
                    CAR ;
                    CDR ;
                    CONS } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (list nat) nat)
           (list nat)
           { UNPAIR ;
             PUSH nat 0 ;
             NIL nat ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             SWAP ;
             LAMBDA
               (pair nat (pair (pair (list nat) (list nat)) nat))
               (pair bool (pair (pair (list nat) (list nat)) nat))
               { UNPAIR ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DUP 3 ;
                 COMPARE ;
                 LT ;
                 IF { DUP ;
                      IF_CONS { SWAP ; DROP ; SOME } { NONE nat } ;
                      IF_NONE { PUSH string "TZC_BJ_SUM_N_NO_HEAD" ; FAILWITH } {} ;
                      SWAP ;
                      IF_CONS { DROP ; SOME } { NONE (list nat) } ;
                      IF_NONE { PUSH string "TZC_BJ_SUM_N_NO_TAIL" ; FAILWITH } {} ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      ADD ;
                      DUP 4 ;
                      CDR ;
                      DUP 5 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      DIG 4 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      CONS ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      CAR ;
                      PAIR ;
                      PUSH bool True ;
                      PAIR }
                    { DROP 2 ; PUSH bool False ; PAIR } } ;
             SWAP ;
             APPLY ;
             SWAP ;
             PUSH bool True ;
             LOOP { DIP { DUP } ; EXEC ; UNPAIR } ;
             SWAP ;
             DROP ;
             CAR ;
             CDR } ;
         LAMBDA (pair (list nat) nat) (list nat) { UNPAIR ; SWAP ; CONS } ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             PUSH nat 21 ;
             DUP 3 ;
             COMPARE ;
             LE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP 4 ;
             COMPARE ;
             GT ;
             AND ;
             IF { DROP } { SWAP ; DROP } } ;
         LAMBDA
           (pair (pair (list nat) string) bytes)
           unit
           { UNPAIR ;
             UNPAIR ;
             SWAP ;
             PACK ;
             SWAP ;
             NIL nat ;
             SWAP ;
             ITER { CONS } ;
             ITER { PACK ; CONCAT } ;
             SHA256 ;
             SWAP ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "TZC_BJ_WRONG_RESOLVER" ; FAILWITH } {} ;
             UNIT } ;
         DIG 8 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 9 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     PUSH string "TZC_BJ_CONTRACT_UNAUTHORIZED" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "TZC_BJ_CONTRACT_DISABLED" ;
                     PUSH bool True ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE
                       { PUSH unit Unit }
                       { PUSH bool False ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "TZC_PLAYER_ALREADY_IN_GAME" ; FAILWITH }
                            { PUSH unit Unit } } ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "TZC_BJ_MAX_ENTRY_PRICE_NOT_MATCHING" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "TZC_BJ_MIN_ENTRY_PRICE_NOT_MATCHING" ; FAILWITH } {} ;
                     NOW ;
                     EMPTY_MAP nat (list nat) ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     NIL bytes ;
                     PAIR ;
                     NIL nat ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     PUSH bool False ;
                     PUSH bytes 0x0000 ;
                     PAIR ;
                     NIL nat ;
                     NIL nat ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CONTRACT %prophecyHook (contract bytes) ;
                     IF_NONE { PUSH string "TZC_BJ_ORACLE_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     CONTRACT %prophecyCallbackEntry bytes ;
                     IF_NONE
                       { PUSH string "TZC_BJ_CONTRACT_SELF_TRANSFERCALLBACK_NOT_FOUND" ; FAILWITH }
                       {} ;
                     NIL operation ;
                     DIG 2 ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 4 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 8 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE { PUSH string "TZC_BJ_NO_USER_MATCHING" ; FAILWITH } {} ;
                     PUSH bytes 0x0000 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "TZC_BJ_CONTRACT_TURN" ; FAILWITH } {} ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "TZC_BJ_GAME_ENDED" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     IF_CONS { SWAP ; DROP ; SOME } { NONE bytes } ;
                     IF_NONE { PUSH string "TZC_BJ_NO_PROPHECY" ; FAILWITH } {} ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH nat 2 ; DUP 3 ; CAR ; PAIR ; DIG 6 ; SWAP ; EXEC }
                        { PUSH nat 1 ; DUP 3 ; CAR ; PAIR ; DIG 6 ; SWAP ; EXEC } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     ITER { SWAP ; PAIR ; DUP 6 ; SWAP ; EXEC } ;
                     DIG 5 ;
                     DROP ;
                     EMPTY_MAP nat (list nat) ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     ITER { SWAP ; PAIR ; DUP 8 ; SWAP ; EXEC } ;
                     DIG 7 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     ITER { SWAP ; PAIR ; DUP 8 ; SWAP ; EXEC } ;
                     DIG 7 ;
                     DROP ;
                     DUP 5 ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DUP 5 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 5 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CONTRACT %resolveStagedGameHook (pair (address %player_addr) (address %game_addr)) ;
                          IF_NONE { PUSH string "TZC_BJ_TEZCAS_NOT_FOUND" ; FAILWITH } {} ;
                          SELF_ADDRESS ;
                          SOURCE ;
                          PAIR ;
                          SWAP ;
                          PUSH mutez 0 ;
                          DIG 2 ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          PUSH bool True ;
                          DUP 5 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR }
                        { PUSH nat 21 ;
                          DIG 3 ;
                          COMPARE ;
                          EQ ;
                          PUSH nat 2 ;
                          DIG 4 ;
                          SIZE ;
                          COMPARE ;
                          EQ ;
                          AND ;
                          IF { DIG 3 ;
                               DROP ;
                               DUP 4 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CONTRACT %transfer
                                 (list (pair (address %from_)
                                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                               IF_NONE { PUSH string "TZC_BJ_FA2_NOT_FOUND" ; FAILWITH } {} ;
                               DUP 4 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               PUSH nat 100 ;
                               DUP 7 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               DIG 6 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               ADD ;
                               PUSH nat 0 ;
                               SOURCE ;
                               DUP 3 ;
                               PAIR ;
                               PAIR ;
                               CAR ;
                               CAR ;
                               PUSH nat 0 ;
                               SOURCE ;
                               DUP 4 ;
                               PAIR ;
                               PAIR ;
                               CDR ;
                               PAIR ;
                               PUSH nat 0 ;
                               SOURCE ;
                               DIG 3 ;
                               PAIR ;
                               PAIR ;
                               CAR ;
                               CDR ;
                               PAIR ;
                               NIL (pair address (pair nat nat)) ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CONS ;
                               SELF_ADDRESS ;
                               PAIR ;
                               CDR ;
                               NIL (pair address (pair nat nat)) ;
                               DIG 2 ;
                               CONS ;
                               SELF_ADDRESS ;
                               PAIR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               PUSH mutez 0 ;
                               NIL (pair address (list (pair address (pair nat nat)))) ;
                               DIG 3 ;
                               CONS ;
                               TRANSFER_TOKENS ;
                               DUP 4 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CONTRACT %resolveStagedGameHook (pair (address %player_addr) (address %game_addr)) ;
                               IF_NONE { PUSH string "TZC_BJ_TEZCAS_NOT_FOUND" ; FAILWITH } {} ;
                               SELF_ADDRESS ;
                               SOURCE ;
                               PAIR ;
                               SWAP ;
                               PUSH mutez 0 ;
                               DIG 2 ;
                               TRANSFER_TOKENS ;
                               DIG 2 ;
                               SWAP ;
                               CONS ;
                               SWAP ;
                               CONS ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               PUSH bool True ;
                               DUP 5 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 4 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               PAIR }
                             { DIG 2 ;
                               DROP ;
                               PUSH bool True ;
                               DIG 3 ;
                               CDR ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               IF { DUP 3 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CONTRACT %prophecyHook (contract bytes) ;
                                    IF_NONE { PUSH string "TZC_BJ_ORACLE_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                                    SELF_ADDRESS ;
                                    CONTRACT %prophecyCallbackEntry bytes ;
                                    IF_NONE
                                      { PUSH string "TZC_BJ_CONTRACT_SELF_PROPHECY_CALLBACK_NOT_FOUND" ; FAILWITH }
                                      {} ;
                                    SWAP ;
                                    PUSH mutez 0 ;
                                    DIG 2 ;
                                    TRANSFER_TOKENS ;
                                    CONS }
                                  { DUP 3 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CONTRACT %prophecyHook (contract bytes) ;
                                    IF_NONE { PUSH string "TZC_BJ_ORACLE_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                                    SELF_ADDRESS ;
                                    CONTRACT %prophecyCallbackOnResolve bytes ;
                                    IF_NONE
                                      { PUSH string "TZC_BJ_CONTRACT_SELF_PROPHECY_CALLBACK_ON_RESOLVE_NOT_FOUND" ;
                                        FAILWITH }
                                      {} ;
                                    SWAP ;
                                    PUSH mutez 0 ;
                                    DIG 2 ;
                                    TRANSFER_TOKENS ;
                                    CONS } ;
                               SWAP ;
                               PAIR } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SOME ;
                     SOURCE ;
                     UPDATE ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     PAIR } }
               { DIG 7 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 IF_LEFT
                   { DIG 7 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     MEM ;
                     NOT ;
                     SOURCE ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     IF { PUSH string "TZC_BJ_UNAUTHORIZED" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH string "TZC_BJ_NO_GAME_MATCHING" ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "TZC_BJ_PLAY_CARD_BEFORE_RESOVLE" ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH nat 0 ;
                     PUSH bool False ;
                     PAIR ;
                     PUSH nat 0 ;
                     NIL nat ;
                     PAIR ;
                     PAIR ;
                     DIG 7 ;
                     DIG 7 ;
                     DIG 7 ;
                     DIG 7 ;
                     DUP 7 ;
                     PAIR 5 ;
                     LAMBDA
                       (pair (pair (pair (list nat) (pair string address))
                                   (pair (lambda (pair nat nat) nat)
                                         (pair (lambda (pair (list nat) nat) (list nat))
                                               (pair (lambda (pair (list nat) nat) (list nat)) (lambda (list nat) (list nat))))))
                             (pair (pair (list nat) nat) (pair bool nat)))
                       (pair bool (pair (pair (list nat) nat) (pair bool nat)))
                       { UNPAIR ;
                         UNPAIR 5 ;
                         DIG 5 ;
                         DUP ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         PUSH bool True ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         PUSH nat 17 ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         OR ;
                         IF { PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH nat 2 ;
                                   DIG 4 ;
                                   CAR ;
                                   PAIR ;
                                   DIG 6 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH nat 1 ;
                                   DIG 2 ;
                                   ADD ;
                                   SWAP ;
                                   PAIR }
                                 { PUSH nat 1 ; DIG 4 ; CAR ; PAIR ; DIG 6 ; SWAP ; EXEC ; PAIR } ;
                              DUP ;
                              CDR ;
                              DUP 4 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 4 ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              CAR ;
                              ITER { SWAP ; PAIR ; DUP 5 ; SWAP ; EXEC } ;
                              DIG 4 ;
                              DROP ;
                              DUP ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              PUSH nat 0 ;
                              SWAP ;
                              ITER { SWAP ; PAIR ; DUP 5 ; SWAP ; EXEC } ;
                              DIG 4 ;
                              DROP ;
                              DUP 3 ;
                              CDR ;
                              DIG 3 ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP 3 ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              CDR ;
                              PUSH nat 0 ;
                              DIG 3 ;
                              COMPARE ;
                              EQ ;
                              IF { DIG 2 ; DROP ; PUSH bool True } { DIG 2 } ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              PUSH bool True ;
                              PAIR }
                            { DROP 2 ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              SWAP ;
                              DROP ;
                              PUSH bool False ;
                              PAIR } } ;
                     SWAP ;
                     APPLY ;
                     SWAP ;
                     PUSH bool True ;
                     LOOP { DIP { DUP } ; EXEC ; UNPAIR } ;
                     SWAP ;
                     DROP ;
                     CAR ;
                     CDR ;
                     NIL operation ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     IF { SWAP ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          COMPARE ;
                          EQ ;
                          IF { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CDR ; CDR }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               PUSH nat 100 ;
                               DUP 6 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               DUP 5 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               ADD } ;
                          DROP ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CONTRACT %transfer
                            (list (pair (address %from_)
                                        (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                          IF_NONE { PUSH string "TZC_BJ_FA2_NOT_FOUND" ; FAILWITH } {} ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PUSH nat 100 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          DUP 6 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          ADD ;
                          PUSH nat 0 ;
                          PAIR ;
                          DUP 5 ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          NIL (pair address (pair nat nat)) ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CONS ;
                          SELF_ADDRESS ;
                          PAIR ;
                          CDR ;
                          NIL (pair address (pair nat nat)) ;
                          DIG 2 ;
                          CONS ;
                          SELF_ADDRESS ;
                          PAIR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          PUSH mutez 0 ;
                          NIL (pair address (list (pair address (pair nat nat)))) ;
                          DIG 3 ;
                          CONS ;
                          TRANSFER_TOKENS ;
                          CONS }
                        { SWAP ; DROP } ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CONTRACT %resolveStagedGameHook (pair (address %player_addr) (address %game_addr)) ;
                     IF_NONE { PUSH string "TZC_BJ_TEZCAS_NOT_FOUND" ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     DUP 5 ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     DUP 5 ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CDR ;
                     PUSH bool True ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     DIG 4 ;
                     CDR ;
                     CDR ;
                     UPDATE ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DUG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE { PUSH string "TZC_BJ_NO_GAME_MATCHING" ; FAILWITH } {} ;
                     DUP 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 5 ;
                     CONS ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SOURCE ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { PUSH string "TZC_BJ_UNAUTHORIZED_ORACLE" ;
                     SENDER ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE { PUSH string "TZC_BJ_NO_GAME_MATCHING" ; FAILWITH } {} ;
                     PUSH string "TZC_BJ_ALREADY_ON_RESOLVE" ;
                     PUSH bytes 0x0000 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SOURCE ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { PUSH string "TZC_BJ_NOT_OWNER" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     NOT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     DIG 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 PUSH string "TZC_LOTO_NOT_OWNER" ;
                 SELF_ADDRESS ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 NOT ;
                 AND ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CONTRACT %updateGames
                   (list (or (pair %add_game
                                (address %game_address)
                                (pair %game_instance
                                   (pair (pair (bool %enabled) (nat %max_entry_price))
                                         (pair (nat %min_entry_price) (bool %multiple_bet)))
                                   (bool %staged)))
                             (or (pair %remove_game
                                    (address %game_address)
                                    (pair %game_instance
                                       (pair (pair (bool %enabled) (nat %max_entry_price))
                                             (pair (nat %min_entry_price) (bool %multiple_bet)))
                                       (bool %staged)))
                                 (pair %upd_game
                                    (address %game_address)
                                    (pair %game_instance
                                       (pair (pair (bool %enabled) (nat %max_entry_price))
                                             (pair (nat %min_entry_price) (bool %multiple_bet)))
                                       (bool %staged)))))) ;
                 IF_NONE { PUSH string "TZC_BJ_CASINO_CONTRACT_NOT_FOUND" ; FAILWITH } {} ;
                 PUSH bool True ;
                 PUSH bool False ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 PUSH bool True ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PUSH bool False ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PUSH bool False ;
                      PAIR ;
                      PAIR ;
                      PAIR }
                    {} ;
                 SELF_ADDRESS ;
                 PAIR ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                         (or (pair address (pair (pair (pair bool nat) (pair nat bool)) bool))
                             (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)))) ;
                 DIG 3 ;
                 RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                 RIGHT (pair address (pair (pair (pair bool nat) (pair nat bool)) bool)) ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 DUP 3 ;
                 CDR ;
                 DIG 2 ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
