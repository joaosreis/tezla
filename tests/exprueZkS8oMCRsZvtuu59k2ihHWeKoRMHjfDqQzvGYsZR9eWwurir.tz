{ parameter nat ;
  storage string ;
  code { DUP ;
         CDR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         PUSH string "" ;
         PUSH nat 0 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "0" }
            { EMPTY_MAP nat string ;
              PUSH string "9" ;
              SOME ;
              PUSH nat 9 ;
              UPDATE ;
              PUSH string "8" ;
              SOME ;
              PUSH nat 8 ;
              UPDATE ;
              PUSH string "7" ;
              SOME ;
              PUSH nat 7 ;
              UPDATE ;
              PUSH string "6" ;
              SOME ;
              PUSH nat 6 ;
              UPDATE ;
              PUSH string "5" ;
              SOME ;
              PUSH nat 5 ;
              UPDATE ;
              PUSH string "4" ;
              SOME ;
              PUSH nat 4 ;
              UPDATE ;
              PUSH string "3" ;
              SOME ;
              PUSH nat 3 ;
              UPDATE ;
              PUSH string "2" ;
              SOME ;
              PUSH nat 2 ;
              UPDATE ;
              PUSH string "1" ;
              SOME ;
              PUSH nat 1 ;
              UPDATE ;
              PUSH string "0" ;
              SOME ;
              PUSH nat 0 ;
              UPDATE ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              DIP { DIP { DIP { DUP } ; SWAP } ; DUP ; DIP { PAIR } ; SWAP } ;
              SWAP ;
              LAMBDA
                (pair (pair (map nat string) nat) string)
                (pair bool string)
                { DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DIP { DUP ; CDR ; SWAP ; CAR } ;
                  PUSH nat 0 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  COMPARE ;
                  NEQ ;
                  IF { PUSH nat 10 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       EDIV ;
                       IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                       CDR ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       DIG 1 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                       DUP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CONCAT ;
                       DUP ;
                       FAILWITH }
                     { DUP ; PUSH bool False ; PAIR } ;
                  DIP { DROP 3 } } ;
              SWAP ;
              APPLY ;
              SWAP ;
              PUSH bool True ;
              LOOP { DIP { DUP } ; EXEC ; DUP ; CDR ; SWAP ; CAR } ;
              SWAP ;
              DROP ;
              PUSH string "end_loop" ;
              FAILWITH } ;
         DUP ;
         DIP { DROP 4 } ;
         DUP ;
         NIL operation ;
         PAIR ;
         DIP { DROP 2 } } }
