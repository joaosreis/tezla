{ storage
    (pair (pair (address %akaDAOToken)
                (pair (address %akaProtocol)
                      (big_map %curations nat (pair (nat %akaDAO_balance) (address %issuer)))))
          (pair (bool %locked) (pair (address %manager) (big_map %metadata string bytes)))) ;
  parameter
    (or (or (pair %claim_akaDAO (nat %akaDAO_amount) (nat %akaOBJ_id))
            (or (pair %configure (address %akaDAOToken) (address %akaProtocol))
                (pair %curate (nat %akaDAO_amount) (pair (address %issuer) (nat %akaOBJ_id)))))
        (or (or (address %force_set_akaDAOToken) (address %force_set_akaProtocol))
            (or (address %set_manager) (pair %set_metadata (string %k) (bytes %v))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 MEM ;
                 IF { SENDER ;
                      DUP 3 ;
                      CAR ;
                      GET 4 ;
                      DUP 3 ;
                      CDR ;
                      GET ;
                      IF_NONE { PUSH int 37 ; FAILWITH } {} ;
                      CDR ;
                      COMPARE ;
                      EQ }
                    { PUSH bool False } ;
                 IF { DUP ; CAR ; PUSH nat 0 ; COMPARE ; LT } { PUSH bool False } ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      GET 4 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      GET ;
                      IF_NONE { PUSH int 37 ; FAILWITH } {} ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      COMPARE ;
                      LE }
                    { PUSH bool False } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (((self.data.curations.contains(params.akaOBJ_id)) & (self.data.curations[params.akaOBJ_id].issuer == sp.sender)) & (params.akaDAO_amount > 0)) & (params.akaDAO_amount <= self.data.curations[params.akaOBJ_id].akaDAO_balance)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DUP 6 ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                 DUP 7 ;
                 CAR ;
                 DIG 8 ;
                 CAR ;
                 GET 4 ;
                 DUP 9 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                 CAR ;
                 SUB ;
                 ABS ;
                 UPDATE 1 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 NIL operation ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                 IF_NONE { PUSH int 42 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 CAR ;
                 PUSH nat 0 ;
                 SENDER ;
                 PAIR 3 ;
                 CONS ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ; DUP ; DUG 2 ; GET 3 ; NOT } { PUSH bool False } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (sp.sender == self.data.manager) & (~ self.data.locked)" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PUSH bool True ;
                     UPDATE 3 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ; CAR ; PUSH nat 0 ; COMPARE ; LT } { PUSH bool False } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (sp.sender == self.data.akaProtocol) & (params.akaDAO_amount > 0)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          DUP 6 ;
                          GET 4 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 26 ; FAILWITH } {} ;
                          DUP ;
                          CAR ;
                          DIG 7 ;
                          CAR ;
                          ADD ;
                          UPDATE 1 ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DIG 4 ;
                          DUP ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          PAIR ;
                          SOME ;
                          DIG 5 ;
                          GET 4 ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     UPDATE 5 }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.manager" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 6 ;
                     DUP 3 ;
                     CDR ;
                     SOME ;
                     DIG 3 ;
                     CAR ;
                     UPDATE ;
                     UPDATE 6 } } ;
             NIL operation } ;
         PAIR } }
