{ storage
    (pair (pair (bool %claimed) (map %deck int int))
          (pair (int %nextPlayer) (pair (int %size) (int %winner)))) ;
  parameter (or (int %claim) (pair %remove (int %cell) (int %k))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { PUSH int 0 ;
               DUP ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CAR ;
               CDR ;
               ITER { CDR ; ADD } ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: sp.sum(self.data.deck.values()) == 0" ;
                      FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               IF { { PUSH string "WrongCondition: ~ self.data.claimed" ; FAILWITH } }
                  { {} } ;
               SWAP ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               CDR ;
               PUSH bool True ;
               PAIR ;
               PAIR ;
               DUP ;
               DUG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               CAR ;
               DIG 4 ;
               CDR ;
               CAR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.winner == self.data.winner" ; FAILWITH } } ;
               DROP } }
           { { DUP ;
               CAR ;
               PUSH int 0 ;
               SWAP ;
               COMPARE ;
               GE ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.cell >= 0" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               COMPARE ;
               LT ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.cell < self.data.size" ; FAILWITH } } ;
               DUP ;
               CDR ;
               PUSH int 1 ;
               SWAP ;
               COMPARE ;
               GE ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.k >= 1" ; FAILWITH } } ;
               DUP ;
               CDR ;
               PUSH int 2 ;
               SWAP ;
               COMPARE ;
               LE ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.k <= 2" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               GET ;
               IF_NONE { { PUSH string "Get-item:195" ; FAILWITH } } {} ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               COMPARE ;
               LE ;
               IF { {} }
                  { { PUSH string "WrongCondition: params.k <= self.data.deck[params.cell]" ;
                      FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               CDR ;
               DIG 5 ;
               CAR ;
               CDR ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               CAR ;
               GET ;
               IF_NONE { { PUSH string "Get-item:195" ; FAILWITH } } {} ;
               SUB ;
               SOME ;
               DIG 4 ;
               CAR ;
               UPDATE ;
               SWAP ;
               PAIR ;
               PAIR ;
               DUP ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               CDR ;
               DIG 2 ;
               CDR ;
               CAR ;
               PUSH int 3 ;
               SUB ;
               PAIR ;
               SWAP ;
               PAIR } } ;
         NIL operation ;
         PAIR } }
