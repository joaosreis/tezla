{ parameter
    (or (or (or (address %addUser)
                (or (pair %burn (int %amount) (address %fromAddr))
                    (pair %checkCertificate (address %fromAddr) (string %operationId))))
            (or (or (pair %generateCertificate
                       (pair (address %fromAddr) (string %operationId))
                       (pair (string %proof) (address %toAddr)))
                    (address %getAdministrator))
                (or (pair %getBalance (address %owner) (address %target))
                    (address %getCirculatingSupply))))
        (or (or (address %lockAddress)
                (or (pair %mint (int %amount) (address %toAddr)) (unit %pauseAccess)))
            (or (or (unit %resumeAccess) (address %setAdministrator))
                (or (address %setPro) (address %unlockAddress))))) ;
  storage
    (pair (pair (bool %accessStatus)
                (pair (address %administrator)
                      (big_map %certificates
                         string
                         (pair (address %pro) (pair (string %proof) (address %user))))))
          (pair (int %circulatingSupply)
                (pair (address %owner)
                      (big_map %users address (pair (int %balance) (pair (bool %lock) (bool %pro))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          PUSH (option (pair (int %balance) (pair (bool %lock) (bool %pro))))
                               (Some (Pair 0 (Pair False False))) ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } ;
                     DROP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.fromAddr)" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         { CDR ; CDR ; CDR } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:81" ; FAILWITH } {} } ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.users[params.fromAddr].balance >= params.amount" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         { CDR ; CDR ; CDR } ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:81" ; FAILWITH } {} } ;
                         CAR ;
                         SUB ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         { CDR ; CDR } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         { CDR ; CAR } ;
                         SUB ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 }
                       { DUP ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: params.fromAddr == sp.sender" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         IF {} { PUSH string "WrongCondition: self.data.accessStatus" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MEM ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              { CDR ; CDR ; CDR } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET ;
                              { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                              { CDR ; CAR } ;
                              NOT }
                            { PUSH bool False } ;
                         IF { PUSH int 1 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              { CDR ; CDR ; CDR } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              GET ;
                              { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                              CAR ;
                              COMPARE ;
                              GE }
                            { PUSH bool False } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: ((self.data.users.contains(params.fromAddr)) & (~ self.data.users[params.fromAddr].lock)) & (self.data.users[params.fromAddr].balance >= 1)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH string "op_" ;
                         CONCAT ;
                         MEM ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.certificates.contains('op_' + params.operationId)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         CDR ;
                         PUSH int 1 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         { CDR ; CDR ; CDR } ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                         CAR ;
                         SUB ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         { CAR ; CDR ; CDR } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         PUSH string "op_" ;
                         CONCAT ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:38" ; FAILWITH } {} } ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         CDR ;
                         PUSH int 1 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         { CDR ; CDR ; CDR } ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         { CAR ; CDR ; CDR } ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         PUSH string "op_" ;
                         CONCAT ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:38" ; FAILWITH } {} } ;
                         CAR ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:38" ; FAILWITH } {} } ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } } ;
                 NIL operation }
               { IF_LEFT
                   { IF_LEFT
                       { DUP ;
                         { CAR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: params.fromAddr == sp.sender" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         IF {} { PUSH string "WrongCondition: self.data.accessStatus" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.fromAddr)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR } ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.toAddr)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:22" ; FAILWITH } {} } ;
                         { CDR ; CDR } ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users[params.fromAddr].pro" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CAR } ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:22" ; FAILWITH } {} } ;
                         { CDR ; CAR } ;
                         IF { PUSH string "WrongCondition: ~ self.data.users[params.fromAddr].lock" ;
                              FAILWITH }
                            {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR } ;
                         PUSH string "op_" ;
                         CONCAT ;
                         MEM ;
                         IF { PUSH string
                                   "WrongCondition: ~ (self.data.certificates.contains('op_' + params.operationId))" ;
                              FAILWITH }
                            {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         { CDR ; CDR } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         { CDR ; CAR } ;
                         PUSH string "prf_" ;
                         CONCAT ;
                         PAIR %proof %user ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         { CAR ; CAR } ;
                         PAIR %pro ;
                         SOME ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         { CAR ; CDR } ;
                         PUSH string "op_" ;
                         CONCAT ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 ;
                         NIL operation }
                       { DUP ;
                         NIL operation ;
                         SWAP ;
                         CONTRACT address ;
                         { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         { CAR ; CDR ; CAR } ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DROP } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MEM ;
                         IF { DUP ;
                              CDR ;
                              NIL operation ;
                              SWAP ;
                              CONTRACT nat ;
                              { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                              PUSH mutez 0 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              { CDR ; CDR ; CDR } ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              GET ;
                              { IF_NONE { PUSH string "Get-item:88" ; FAILWITH } {} } ;
                              CAR ;
                              ISNAT ;
                              { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { DUP ;
                              CDR ;
                              NIL operation ;
                              SWAP ;
                              CONTRACT nat ;
                              { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                              PUSH mutez 0 ;
                              PUSH int 0 ;
                              ISNAT ;
                              { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                              TRANSFER_TOKENS ;
                              CONS } ;
                         SWAP ;
                         DROP }
                       { DUP ;
                         NIL operation ;
                         SWAP ;
                         CONTRACT nat ;
                         { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         { CDR ; CAR } ;
                         ISNAT ;
                         { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DROP } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CAR ; CDR ; CAR } ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     { CDR ; CDR ; CDR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.users.contains(params.address)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     { CDR ; CDR } ;
                     PUSH bool True ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 ;
                     DROP 2 }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.toAddr)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         { CDR ; CDR ; CDR } ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         GET ;
                         { IF_NONE { PUSH string "Get-item:74" ; FAILWITH } {} } ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         { CDR ; CDR } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         { CDR ; CAR } ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         { CAR ; CDR } ;
                         PUSH bool False ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } } }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         { CAR ; CDR } ;
                         PUSH bool True ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.owner" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         { CDR ; CDR } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.address)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         { CDR ; CAR } ;
                         PUSH bool True ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CAR ; CDR ; CAR } ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         { CDR ; CDR ; CDR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.users.contains(params.address)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH string "set_in_top-any" ; FAILWITH } {} } ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         { CDR ; CDR } ;
                         PUSH bool False ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUG 2 ;
                         DROP 2 } } } ;
             NIL operation } ;
         PAIR } }
