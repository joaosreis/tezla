{ storage
    (pair (pair (pair (pair (address %administrator) (set %all_tokens nat))
                      (pair (address %distributor)
                            (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                (pair (pair (big_map %operators
                               (pair (address %owner) (pair (address %operator) (nat %token_id)))
                               unit)
                            (bool %paused))
                      (pair (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))
                            (pair (map %trades
                                     address
                                     (map nat
                                          (pair (pair (address %owner) (mutez %price))
                                                (pair (timestamp %timestamp)
                                                      (pair (list %tokens_accepted (pair (nat %qty) (nat %token_id)))
                                                            (list %tokens_offered (pair (nat %qty) (nat %token_id))))))))
                                  (nat %trading_fee)))))
          (big_map
             nat
             (lambda
                (pair (pair (or (or (or (pair %balance_of
                                           (list %requests (pair (address %owner) (nat %token_id)))
                                           (contract %callback
                                              (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                        (or (nat %cancel_trade)
                                            (pair %do_upgrade
                                               (pair (address %address) (nat %nt_id))
                                               (pair (map %nt_md string bytes) (pair (nat %token_id) (nat %upgrade_req))))))
                                    (or (pair %mint
                                           (pair (address %address) (nat %amount))
                                           (pair (map %metadata string bytes) (nat %token_id)))
                                        (or (pair %mutez_transfer (mutez %amount) (address %destination))
                                            (pair %offer_trade
                                               (mutez %price)
                                               (pair (list %tokens_accepted (pair (nat %qty) (nat %token_id)))
                                                     (list %tokens_offered (pair (nat %qty) (nat %token_id))))))))
                                (or (or (address %set_administrator)
                                        (or (address %set_distributor) (pair %set_metdata (string %k) (bytes %v))))
                                    (or (or (bool %set_pause) (pair %take_trade (address %owner_id) (nat %trade_id)))
                                        (or (list %transfer
                                               (pair (address %from_)
                                                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                                            (list %update_operators
                                               (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                                   (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))))
                            (pair (pair (pair (address %administrator) (set %all_tokens nat))
                                        (pair (address %distributor)
                                              (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                                  (pair (pair (big_map %operators
                                                 (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                                 unit)
                                              (bool %paused))
                                        (pair (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))
                                              (pair (map %trades
                                                       address
                                                       (map nat
                                                            (pair (pair (address %owner) (mutez %price))
                                                                  (pair (timestamp %timestamp)
                                                                        (pair (list %tokens_accepted (pair (nat %qty) (nat %token_id)))
                                                                              (list %tokens_offered (pair (nat %qty) (nat %token_id))))))))
                                                    (nat %trading_fee))))))
                      address)
                (pair (list operation)
                      (pair (pair (pair (address %administrator) (set %all_tokens nat))
                                  (pair (address %distributor)
                                        (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                            (pair (pair (big_map %operators
                                           (pair (address %owner) (pair (address %operator) (nat %token_id)))
                                           unit)
                                        (bool %paused))
                                  (pair (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))
                                        (pair (map %trades
                                                 address
                                                 (map nat
                                                      (pair (pair (address %owner) (mutez %price))
                                                            (pair (timestamp %timestamp)
                                                                  (pair (list %tokens_accepted (pair (nat %qty) (nat %token_id)))
                                                                        (list %tokens_offered (pair (nat %qty) (nat %token_id))))))))
                                              (nat %trading_fee))))))))) ;
  parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (or (nat %cancel_trade)
                    (pair %do_upgrade
                       (pair (address %address) (nat %nt_id))
                       (pair (map %nt_md string bytes) (pair (nat %token_id) (nat %upgrade_req))))))
            (or (pair %mint
                   (pair (address %address) (nat %amount))
                   (pair (map %metadata string bytes) (nat %token_id)))
                (or (pair %mutez_transfer (mutez %amount) (address %destination))
                    (pair %offer_trade
                       (mutez %price)
                       (pair (list %tokens_accepted (pair (nat %qty) (nat %token_id)))
                             (list %tokens_offered (pair (nat %qty) (nat %token_id))))))))
        (or (or (address %set_administrator)
                (or (address %set_distributor) (pair %set_metdata (string %k) (bytes %v))))
            (or (or (bool %set_pause) (pair %take_trade (address %owner_id) (nat %trade_id)))
                (or (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                           (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))) ;
  code { UNPAIR ;
         SWAP ;
         UNPAIR ;
         DIG 2 ;
         DUP ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DROP ; PUSH nat 0 }
                   { IF_LEFT { DROP ; PUSH nat 1 } { DROP ; PUSH nat 2 } } }
               { IF_LEFT
                   { DROP ; PUSH nat 3 }
                   { IF_LEFT { DROP ; PUSH nat 4 } { DROP ; PUSH nat 5 } } } }
           { IF_LEFT
               { IF_LEFT
                   { DROP ; PUSH nat 6 }
                   { IF_LEFT { DROP ; PUSH nat 7 } { DROP ; PUSH nat 8 } } }
               { IF_LEFT
                   { IF_LEFT { DROP ; PUSH nat 9 } { DROP ; PUSH nat 10 } }
                   { IF_LEFT { DROP ; PUSH nat 11 } { DROP ; PUSH nat 12 } } } } ;
         DUP 4 ;
         SWAP ;
         GET ;
         IF_NONE { PUSH int -1 ; FAILWITH } {} ;
         DUG 2 ;
         PAIR ;
         SELF_ADDRESS ;
         SWAP ;
         PAIR ;
         EXEC ;
         UNPAIR ;
         DUG 2 ;
         PAIR ;
         SWAP ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
