{ parameter
    (or (or (or (nat %bid) (nat %cancel)) (or (nat %configure) (unit %confirm_admin)))
        (or (or (pair %create (mutez %ask) (pair (address %kt) (nat %token_id))) (bool %pause))
            (or (option %set_admin address) (pair %set_ban (pair address nat) bool)))) ;
  storage
    (pair (pair (pair (pair (address %admin) (big_map %banned (pair address nat) unit))
                      (pair (big_map %by_seller address (set nat)) (nat %config)))
                (pair (pair (address %frontend) (nat %next_id))
                      (pair (bool %paused) (option %pending_admin address))))
          (big_map %sales
             nat
             (pair (address %seller) (pair (mutez %ask) (pair (address %kt) (nat %token_id)))))) ;
  code { NIL operation ;
         LAMBDA
           (pair (pair (pair address nat) address) address)
           operation
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DUP ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "NOT_FA2_CONTRACT" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             NIL (pair address (pair nat nat)) ;
             PUSH nat 1 ;
             DIG 5 ;
             CDR ;
             PAIR ;
             DIG 6 ;
             PAIR ;
             CONS ;
             DIG 4 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         DIG 2 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                     PUSH string "BID_REJECTED" ;
                     SOURCE ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     OR ;
                     IF { FAILWITH } { DROP } ;
                     PUSH string "BID_TOO_LOW" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF { FAILWITH } { DROP } ;
                     NIL operation ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     AMOUNT ;
                     SWAP ;
                     CONTRACT %on_sale_end address ;
                     IF_NONE { PUSH string "NOT_CONTRACT" ; FAILWITH } {} ;
                     SWAP ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SENDER ;
                     SELF_ADDRESS ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 6 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET 5 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     CONS ;
                     DIG 3 ;
                     DIG 2 ;
                     CAR ;
                     DIG 3 ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE { EMPTY_SET nat } {} ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     PUSH bool False ;
                     SWAP ;
                     UPDATE ;
                     DIG 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 2 ;
                     NONE (pair address (pair mutez (pair address nat))) ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH string "XTZ" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     GT ;
                     IF { FAILWITH } { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                     PUSH string "NOT_A_SELLER" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { FAILWITH } { DROP } ;
                     DIG 2 ;
                     SENDER ;
                     DIG 3 ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE { EMPTY_SET nat } {} ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     PUSH bool False ;
                     SWAP ;
                     UPDATE ;
                     DIG 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 2 ;
                     NONE (pair address (pair mutez (pair address nat))) ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     SENDER ;
                     SELF_ADDRESS ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET 6 ;
                     DIG 5 ;
                     GET 5 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     CONS ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH string "MAX_AUCTIONS" ;
                     PUSH nat 100 ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     COMPARE ;
                     GT ;
                     IF { FAILWITH } { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DROP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     IF_NONE
                       { PUSH string "NOT_PENDING_ADMIN" ; FAILWITH }
                       { DUP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CDR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              NONE address ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR } } ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH string "XTZ" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     GT ;
                     IF { FAILWITH } { DROP } ;
                     PUSH string "TOKEN_IS_BANNED" ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 3 ;
                     PAIR ;
                     MEM ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 4 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET 3 ;
                     PAIR ;
                     MEM ;
                     OR ;
                     IF { FAILWITH } { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE { EMPTY_SET nat } {} ;
                     PUSH string "TOO_MANY_AUCTIONS_BY_SELLER" ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     SIZE ;
                     COMPARE ;
                     GE ;
                     IF { FAILWITH } { DROP } ;
                     SENDER ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     GET 3 ;
                     DIG 4 ;
                     GET 4 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 5 ;
                     { DIP 6 { DUP } ; DIG 7 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH bool True ;
                     SWAP ;
                     UPDATE ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 1 ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     ADD ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     SELF_ADDRESS ;
                     SENDER ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     GET 6 ;
                     DIG 5 ;
                     GET 5 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          CAR ;
                          CAR ;
                          CDR ;
                          { DIP 4 { DUP } ; DIG 5 } ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          PUSH unit Unit ;
                          DIG 5 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          { DIP 2 { DUP } ; DIG 3 } ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          CAR ;
                          CAR ;
                          CDR ;
                          { DIP 4 { DUP } ; DIG 5 } ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          NONE unit ;
                          SWAP ;
                          UPDATE ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     SWAP ;
                     PAIR } } } } }
