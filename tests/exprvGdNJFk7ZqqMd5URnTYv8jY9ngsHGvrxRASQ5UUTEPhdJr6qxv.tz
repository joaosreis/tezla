{ parameter (or (unit %dummy) (bytes %validate)) ;
  storage unit ;
  code { CAR ;
         IF_LEFT
           { DROP ; PUSH string "DUMMY_ENTRYPOINT" ; FAILWITH }
           { PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "AMOUNT_NOT_ZERO" ; FAILWITH } { PUSH unit Unit } ;
             DROP ;
             DUP ;
             SIZE ;
             PUSH nat 100 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { PUSH string "LABEL_TOO_LONG" ; FAILWITH } { PUSH unit Unit } ;
             DROP ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { PUSH string "LABEL_EMPTY" ; FAILWITH } { PUSH unit Unit } ;
             DROP ;
             PUSH nat 0 ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             LEFT unit ;
             LOOP_LEFT
               { DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 COMPARE ;
                 LT ;
                 IF { DUP ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      SLICE ;
                      IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                      PUSH bytes 0x7a ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      LE ;
                      PUSH bytes 0x61 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      COMPARE ;
                      GE ;
                      AND ;
                      PUSH nat 0 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      COMPARE ;
                      GT ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PUSH nat 1 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      ADD ;
                      COMPARE ;
                      LT ;
                      PUSH bytes 0x2d ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      COMPARE ;
                      EQ ;
                      AND ;
                      AND ;
                      PUSH bytes 0x39 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      COMPARE ;
                      LE ;
                      PUSH bytes 0x30 ;
                      DIG 4 ;
                      COMPARE ;
                      GE ;
                      AND ;
                      OR ;
                      OR ;
                      IF { DIG 2 ; PUSH nat 1 ; DIG 3 ; ADD ; DIG 2 ; PAIR ; PAIR ; LEFT unit }
                         { DROP 3 ; PUSH string "INVALID_LABEL" ; FAILWITH } }
                    { DROP 3 ; PUSH unit Unit ; RIGHT (pair (pair bytes nat) nat) } } ;
             DROP ;
             PUSH unit Unit ;
             NIL operation ;
             PAIR } } }
