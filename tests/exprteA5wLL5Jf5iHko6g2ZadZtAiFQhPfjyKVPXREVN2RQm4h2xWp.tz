{ storage
    (pair (pair (pair (set %LPMembers address)
                      (pair (address %administrator)
                            (big_map %balances address (pair (map %dividends nat nat) (string %role)))))
                (pair (set %investors address) (pair (int %lastYear) (big_map %nav nat nat))))
          (pair (pair (set %roles string) (pair (int %totalIncome) (nat %totalInvDiv)))
                (pair (int %totalInvested) (pair (nat %totalLPDiv) (address %xxiAddress))))) ;
  parameter
    (or (or (pair %addNav (nat %nav) (nat %year))
            (pair %addUser (address %address) (string %role)))
        (or (pair %allocateDividends (pair (nat %div) (int %inc)) (pair (int %inv) (int %year)))
            (address %setAdministrator))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   MEM ;
                   IF { { PUSH string "WrongCondition: ~ (self.data.nav.contains(params.year))" ;
                          FAILWITH } }
                      { {} } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CAR ;
                   SOME ;
                   DIG 6 ;
                   DUP ;
                   DUG 7 ;
                   CDR ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   MEM ;
                   IF { { PUSH string "WrongCondition: ~ (self.data.balances.contains(params.address))" ;
                          FAILWITH } }
                      { {} } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CAR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   MEM ;
                   IF { {} }
                      { { PUSH string "WrongCondition: self.data.roles.contains(params.role)" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CDR ;
                   PUSH (map nat nat) {} ;
                   PAIR %dividends %role ;
                   SOME ;
                   DIG 6 ;
                   DUP ;
                   DUG 7 ;
                   CAR ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   DUP ;
                   CDR ;
                   PUSH string "INVESTOR" ;
                   COMPARE ;
                   EQ ;
                   IF { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          PUSH bool True ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } }
                      { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          PUSH bool True ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } } ;
                   DROP } } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   COMPARE ;
                   GT ;
                   IF { {} }
                      { { PUSH string "WrongCondition: params.year > self.data.lastYear" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CDR ;
                   CDR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   CAR ;
                   CDR ;
                   DIG 6 ;
                   DUP ;
                   DUG 7 ;
                   CDR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   ADD ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   CDR ;
                   CAR ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   ADD ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   PUSH int 105 ;
                   MUL ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   PUSH int 100 ;
                   MUL ;
                   COMPARE ;
                   LE ;
                   IF { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          CAR ;
                          DUP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          CAR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUG 2 ;
                          SWAP ;
                          DROP } }
                      { { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          ADD ;
                          PUSH nat 2 ;
                          MUL ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PUSH nat 10 ;
                          MUL ;
                          COMPARE ;
                          LE ;
                          IF { { DUP ;
                                 CAR ;
                                 CAR ;
                                 PUSH nat 2 ;
                                 SWAP ;
                                 EDIV ;
                                 IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CAR } ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 ADD ;
                                 ADD ;
                                 PUSH nat 2 ;
                                 MUL ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 PUSH nat 10 ;
                                 MUL ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CAR ;
                                 PUSH nat 5 ;
                                 MUL ;
                                 ADD ;
                                 COMPARE ;
                                 GT ;
                                 IF { { DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PUSH nat 5 ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CAR ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        ADD ;
                                        ADD ;
                                        EDIV ;
                                        IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CAR } ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                        SWAP ;
                                        DROP } }
                                    { {} } ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 CDR ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 DIG 7 ;
                                 DUP ;
                                 DUG 8 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 3 ;
                                 DIG 2 ;
                                 DROP ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 CAR ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 CAR ;
                                 CAR ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                 DIG 7 ;
                                 DUP ;
                                 DUG 8 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 ADD ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 3 ;
                                 DIG 2 ;
                                 DROP ;
                                 PUSH int 0 ;
                                 DROP 2 } }
                             { { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 CDR ;
                                 PUSH nat 5 ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 CAR ;
                                 CAR ;
                                 EDIV ;
                                 IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CAR } ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 CDR ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 ADD ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 2 ;
                                 SWAP ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 CAR ;
                                 PUSH nat 5 ;
                                 PUSH nat 4 ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 CAR ;
                                 CAR ;
                                 MUL ;
                                 EDIV ;
                                 IF_NONE { { PUSH string "division by zero" ; FAILWITH } } { CAR } ;
                                 DIG 6 ;
                                 DUP ;
                                 DUG 7 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 ADD ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 2 ;
                                 SWAP ;
                                 DROP ;
                                 PUSH int 0 ;
                                 DROP } } } } ;
                   DROP } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR ;
                   DIG 4 ;
                   DUP ;
                   DUG 5 ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DUG 2 ;
                   DROP 2 } } } ;
         NIL operation ;
         PAIR } }
