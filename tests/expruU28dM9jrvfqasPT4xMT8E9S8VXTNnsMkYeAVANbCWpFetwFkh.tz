{ storage
    (pair (pair (address %administrator)
                (pair (big_map %balances address (pair (map %approvals address int) (int %balance)))
                      (timestamp %end_date)))
          (pair (bool %paused) (pair (int %storedValue) (int %totalSupply)))) ;
  parameter
    (or (or (pair %approve (int %amount) (pair (address %fromAddr) (address %toAddr)))
            (or (pair %burn (address %address) (int %amount))
                (pair %mint (address %address) (int %amount))))
        (or (address %setAdministrator)
            (or (bool %setPause)
                (pair %transfer (int %amount) (pair (address %fromAddr) (address %toAddr)))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 3 ;
                      IF { PUSH bool False } { DUP ; GET 3 ; SENDER ; COMPARE ; EQ } } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & (params.fromAddr == sp.sender))" ;
                      FAILWITH } ;
                 PUSH int 0 ;
                 DUP 3 ;
                 CAR ;
                 GET 3 ;
                 DUP 3 ;
                 GET 3 ;
                 GET ;
                 IF_NONE { PUSH int 28 ; FAILWITH } {} ;
                 CAR ;
                 DUP 3 ;
                 GET 4 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.balances[params.fromAddr].approvals.get(params.toAddr, default_value = 0) == 0" ;
                      FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 DUP ;
                 DUP 6 ;
                 GET 3 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 29 ; FAILWITH } {} ;
                 UNPAIR ;
                 DUP 8 ;
                 CAR ;
                 SOME ;
                 DIG 8 ;
                 GET 4 ;
                 UPDATE ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     DUP ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.balances[params.address].balance >= params.amount" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 6 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 52 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 8 ;
                     CDR ;
                     SWAP ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 4 ;
                     CDR ;
                     SWAP ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                          DUP 6 ;
                          CAR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 6 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 8 ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 4 ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 3 ;
                          IF { PUSH bool False }
                             { DUP ;
                               GET 3 ;
                               SENDER ;
                               COMPARE ;
                               EQ ;
                               IF { PUSH bool True }
                                  { DUP ;
                                    CAR ;
                                    DUP 3 ;
                                    CAR ;
                                    GET 3 ;
                                    DUP 3 ;
                                    GET 3 ;
                                    GET ;
                                    IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                                    CAR ;
                                    SENDER ;
                                    GET ;
                                    IF_NONE { PUSH int 12 ; FAILWITH } {} ;
                                    COMPARE ;
                                    GE } } } ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.fromAddr == sp.sender) | (self.data.balances[params.fromAddr].approvals[sp.sender] >= params.amount)))" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          PUSH (option (pair (map %approvals address int) (int %balance))) (Some (Pair {} 0)) ;
                          DUP 6 ;
                          GET 4 ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     GET 3 ;
                     DUP 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.balances[params.fromAddr].balance >= params.amount" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 6 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 18 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 8 ;
                     CAR ;
                     SWAP ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DUP 6 ;
                     GET 4 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 19 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 8 ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     GET 3 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SENDER ; DUP 3 ; CAR ; CAR ; COMPARE ; NEQ } { PUSH bool False } ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DUP 6 ;
                          GET 3 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 21 ; FAILWITH } {} ;
                          UNPAIR ;
                          DUP ;
                          DUP 9 ;
                          GET 4 ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 21 ; FAILWITH } {} ;
                          DIG 9 ;
                          CAR ;
                          SWAP ;
                          SUB ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } } } } ;
         NIL operation ;
         PAIR } }
