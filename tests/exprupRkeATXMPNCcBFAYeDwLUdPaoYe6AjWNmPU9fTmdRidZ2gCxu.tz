{ parameter
    (or (or (or (pair %approve (address %spender) (int %value))
                (pair %getAllowance (address %owner) (pair (address %spender) (contract int))))
            (or (pair %getBalance (address %owner) (contract int)) (contract %getTotalSupply int)))
        (or (pair %mint (address %_to) (int %value))
            (pair %transfer (address %_from) (pair (address %_to) (int %value))))) ;
  storage
    (pair (map %tokens address int)
          (pair (map %allowances (pair address address) int)
                (pair (int %total_supply) (address %owner)))) ;
  code { DUP ;
         CDR ;
         DUG 1 ;
         CAR ;
         DIG 0 ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { NIL operation ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SENDER ;
                     PAIR 2 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     GET 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 0 } {} ;
                     PUSH int 0 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     COMPARE ;
                     GT ;
                     PUSH int 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DUP ;
                     GET 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SOME ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     UPDATE ;
                     UPDATE 3 ;
                     DIP 7 { DROP } ;
                     DUG 6 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } }
                   { NIL operation ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET 3 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     GET 4 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 0 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     GET 3 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     PAIR 2 ;
                     GET ;
                     IF_NONE { PUSH int 0 } {} ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP 4 { DROP } ;
                     DUG 3 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } } }
               { IF_LEFT
                   { NIL operation ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     GET 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET 2 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 0 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     GET 1 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     GET ;
                     IF_NONE { PUSH int 0 } {} ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP 3 { DROP } ;
                     DUG 2 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } }
                   { NIL operation ;
                     DIG 0 ;
                     DUP ;
                     DUG 1 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PUSH mutez 0 ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     GET 5 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP 1 { DROP } ;
                     DUG 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } ;
                     DIP 1 { DROP } } } }
           { IF_LEFT
               { NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 2 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 GET 6 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only owner can mint" ; FAILWITH } {} ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 GET 5 ;
                 ADD ;
                 UPDATE 5 ;
                 DIP 5 { DROP } ;
                 DUG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DUP ;
                 GET 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 GET 1 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 ADD ;
                 SOME ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 UPDATE ;
                 UPDATE 1 ;
                 DIP 5 { DROP } ;
                 DUG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } }
               { NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET 1 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 GET 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET 4 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { SENDER ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      PAIR 2 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      GET 3 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH int 0 } {} ;
                      PUSH int 0 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      SUB ;
                      COMPARE ;
                      LT ;
                      IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      DUP ;
                      GET 3 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      SUB ;
                      SOME ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      UPDATE ;
                      UPDATE 3 ;
                      DIP 8 { DROP } ;
                      DUG 7 ;
                      DIP 0 { DROP } ;
                      DIP 0 { DROP } }
                    {} ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 GET 1 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 SUB ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DUP ;
                 GET 1 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 SUB ;
                 SOME ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 UPDATE ;
                 UPDATE 1 ;
                 DIP 7 { DROP } ;
                 DUG 6 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 GET 1 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET ;
                 IF_NONE { PUSH int 0 } {} ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 DUP ;
                 GET 1 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 ADD ;
                 SOME ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 UPDATE ;
                 UPDATE 1 ;
                 DIP 8 { DROP } ;
                 DUG 7 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } ;
                 DIP 1 { DROP } } } } }
