{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value)) (unit %buy))
            (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                (pair %getBalance (address %owner) (contract nat))))
        (or (pair %getTotalSupply unit (contract nat))
            (pair %transfer (address %from) (pair (address %to) (nat %value))))) ;
  storage
    (pair (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
                (mutez %startPrice))
          (pair (nat %supply) (nat %totalSupply))) ;
  code { NIL operation ;
         LAMBDA
           (pair address
                 (pair (pair (big_map address (pair (map address nat) nat)) mutez) (pair nat nat)))
           (pair (map address nat) nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CAR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         LAMBDA
           (pair (pair (pair (map address nat) nat) address)
                 (pair (pair (big_map address (pair (map address nat) nat)) mutez) (pair nat nat)))
           nat
           { CAR ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     SENDER ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CDR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     DIG 6 ;
                     DIG 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP 2 ;
                     PUSH address "tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV" ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "NoContract" ; FAILWITH } {} ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "NoContract" ; FAILWITH } {} ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     AMOUNT ;
                     DIG 4 ;
                     SENDER ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CDR ;
                     CAR ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CDR ;
                     CDR ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     MUL ;
                     DIG 3 ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     LAMBDA
                       (pair (pair (pair (map address nat) nat) mutez)
                             (pair mutez
                                   (pair (pair (big_map address (pair (map address nat) nat)) mutez) (pair nat nat))))
                       (pair bool
                             (pair (pair (pair (map address nat) nat) mutez)
                                   (pair mutez
                                         (pair (pair (big_map address (pair (map address nat) nat)) mutez) (pair nat nat)))))
                       { DUP ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         COMPARE ;
                         GT ;
                         PUSH nat 0 ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         AND ;
                         IF { PUSH nat 1 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              ADD ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              PUSH nat 1 ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CDR ;
                              CAR ;
                              SUB ;
                              ABS ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              DIG 3 ;
                              SUB ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              { DIP 2 { DUP } ; DIG 3 } ;
                              CDR ;
                              CAR ;
                              { DIP 3 { DUP } ; DIG 4 } ;
                              CDR ;
                              CDR ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              MUL ;
                              { DIP 4 { DUP } ; DIG 5 } ;
                              CDR ;
                              DIG 5 ;
                              CAR ;
                              CDR ;
                              DIG 5 ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PUSH bool True ;
                              PAIR }
                            { DROP 4 ; PUSH bool False ; PAIR } } ;
                     SWAP ;
                     PUSH bool True ;
                     LOOP { DIP { DUP } ; EXEC ; { { DUP ; CAR ; DIP { CDR } } } } ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     AMOUNT ;
                     SUB ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     DIG 3 ;
                     DIG 2 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     DIG 2 ;
                     CDR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     DIG 4 ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     NIL operation ;
                     DIG 3 ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 NIL operation ;
                 DIG 2 ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 CDR ;
                 CDR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR }
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 CAR ;
                 DIG 2 ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 PAIR ;
                 { DIP 6 { DUP } ; DIG 7 } ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                 SENDER ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 NEQ ;
                 IF { { DIP 2 { DUP } ; DIG 3 } ;
                      SENDER ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      SWAP ;
                      EXEC ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      COMPARE ;
                      LT ;
                      IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 2 ;
                      CAR ;
                      { DIP 3 { DUP } ; DIG 4 } ;
                      DIG 3 ;
                      SUB ;
                      ABS ;
                      SOME ;
                      SENDER ;
                      UPDATE ;
                      PAIR }
                    { DIG 5 ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CDR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DIG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 ADD ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DIG 4 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR } } } }
