{ storage
    (pair (pair (pair (address %FA12TokenContract) (address %admin))
                (pair (big_map %metadata string bytes)
                      (pair (int %numberOfStakers) (nat %redeemedRewards))))
          (pair (pair (address %reserve)
                      (pair (map %stakingHistory timestamp int)
                            (map %stakingOptions
                               nat
                               (pair (pair (nat %maxStake) (nat %minStake))
                                     (pair (nat %stakingPercentage) (int %stakingPeriod))))))
                (pair (big_map %userStakeFlexPack
                         address
                         (pair (nat %reward) (pair (timestamp %timestamp) (nat %value))))
                      (pair (big_map %userStakeLockPack
                               address
                               (map nat (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value))))))
                            (option %votingContract address))))) ;
  parameter
    (or (or (or (or (unit %claimRewardFlex)
                    (pair %createStakingOption
                       (nat %id)
                       (pair (nat %rate) (pair (nat %max) (pair (nat %min) (int %duration))))))
                (or (pair %getAdmin unit (contract address))
                    (or (pair %getCurrentPendingRewards address (contract nat))
                        (pair %getFlexStakeInformation
                           address
                           (contract (pair (nat %reward) (pair (timestamp %timestamp) (nat %value))))))))
            (or (or (pair %getLockStakeInformation
                       address
                       (contract (map nat (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value)))))))
                    (or (pair %getReserve unit (contract address))
                        (pair %getStakingOptions
                           unit
                           (contract
                              (map nat
                                   (pair (pair (nat %maxStake) (nat %minStake))
                                         (pair (nat %stakingPercentage) (int %stakingPeriod))))))))
                (or (pair %getTokenContractAddress unit (contract address))
                    (or (pair %getVotingContract unit (contract address)) (nat %stakeFlex)))))
        (or (or (or (pair %stakeLock (nat %amount) (nat %pack))
                    (or (nat %unstakeFlex) (pair %unstakeLock (nat %index) (nat %pack))))
                (or (address %updateAdmin) (or (address %updateContract) (bytes %updateMetadata))))
            (or (or (address %updateReserve)
                    (or (pair %updateStakingOptionDuration (nat %id) (int %duration))
                        (pair %updateStakingOptionMax (nat %id) (nat %max))))
                (or (pair %updateStakingOptionMin (nat %id) (nat %min))
                    (or (pair %updateStakingOptionRate (nat %id) (nat %rate))
                        (address %updateVotingContract)))))) ;
  code { LAMBDA
           (pair address
                 (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                       (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair bool
                       (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                             (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             GET 8 ;
             IF_NONE
               { DIG 2 ; DROP ; PUSH bool False }
               { DROP ;
                 DIG 2 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 8 ;
                 IF_NONE { PUSH int 119 ; FAILWITH } {} ;
                 COMPARE ;
                 EQ } ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                       (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                             (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE { PUSH int 296 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             PUSH nat 100 ;
             PUSH nat 10000000000 ;
             MUL ;
             DUP 5 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             DUP 6 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             CAR ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             DUP ;
             PUSH int 31536000 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             DUP 8 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 9 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 10 ;
             GET 3 ;
             GET 4 ;
             DUP 12 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 293 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             PUSH nat 10000000000 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
             MUL ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
             DUP 5 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SENDER ;
             DUP 6 ;
             GET 3 ;
             CAR ;
             PAIR 3 ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             DUP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH nat 100 ;
             PUSH nat 10000000000 ;
             MUL ;
             DUP 7 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             DUP 8 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             CAR ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             DUP ;
             PUSH int 31536000 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             DUP 10 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 13 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 13 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 11 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 14 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 14 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 12 ;
             GET 3 ;
             GET 4 ;
             DUP 15 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 293 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             PUSH nat 10000000000 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
             MUL ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
             DIG 6 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 9 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 9 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             ADD ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             DUP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             PUSH nat 100 ;
             PUSH nat 10000000000 ;
             MUL ;
             DUP 7 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             DUP 8 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             CAR ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             DUP ;
             PUSH int 31536000 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             DUP 10 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 13 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 13 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 11 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 14 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 14 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 3 ;
             DUP 12 ;
             GET 3 ;
             GET 4 ;
             DUP 15 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 293 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
             PUSH nat 10000000000 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
             MUL ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
             DIG 6 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 9 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             DUP 9 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 291 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             INT ;
             PUSH int -1 ;
             MUL ;
             SOME ;
             NOW ;
             PUSH int 0 ;
             ADD ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             GET 7 ;
             DUP ;
             SENDER ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 299 ; FAILWITH } {} ;
             DUP ;
             DUP 7 ;
             CAR ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 299 ; FAILWITH } {} ;
             NONE (pair nat (pair timestamp nat)) ;
             DIG 8 ;
             CAR ;
             CAR ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 7 ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                       (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address address) (pair (big_map string bytes) (pair int nat)))
                             (pair (pair address (pair (map timestamp int) (map nat (pair (pair nat nat) (pair nat int)))))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE { PUSH int 312 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DUP 4 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             DUP 6 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             DUP 6 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             GET 4 ;
             SENDER ;
             DUP 6 ;
             GET 3 ;
             CAR ;
             PAIR 3 ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             DUP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 5 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
             GET 4 ;
             INT ;
             PUSH int -1 ;
             MUL ;
             SOME ;
             NOW ;
             PUSH int 0 ;
             ADD ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             GET 7 ;
             DUP ;
             SENDER ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 314 ; FAILWITH } {} ;
             DUP ;
             DUP 7 ;
             CAR ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 314 ; FAILWITH } {} ;
             NONE (pair nat (pair timestamp nat)) ;
             DIG 8 ;
             CAR ;
             CAR ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 7 ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         DUP ;
                         GET 5 ;
                         SENDER ;
                         MEM ;
                         IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                         DUP ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 348 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         PUSH nat 100 ;
                         PUSH nat 10000000000 ;
                         MUL ;
                         DUP 7 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 347 ; FAILWITH } {} ;
                         GET 4 ;
                         DUP 8 ;
                         GET 3 ;
                         GET 4 ;
                         PUSH nat 0 ;
                         GET ;
                         IF_NONE { PUSH int 348 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH timestamp "1970-01-01T00:00:00Z" ;
                         DUP ;
                         PUSH int 31536000 ;
                         ADD ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                         DIG 9 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 347 ; FAILWITH } {} ;
                         GET 3 ;
                         NOW ;
                         PUSH int 0 ;
                         ADD ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                         PUSH nat 10000000000 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
                         MUL ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
                         ADD ;
                         UPDATE 1 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (pair address (pair address nat)) ;
                         IF_NONE { PUSH int 352 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 351 ; FAILWITH } {} ;
                         CAR ;
                         SENDER ;
                         DUP 6 ;
                         GET 3 ;
                         CAR ;
                         PAIR 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DIG 6 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 353 ; FAILWITH } {} ;
                         CAR ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 354 ; FAILWITH } {} ;
                         PUSH int 0 ;
                         ISNAT ;
                         IF_NONE { PUSH int 354 ; FAILWITH } {} ;
                         UPDATE 1 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 355 ; FAILWITH } {} ;
                         NOW ;
                         PUSH int 0 ;
                         ADD ;
                         UPDATE 3 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         SWAP }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MEM ;
                         IF { PUSH string "A staking option with this Id already exists" ; FAILWITH }
                            {} ;
                         DUG 2 ;
                         SENDER ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         GET 3 ;
                         IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                         IF {} { PUSH string "Access denied" ; FAILWITH } ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DIG 6 ;
                         DUP ;
                         GET 8 ;
                         SWAP ;
                         DUP ;
                         DUG 8 ;
                         GET 3 ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         GET 7 ;
                         SWAP ;
                         DUP ;
                         DUG 9 ;
                         GET 5 ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         DIG 7 ;
                         CAR ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP } }
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { PUSH nat 0 ;
                             DUP 3 ;
                             GET 5 ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF { PUSH nat 100 ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  DUP 4 ;
                                  GET 5 ;
                                  DUP 4 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 421 ; FAILWITH } {} ;
                                  GET 4 ;
                                  DUP 5 ;
                                  GET 3 ;
                                  GET 4 ;
                                  PUSH nat 0 ;
                                  GET ;
                                  IF_NONE { PUSH int 422 ; FAILWITH } {} ;
                                  GET 3 ;
                                  PUSH timestamp "1970-01-01T00:00:00Z" ;
                                  DUP ;
                                  PUSH int 31536000 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                  DUP 7 ;
                                  GET 5 ;
                                  DUP 7 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 421 ; FAILWITH } {} ;
                                  GET 3 ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
                                  MUL ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
                                  DUP 4 ;
                                  GET 5 ;
                                  DUP 4 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 421 ; FAILWITH } {} ;
                                  CAR ;
                                  DIG 2 ;
                                  ADD ;
                                  ADD }
                                {} ;
                             DUP 3 ;
                             GET 7 ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF { DUP 3 ;
                                  GET 7 ;
                                  DUP 3 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 425 ; FAILWITH } {} ;
                                  ITER { CAR ;
                                         DUP 4 ;
                                         GET 7 ;
                                         DUP 4 ;
                                         CAR ;
                                         GET ;
                                         IF_NONE { PUSH int 426 ; FAILWITH } {} ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         GET ;
                                         IF_NONE { PUSH int 426 ; FAILWITH } {} ;
                                         ITER { CDR ;
                                                DUP ;
                                                GET 3 ;
                                                NOW ;
                                                SWAP ;
                                                DUP 7 ;
                                                GET 3 ;
                                                GET 4 ;
                                                DUP 5 ;
                                                GET ;
                                                IF_NONE { PUSH int 427 ; FAILWITH } {} ;
                                                GET 4 ;
                                                ADD ;
                                                COMPARE ;
                                                LT ;
                                                IF { PUSH nat 100 ;
                                                     PUSH nat 10000000000 ;
                                                     MUL ;
                                                     SWAP ;
                                                     DUP ;
                                                     GET 4 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 3 ;
                                                     CAR ;
                                                     PUSH timestamp "1970-01-01T00:00:00Z" ;
                                                     DUP ;
                                                     PUSH int 31536000 ;
                                                     ADD ;
                                                     SUB ;
                                                     ISNAT ;
                                                     IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                                     DIG 4 ;
                                                     DUP ;
                                                     GET 3 ;
                                                     SWAP ;
                                                     GET 3 ;
                                                     DUP 10 ;
                                                     GET 3 ;
                                                     GET 4 ;
                                                     DUP 8 ;
                                                     GET ;
                                                     IF_NONE { PUSH int 427 ; FAILWITH } {} ;
                                                     GET 4 ;
                                                     ADD ;
                                                     SUB ;
                                                     ISNAT ;
                                                     IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                                     PUSH nat 10000000000 ;
                                                     MUL ;
                                                     EDIV ;
                                                     IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
                                                     MUL ;
                                                     MUL ;
                                                     EDIV ;
                                                     IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
                                                     DIG 2 ;
                                                     ADD ;
                                                     SWAP }
                                                   { DROP } } ;
                                         DROP } ;
                                  DIG 3 ;
                                  DROP }
                                { DIG 3 ; DROP } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 5 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 412 ; FAILWITH } {} }
                                { PUSH string "There is no flexible staking for this address" ; FAILWITH } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } } }
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MEM ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET ;
                              IF_NONE { PUSH int 404 ; FAILWITH } {} }
                            { PUSH string "There is no locked staking for this address" ; FAILWITH } ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 4 ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 8 ;
                             IF_NONE { PUSH int 119 ; FAILWITH } {} ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 4 ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 249 ; FAILWITH } {} ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Amount is too low" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 4 ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 250 ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             LT ;
                             IF {} { PUSH string "Amount is too high" ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %transfer (pair address (pair address nat)) ;
                             IF_NONE { PUSH int 254 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DUP 4 ;
                             DUP 6 ;
                             GET 3 ;
                             CAR ;
                             SENDER ;
                             PAIR 3 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF { PUSH bool False } { DUP 3 ; GET 5 ; SENDER ; MEM ; NOT } ;
                             IF { DIG 2 ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  PUSH int 1 ;
                                  ADD ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  DUG 2 }
                                {} ;
                             DUP 3 ;
                             GET 5 ;
                             SENDER ;
                             MEM ;
                             IF { DUP 3 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 207 ; FAILWITH } {} ;
                                  PUSH nat 100 ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  DUP 8 ;
                                  GET 5 ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE { PUSH int 207 ; FAILWITH } {} ;
                                  GET 4 ;
                                  DUP 9 ;
                                  GET 3 ;
                                  GET 4 ;
                                  PUSH nat 0 ;
                                  GET ;
                                  IF_NONE { PUSH int 207 ; FAILWITH } {} ;
                                  GET 3 ;
                                  PUSH timestamp "1970-01-01T00:00:00Z" ;
                                  DUP ;
                                  PUSH int 31536000 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                  DIG 10 ;
                                  GET 5 ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE { PUSH int 207 ; FAILWITH } {} ;
                                  GET 3 ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
                                  MUL ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
                                  UPDATE 1 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 208 ; FAILWITH } {} ;
                                  DUP ;
                                  GET 4 ;
                                  DUP 7 ;
                                  ADD ;
                                  UPDATE 4 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 209 ; FAILWITH } {} ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  UPDATE 3 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUG 2 }
                                { DIG 2 ;
                                  DUP ;
                                  GET 5 ;
                                  PUSH nat 0 ;
                                  DUP 5 ;
                                  ADD ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  PUSH nat 0 ;
                                  PAIR 3 ;
                                  SOME ;
                                  SENDER ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUG 2 } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DIG 6 ;
                             INT ;
                             SOME ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } } } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 219 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF {} { PUSH string "Amount is too low" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 220 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH string "Amount is too high" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {}
                            { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (pair address (pair address nat)) ;
                         IF_NONE { PUSH int 225 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         CAR ;
                         DUP 6 ;
                         GET 3 ;
                         CAR ;
                         SENDER ;
                         PAIR 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 3 ;
                         GET 7 ;
                         SENDER ;
                         MEM ;
                         IF { PUSH bool False } { DUP 3 ; GET 5 ; SENDER ; MEM ; NOT } ;
                         IF { DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              PUSH int 1 ;
                              ADD ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUG 2 }
                            {} ;
                         DUP 3 ;
                         GET 7 ;
                         SENDER ;
                         MEM ;
                         IF { DUP 3 ;
                              GET 7 ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 233 ; FAILWITH } {} ;
                              DUP 3 ;
                              CDR ;
                              MEM ;
                              IF { DUP 3 ;
                                   DUP ;
                                   GET 7 ;
                                   DUP ;
                                   SENDER ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 237 ; FAILWITH } {} ;
                                   DUP ;
                                   DUP 7 ;
                                   CDR ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 237 ; FAILWITH } {} ;
                                   DUP 8 ;
                                   CAR ;
                                   NOW ;
                                   PUSH int 0 ;
                                   ADD ;
                                   DUP 11 ;
                                   GET 3 ;
                                   GET 4 ;
                                   DUP 11 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH int 227 ; FAILWITH } {} ;
                                   GET 3 ;
                                   PAIR 3 ;
                                   SOME ;
                                   DIG 9 ;
                                   GET 7 ;
                                   SENDER ;
                                   GET ;
                                   IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                   DUP 10 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH int 236 ; FAILWITH } {} ;
                                   SIZE ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   UPDATE 7 ;
                                   DUG 2 }
                                 { DUP 3 ;
                                   DUP ;
                                   GET 7 ;
                                   DUP ;
                                   SENDER ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                                   EMPTY_MAP nat (pair nat (pair timestamp nat)) ;
                                   DUP 7 ;
                                   CAR ;
                                   NOW ;
                                   PUSH int 0 ;
                                   ADD ;
                                   DIG 9 ;
                                   GET 3 ;
                                   GET 4 ;
                                   DUP 10 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH int 227 ; FAILWITH } {} ;
                                   GET 3 ;
                                   PAIR 3 ;
                                   SOME ;
                                   PUSH nat 0 ;
                                   UPDATE ;
                                   SOME ;
                                   DUP 7 ;
                                   CDR ;
                                   UPDATE ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   UPDATE 7 ;
                                   DUG 2 } }
                            { DUP 3 ;
                              DUP ;
                              GET 7 ;
                              EMPTY_MAP nat (map nat (pair nat (pair timestamp nat))) ;
                              EMPTY_MAP nat (pair nat (pair timestamp nat)) ;
                              DUP 6 ;
                              CAR ;
                              NOW ;
                              PUSH int 0 ;
                              ADD ;
                              DIG 8 ;
                              GET 3 ;
                              GET 4 ;
                              DUP 9 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 227 ; FAILWITH } {} ;
                              GET 3 ;
                              PAIR 3 ;
                              SOME ;
                              PUSH nat 0 ;
                              UPDATE ;
                              SOME ;
                              DUP 6 ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              UPDATE 7 ;
                              DUG 2 } ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DIG 6 ;
                         CAR ;
                         INT ;
                         SOME ;
                         NOW ;
                         PUSH int 0 ;
                         ADD ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                             DUP ;
                             DUP 3 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 325 ; FAILWITH } {} ;
                             GET 4 ;
                             COMPARE ;
                             GE ;
                             IF {} { PUSH string "Not enough tokens to unstake" ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %transfer (pair address (pair address nat)) ;
                             IF_NONE { PUSH int 329 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DUP 4 ;
                             SENDER ;
                             DUP 7 ;
                             GET 3 ;
                             CAR ;
                             PAIR 3 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 331 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             PUSH nat 100 ;
                             PUSH nat 10000000000 ;
                             MUL ;
                             DUP 9 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 331 ; FAILWITH } {} ;
                             GET 4 ;
                             DUP 10 ;
                             GET 3 ;
                             GET 4 ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 331 ; FAILWITH } {} ;
                             GET 3 ;
                             PUSH timestamp "1970-01-01T00:00:00Z" ;
                             DUP ;
                             PUSH int 31536000 ;
                             ADD ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                             DIG 11 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 331 ; FAILWITH } {} ;
                             GET 3 ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 368 ; FAILWITH } {} ;
                             PUSH nat 10000000000 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH int 368 ; FAILWITH } { CAR } ;
                             MUL ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH int 371 ; FAILWITH } { CAR } ;
                             ADD ;
                             UPDATE 1 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             DUP ;
                             DUG 3 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 334 ; FAILWITH } {} ;
                             DUP 6 ;
                             DIG 7 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 334 ; FAILWITH } {} ;
                             GET 4 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 334 ; FAILWITH } {} ;
                             UPDATE 4 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 335 ; FAILWITH } {} ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             UPDATE 3 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DIG 6 ;
                             INT ;
                             PUSH int -1 ;
                             MUL ;
                             SOME ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF { PUSH bool False }
                                { SWAP ; DUP ; DUG 2 ; GET 5 ; SENDER ; MEM ; NOT } ;
                             IF { SWAP ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  PUSH int 1 ;
                                  SWAP ;
                                  SUB ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP }
                                {} }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             GET 4 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 273 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             MEM ;
                             IF {} { PUSH string "Never staked using this pack" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF {} { PUSH string "This stake doesn't exist" ; FAILWITH } ;
                             NOW ;
                             DUP 3 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                             DUP 3 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                             DUP 3 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                             GET 3 ;
                             DUP 4 ;
                             GET 3 ;
                             GET 4 ;
                             DUP 4 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 276 ; FAILWITH } {} ;
                             GET 4 ;
                             ADD ;
                             COMPARE ;
                             LT ;
                             IF { DIG 2 ; DROP ; DIG 3 ; DROP ; PAIR ; EXEC ; DUP ; GET 4 ; SWAP ; CAR }
                                { DIG 3 ; DROP ; DIG 3 ; DROP ; PAIR ; EXEC ; DUP ; GET 4 ; SWAP ; CAR } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF { PUSH bool False }
                                { SWAP ; DUP ; DUG 2 ; GET 5 ; SENDER ; MEM ; NOT } ;
                             IF { SWAP ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  PUSH int 1 ;
                                  SWAP ;
                                  SUB ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP }
                                {} } } }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PACK ;
                         SENDER ;
                         PACK ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Access denied" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             SENDER ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             CDR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DIG 4 ;
                             SOME ;
                             PUSH string "" ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR } } ;
                     NIL operation } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PACK ;
                         SENDER ;
                         PACK ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Access denied" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             GET 4 ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             DUP 8 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 165 ; FAILWITH } {} ;
                             DIG 8 ;
                             CDR ;
                             UPDATE 4 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             GET 4 ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             DUP 8 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 177 ; FAILWITH } {} ;
                             UNPAIR ;
                             CDR ;
                             DIG 9 ;
                             CDR ;
                             PAIR ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DUG 2 ;
                         SENDER ;
                         PAIR ;
                         EXEC ;
                         DUP ;
                         GET 4 ;
                         DUG 2 ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         GET 3 ;
                         IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                         IF {} { PUSH string "Access denied" ; FAILWITH } ;
                         DUP 3 ;
                         GET 3 ;
                         GET 4 ;
                         DUP 3 ;
                         CAR ;
                         MEM ;
                         IF {}
                            { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUP 8 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 188 ; FAILWITH } {} ;
                         UNPAIR ;
                         CAR ;
                         DIG 9 ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             GET 4 ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             DUP 8 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 153 ; FAILWITH } {} ;
                             DIG 8 ;
                             CDR ;
                             UPDATE 3 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             SENDER ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SOME ;
                             UPDATE 8 ;
                             NIL operation } } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
