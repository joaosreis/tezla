{ parameter (or (unit %toSigned) (or (unit %sign) (or (unit %terminate) (unit %dispute)))) ;
  storage
    (pair (address %issuer)
          (pair (address %subscriber)
                (pair (mutez %facevalue)
                      (pair (pair %discount int nat)
                            (pair (int %maturityduration)
                                  (pair (int %paybackduration)
                                        (pair (bool %issuersigned)
                                              (pair (bool %subscribersigned) (pair (option %signaturedate timestamp) (nat %_state)))))))))) ;
  code { NIL operation ;
         DIG 1 ;
         UNPAIR ;
         DIP 1
             { UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP } ;
         IF_LEFT
           { DROP 1 ;
             SELF ;
             ADDRESS ;
             SENDER ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
             DUP ;
             DUP ;
             PUSH nat 0 ;
             COMPARE ;
             EQ ;
             IF { NOW ;
                  SOME ;
                  DIP 1 { DIG 2 ; DROP 1 } ;
                  DUG 2 ;
                  PUSH nat 1 ;
                  DIP 1 { DIG 1 ; DROP 1 } ;
                  DUG 1 }
                { PUSH string "InvalidState" ; FAILWITH } ;
             DROP 1 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { DROP 1 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True ; DIP 1 { DIG 3 ; DROP 1 } ; DUG 3 }
                    { DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      SENDER ;
                      COMPARE ;
                      EQ ;
                      IF { PUSH bool True ;
                           DIP 1 { DIG 2 ; DROP 1 } ;
                           DUG 2 ;
                           DIG 7 ;
                           DUP ;
                           DUG 8 ;
                           DIG 7 ;
                           DUP ;
                           DUG 8 ;
                           PAIR ;
                           UNPAIR ;
                           UNPAIR ;
                           ABS ;
                           DIG 2 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "DivByZero" ; FAILWITH } {} ;
                           CAR ;
                           DUP ;
                           AMOUNT ;
                           COMPARE ;
                           GE ;
                           NOT ;
                           IF { PUSH string "SUBSCRIBER_INVALID_TRANSFERRED" ; FAILWITH } {} ;
                           DIG 11 ;
                           DUP ;
                           DUG 12 ;
                           DIG 11 ;
                           DUP ;
                           DUG 12 ;
                           CONTRACT unit ;
                           IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           UNIT ;
                           TRANSFER_TOKENS ;
                           CONS ;
                           DIP 1 { DIG 11 ; DROP 1 } ;
                           DUG 11 ;
                           DROP 1 }
                         { PUSH string "CALLER_NOT_A_SIGNER" ; FAILWITH } } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 AND ;
                 IF { DIG 10 ;
                      DUP ;
                      DUG 11 ;
                      SELF ;
                      ADDRESS ;
                      CONTRACT %toSigned unit ;
                      IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DIP 1 { DIG 10 ; DROP 1 } ;
                      DUG 10 }
                    {} ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { DROP 1 ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                     DUP ;
                     DUP ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          IF_NONE
                            { PUSH bool False }
                            { DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              AMOUNT ;
                              COMPARE ;
                              GE ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              ADD ;
                              ADD ;
                              NOW ;
                              COMPARE ;
                              LE ;
                              NOW ;
                              DIG 10 ;
                              DUP ;
                              DUG 11 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              ADD ;
                              COMPARE ;
                              LE ;
                              AND ;
                              AND ;
                              SWAP ;
                              DROP 1 } ;
                          IF { DIG 11 ;
                               DUP ;
                               DUG 12 ;
                               DIG 10 ;
                               DUP ;
                               DUG 11 ;
                               CONTRACT unit ;
                               IF_NONE { PUSH string "BadContract" ; FAILWITH } {} ;
                               DIG 10 ;
                               DUP ;
                               DUG 11 ;
                               UNIT ;
                               TRANSFER_TOKENS ;
                               CONS ;
                               DIP 1 { DIG 11 ; DROP 1 } ;
                               DUG 11 ;
                               PUSH nat 2 ;
                               DIP 1 { DIG 1 ; DROP 1 } ;
                               DUG 1 }
                             {} }
                        { PUSH string "InvalidState" ; FAILWITH } ;
                     DROP 1 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { DROP 1 ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                     DUP ;
                     DUP ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          IF_NONE
                            { PUSH bool False }
                            { NOW ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              ADD ;
                              ADD ;
                              COMPARE ;
                              LE ;
                              SWAP ;
                              DROP 1 } ;
                          IF { PUSH nat 3 ; DIP 1 { DIG 1 ; DROP 1 } ; DUG 1 } {} }
                        { PUSH string "InvalidState" ; FAILWITH } ;
                     DROP 1 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR } } } } }
