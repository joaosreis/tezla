{ storage
    (pair (pair (address %administrator)
                (pair (nat %all_tokens) (big_map %ledger (pair address nat) nat)))
          (pair (pair (big_map %metadata string bytes)
                      (big_map %operators
                         (pair (address %owner) (pair (address %operator) (nat %token_id)))
                         unit))
                (pair (bool %paused)
                      (big_map %tokens nat (pair (map %metadata_map string bytes) (nat %total_supply)))))) ;
  parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (or (unit %mint) (address %set_administrator)))
        (or (or (pair %set_metdata (string %k) (bytes %v)) (bool %set_pause))
            (or (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                (list %update_operators
                   (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                       (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 IF { PUSH int 430 ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 MAP { DUP 3 ;
                       GET 6 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       MEM ;
                       IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       PAIR ;
                       MEM ;
                       IF { DUP 3 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            PAIR ;
                            GET ;
                            IF_NONE { PUSH int 437 ; FAILWITH } {} ;
                            SWAP ;
                            PAIR %request %balance }
                          { PUSH nat 0 ; SWAP ; PAIR %request %balance } } ;
                 NIL operation ;
                 DIG 2 ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 9 ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 0 ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "NFT-asset: cannon mint the same token twice" ; FAILWITH }
                        {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 0 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 1 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 0 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 0 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2030 }
                                      1)) ;
                     PUSH nat 0 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 1 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 2 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 1 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 1 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2031 }
                                      1)) ;
                     PUSH nat 1 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 2 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 3 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 2 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 2 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 2 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 2 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2032 }
                                      1)) ;
                     PUSH nat 2 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 3 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 4 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 3 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 3 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 3 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 3 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2033 }
                                      1)) ;
                     PUSH nat 3 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 4 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 5 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 4 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 4 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 4 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 4 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2034 }
                                      1)) ;
                     PUSH nat 4 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 5 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 6 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 5 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 5 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 5 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 5 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2035 }
                                      1)) ;
                     PUSH nat 5 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 6 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 7 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 6 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 6 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 6 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 6 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2036 }
                                      1)) ;
                     PUSH nat 6 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 7 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 8 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 7 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 7 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 7 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 7 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2037 }
                                      1)) ;
                     PUSH nat 7 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 8 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 9 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 8 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 8 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 8 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 8 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2038 }
                                      1)) ;
                     PUSH nat 8 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PUSH nat 9 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                     DUP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     PUSH nat 10 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH nat 9 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          PUSH nat 9 ;
                          DUP 7 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } { DROP } ;
                          PUSH nat 1 ;
                          DUP 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PUSH nat 9 ;
                          DIG 8 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH int 17 ; FAILWITH } {} ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DUP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          PUSH (option nat) (Some 1) ;
                          PUSH nat 9 ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option (pair (map %metadata_map string bytes) (nat %total_supply)))
                          (Some (Pair { Elt "decimals" 0x30 ;
                                        Elt "name" 0x486f6d6550616765506978656c ;
                                        Elt "symbol" 0x506978656c2039 }
                                      1)) ;
                     PUSH nat 9 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 510 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR } ;
                 NIL operation } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 525 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP 5 ;
                     CDR ;
                     SOME ;
                     DIG 5 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH int 519 ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     IF { PUSH int 388 ; FAILWITH } {} ;
                     DUP ;
                     ITER { DUP ;
                            CDR ;
                            ITER { DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   SENDER ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True } { SENDER ; DUP 3 ; CAR ; COMPARE ; EQ } ;
                                   IF { PUSH bool True }
                                      { DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        SENDER ;
                                        PAIR %operator %token_id ;
                                        DUP 4 ;
                                        CAR ;
                                        PAIR %owner ;
                                        MEM } ;
                                   IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                   DUP 4 ;
                                   GET 6 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 3 ;
                                   MEM ;
                                   IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                   DUP ;
                                   GET 4 ;
                                   PUSH nat 0 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DUP ;
                                        GET 4 ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET 3 ;
                                        DUP 5 ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH int 414 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                        DUP 4 ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUP 6 ;
                                        GET 3 ;
                                        DUP 8 ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 418 ; FAILWITH } { DROP } ;
                                        DUP 6 ;
                                        GET 4 ;
                                        DIG 9 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 8 ;
                                        GET 3 ;
                                        DUP 10 ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { PUSH int 418 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 418 ; FAILWITH } {} ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        GET 3 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        PAIR ;
                                        MEM ;
                                        IF { DUP 4 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DUP ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 7 ;
                                             CAR ;
                                             PAIR ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH int 421 ; FAILWITH } { DROP } ;
                                             DUP 6 ;
                                             GET 4 ;
                                             DIG 9 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DIG 7 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             GET ;
                                             IF_NONE { PUSH int 421 ; FAILWITH } {} ;
                                             ADD ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 }
                                           { DIG 3 ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             SWAP ;
                                             DUP 5 ;
                                             GET 4 ;
                                             SOME ;
                                             DIG 5 ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             DUG 2 } }
                                      { DROP } } ;
                            DROP } ;
                     DROP }
                   { DUP ;
                     ITER { IF_LEFT
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF {} { PUSH int 480 ; FAILWITH } ;
                                DIG 2 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                PUSH (option unit) (Some Unit) ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 7 ;
                                GET 3 ;
                                PAIR %operator %token_id ;
                                DIG 6 ;
                                CAR ;
                                PAIR %owner ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP }
                              { DUP ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP 3 ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF {} { PUSH int 487 ; FAILWITH } ;
                                DIG 2 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                UNPAIR ;
                                SWAP ;
                                NONE unit ;
                                DIG 5 ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                DUG 7 ;
                                GET 3 ;
                                PAIR %operator %token_id ;
                                DIG 6 ;
                                CAR ;
                                PAIR %owner ;
                                UPDATE ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } } ;
                     DROP } } ;
             NIL operation } ;
         PAIR } }
