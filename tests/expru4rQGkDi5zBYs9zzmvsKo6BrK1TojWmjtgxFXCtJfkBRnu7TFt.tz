{ parameter
    (or (pair %collect (nat %objkt_amount) (nat %swap_id))
        (or (pair %mint_OBJKT
               (pair (address %address) (nat %amount))
               (pair (map %metadata string bytes) (nat %royalties)))
            (pair %swap (nat %objkt_amount) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) ;
  storage
    (pair (pair (address %manager) (pair (big_map %metadata string bytes) (address %objkt)))
          (pair (pair (nat %objkt_id)
                      (big_map %royalties nat (pair (address %issuer) (nat %royalties))))
                (pair (nat %swap_id)
                      (big_map %swaps
                         nat
                         (pair (pair (address %issuer) (nat %objkt_amount))
                               (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))) ;
  code { { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { DUP ;
             CAR ;
             PUSH nat 0 ;
             COMPARE ;
             LT ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 6 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 38 ; FAILWITH } {} } ;
                  CAR ;
                  CAR ;
                  SENDER ;
                  COMPARE ;
                  NEQ }
                { PUSH bool False } ;
             IF {}
                { PUSH string
                       "WrongCondition: (params.objkt_amount > 0) & (sp.sender != self.data.swaps[params.swap_id].issuer)" ;
                  FAILWITH } ;
             PUSH mutez 0 ;
             { DIP 2 { DUP } ; DIG 3 } ;
             GET 6 ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CDR ;
             GET ;
             { IF_NONE { PUSH int 39 ; FAILWITH } {} } ;
             GET 4 ;
             COMPARE ;
             NEQ ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 6 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  GET 4 ;
                  AMOUNT ;
                  EDIV ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  COMPARE ;
                  EQ ;
                  IF { PUSH mutez 1 ;
                       DUP ;
                       { DIP 3 { DUP } ; DIG 4 } ;
                       GET 6 ;
                       { DIP 3 { DUP } ; DIG 4 } ;
                       CDR ;
                       GET ;
                       { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                       GET 4 ;
                       EDIV ;
                       { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                       CAR ;
                       { DIP 3 { DUP } ; DIG 4 } ;
                       GET 6 ;
                       { DIP 3 { DUP } ; DIG 4 } ;
                       CDR ;
                       GET ;
                       { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                       GET 4 ;
                       AMOUNT ;
                       EDIV ;
                       { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                       CAR ;
                       MUL ;
                       MUL ;
                       AMOUNT ;
                       COMPARE ;
                       EQ }
                     { PUSH bool False } ;
                  IF { PUSH mutez 0 ; AMOUNT ; COMPARE ; GT } { PUSH bool False } ;
                  IF {}
                     { PUSH string
                            "WrongCondition: ((params.objkt_amount == sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some())) & (sp.amount == sp.mutez(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some())))) & (sp.amount > sp.tez(0))" ;
                       FAILWITH } ;
                  NIL operation ;
                  DIG 2 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 4 ;
                  GET 6 ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 51 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 51 ; FAILWITH } {} } ;
                  CAR ;
                  CONTRACT unit ;
                  { IF_NONE { PUSH int 51 ; FAILWITH } {} } ;
                  PUSH mutez 1 ;
                  PUSH nat 25 ;
                  DIG 5 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 7 ;
                  GET 6 ;
                  { DIP 6 { DUP } ; DIG 7 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  GET 6 ;
                  { DIP 8 { DUP } ; DIG 9 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  GET 4 ;
                  EDIV ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  CAR ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  GET 4 ;
                  AMOUNT ;
                  EDIV ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } { CAR } } ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  GET 6 ;
                  { DIP 7 { DUP } ; DIG 8 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  CDR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } { CAR } } ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CAR ;
                  CAR ;
                  CONTRACT unit ;
                  { IF_NONE { PUSH int 54 ; FAILWITH } {} } ;
                  PUSH mutez 1 ;
                  PUSH nat 25 ;
                  DIG 5 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 7 ;
                  GET 6 ;
                  { DIP 6 { DUP } ; DIG 7 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  GET 6 ;
                  { DIP 8 { DUP } ; DIG 9 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  GET 4 ;
                  EDIV ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  CAR ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  GET 4 ;
                  AMOUNT ;
                  EDIV ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } { CAR } } ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  GET 6 ;
                  { DIP 7 { DUP } ; DIG 8 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } {} } ;
                  CDR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 48 ; FAILWITH } { CAR } } ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 7 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 9 ;
                  GET 6 ;
                  { DIP 8 { DUP } ; DIG 9 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  GET 4 ;
                  EDIV ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  CAR ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  GET 6 ;
                  { DIP 10 { DUP } ; DIG 11 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  GET 4 ;
                  AMOUNT ;
                  EDIV ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } { CAR } } ;
                  SUB ;
                  ABS ;
                  MUL ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  GET 6 ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 57 ; FAILWITH } {} } ;
                  CAR ;
                  CAR ;
                  CONTRACT unit ;
                  { IF_NONE { PUSH int 57 ; FAILWITH } {} } ;
                  PUSH mutez 1 ;
                  PUSH nat 1000 ;
                  PUSH nat 25 ;
                  DIG 6 ;
                  DUP ;
                  CDR ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 8 ;
                  GET 6 ;
                  { DIP 7 { DUP } ; DIG 8 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  GET 3 ;
                  GET ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CDR ;
                  ADD ;
                  PUSH mutez 1 ;
                  DUP ;
                  DUP ;
                  { DIP 9 { DUP } ; DIG 10 } ;
                  GET 6 ;
                  { DIP 9 { DUP } ; DIG 10 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  GET 4 ;
                  EDIV ;
                  { IF_NONE { PUSH int 43 ; FAILWITH } {} } ;
                  CAR ;
                  { DIP 9 { DUP } ; DIG 10 } ;
                  GET 6 ;
                  { DIP 9 { DUP } ; DIG 10 } ;
                  CDR ;
                  GET ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  GET 4 ;
                  AMOUNT ;
                  EDIV ;
                  { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } {} } ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  { IF_NONE { PUSH int 47 ; FAILWITH } { CAR } } ;
                  MUL ;
                  AMOUNT ;
                  SUB ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS }
                { NIL operation } ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CDR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             { IF_NONE { PUSH int 94 ; FAILWITH } {} } ;
             PUSH mutez 0 ;
             NIL (pair (address %from_)
                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
             { DIP 5 { DUP } ; DIG 6 } ;
             CAR ;
             { DIP 7 { DUP } ; DIG 8 } ;
             GET 6 ;
             { DIP 7 { DUP } ; DIG 8 } ;
             CDR ;
             GET ;
             { IF_NONE { PUSH int 59 ; FAILWITH } {} } ;
             GET 3 ;
             PAIR ;
             SENDER ;
             PAIR ;
             CONS ;
             SELF_ADDRESS ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS ;
             { DIP 2 { DUP } ; DIG 3 } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             { DIP 6 { DUP } ; DIG 7 } ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             { IF_NONE { PUSH int 61 ; FAILWITH } {} } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             CAR ;
             { DIP 8 { DUP } ; DIG 9 } ;
             CAR ;
             DIG 10 ;
             GET 6 ;
             { DIP 10 { DUP } ; DIG 11 } ;
             CDR ;
             GET ;
             { IF_NONE { PUSH int 61 ; FAILWITH } {} } ;
             CAR ;
             CDR ;
             SUB ;
             ABS ;
             SWAP ;
             PAIR ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUG 2 ;
             PUSH nat 0 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             GET 6 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CDR ;
             GET ;
             { IF_NONE { PUSH int 63 ; FAILWITH } {} } ;
             CAR ;
             CDR ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ;
                  { { DUP ; CAR ; DIP { CDR } } } ;
                  SWAP ;
                  { { DUP ; CAR ; DIP { CDR } } } ;
                  SWAP ;
                  { { DUP ; CAR ; DIP { CDR } } } ;
                  SWAP ;
                  NONE (pair (pair (address %issuer) (nat %objkt_amount))
                             (pair (nat %objkt_id) (mutez %xtz_per_objkt))) ;
                  DIG 6 ;
                  CDR ;
                  UPDATE ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP }
                { SWAP ; DROP } }
           { IF_LEFT
               { DUP ;
                 CAR ;
                 CDR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF { DUP ;
                      GET 4 ;
                      PUSH nat 0 ;
                      SWAP ;
                      COMPARE ;
                      GE ;
                      IF { DUP ; GET 4 ; PUSH nat 250 ; SWAP ; COMPARE ; LE }
                         { PUSH bool False } }
                    { PUSH bool False } ;
                 IF { DUP ; GET 3 ; SIZE ; PUSH nat 106 ; SWAP ; COMPARE ; LE }
                    { PUSH bool False } ;
                 IF {}
                    { PUSH string
                           "WrongCondition: ((params.amount > 0) & ((params.royalties >= 0) & (params.royalties <= 250))) & (sp.len(params.metadata) <= 106)" ;
                      FAILWITH } ;
                 NIL operation ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount))
                         (pair (nat %token_id) (map %token_info string bytes))) ;
                 { IF_NONE { PUSH int 70 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 GET 3 ;
                 { DIP 5 { DUP } ; DIG 6 } ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 DIG 5 ;
                 GET 4 ;
                 SENDER ;
                 PAIR ;
                 SOME ;
                 DIG 6 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: params.objkt_amount > 0" ; FAILWITH } ;
                 NIL operation ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 { IF_NONE { PUSH int 94 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 NIL (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
                 NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 GET 3 ;
                 PAIR ;
                 SELF_ADDRESS ;
                 PAIR ;
                 CONS ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 { { DUP ; CAR ; DIP { CDR } } } ;
                 SWAP ;
                 DIG 5 ;
                 DUP ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 GET 3 ;
                 PAIR ;
                 DIG 6 ;
                 CAR ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 6 ;
                 GET 5 ;
                 UPDATE ;
                 SWAP ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
