{ parameter
    (or (ticket %receive nat)
        (pair %send (contract %destination (ticket nat)) (nat %ticket_id))) ;
  storage
    (pair (address %admin) (pair (big_map %tickets nat (ticket nat)) (nat %current_id))) ;
  code { PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         IF {} { PUSH string "failed assertion" ; FAILWITH } ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         DIG 3 ;
         IF_LEFT
           { READ_TICKET ;
             DROP ;
             SOME ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET_AND_UPDATE ;
             DROP ;
             PUSH nat 1 ;
             DIG 2 ;
             ADD ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             NIL operation ;
             PAIR }
           { DIG 3 ;
             DUP ;
             DUG 4 ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             SWAP ;
             NONE (ticket nat) ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             GET_AND_UPDATE ;
             IF_NONE
               { DROP 4 ; PUSH string "no tickets" ; FAILWITH }
               { DIG 2 ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 DUG 2 ;
                 PAIR ;
                 DIG 2 ;
                 PAIR ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
