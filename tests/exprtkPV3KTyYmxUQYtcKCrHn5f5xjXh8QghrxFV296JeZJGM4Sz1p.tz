{ parameter
    (or (or (address %authorizeFactory)
            (pair %listInstrument (address %address) (pair (string %isin) (string %name))))
        (or (address %unAuthorizeFactory) (string %unlistInstrument))) ;
  storage
    (pair (pair (set %authorizedFactories address) (address %eventSinkContractAddress))
          (pair (address %registrarAddress)
                (pair (map %tokensByIsinCode
                         string
                         (pair (address %address) (pair (string %isin) (string %name))))
                      (map %tokensByName
                         string
                         (pair (address %address) (pair (string %isin) (string %name))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Sender is not the registry owner" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 MEM ;
                 IF { DROP }
                    { SWAP ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      PUSH bool True ;
                      DIG 4 ;
                      UPDATE ;
                      PAIR ;
                      PAIR } ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF {} { PUSH string "Sender is not an authorized factory" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 MEM ;
                 IF { PUSH string "Token with this name already exists" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 MEM ;
                 IF { PUSH string "Token with this isin already exists" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CONTRACT %InstrumentListed
                   (pair (address %address) (pair (string %isin) (string %name))) ;
                 IF_NONE { PUSH string "test error" ; FAILWITH } { DROP } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CONTRACT %InstrumentListed
                   (pair (address %address) (pair (string %isin) (string %name))) ;
                 IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "Sender is not the registry owner" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH bool False ;
                 DIG 4 ;
                 UPDATE ;
                 PAIR ;
                 PAIR ;
                 NIL operation }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 MEM ;
                 IF {} { PUSH string "Sender is not an authorized factory" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 MEM ;
                 IF {} { PUSH string "No Token with this isin exists" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CONTRACT %InstrumentUnlisted
                   (pair (address %address) (pair (string %isin) (string %name))) ;
                 IF_NONE { PUSH string "test error" ; FAILWITH } { DROP } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CONTRACT %InstrumentUnlisted
                   (pair (address %address) (pair (string %isin) (string %name))) ;
                 IF_NONE { PUSH int 78 ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 GET ;
                 IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 NONE (pair (address %address) (pair (string %isin) (string %name))) ;
                 DIG 7 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 GET ;
                 IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 NONE (pair (address %address) (pair (string %isin) (string %name))) ;
                 DIG 6 ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP } } ;
         PAIR } }
