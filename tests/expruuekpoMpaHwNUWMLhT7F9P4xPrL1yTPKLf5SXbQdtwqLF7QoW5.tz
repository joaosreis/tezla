{ storage (pair (int %x) (pair (string %y) (int %z))) ;
  parameter (or (unit %f) (unit %g)) ;
  code { LAMBDA
           (pair (pair (int %x) (pair (string %y) (int %z))) int)
           (pair (list operation) (pair (pair (int %x) (pair (string %y) (int %z))) int))
           { { NIL operation ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               SWAP ;
               NONE key_hash ;
               SET_DELEGATE ;
               CONS ;
               SWAP ;
               DUP ;
               CDR ;
               PUSH int 1 ;
               DIG 2 ;
               CAR ;
               ADD ;
               PAIR ;
               DUP ;
               CAR ;
               DIG 3 ;
               CDR ;
               MUL ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR } } ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { DIG 2 ;
               DUP ;
               DUG 3 ;
               PUSH int 5 ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               PAIR ;
               EXEC ;
               DUP ;
               CAR ;
               NIL operation ;
               SWAP ;
               ITER { CONS } ;
               DIG 3 ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CAR ;
               DUG 3 ;
               DIG 4 ;
               DUP ;
               DUG 5 ;
               PUSH int 10 ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               PAIR ;
               EXEC ;
               DUP ;
               CAR ;
               ITER { DIG 2 ; SWAP ; CONS ; SWAP } ;
               DIG 4 ;
               DROP ;
               DIG 3 ;
               DROP ;
               DUP ;
               CDR ;
               CAR ;
               DUG 3 ;
               DIG 3 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               CAR ;
               DIG 2 ;
               CDR ;
               CDR ;
               DIG 4 ;
               CDR ;
               CDR ;
               ADD ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP } }
           { { DIG 2 ;
               DUP ;
               DUG 3 ;
               PUSH int 6 ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               PAIR ;
               EXEC ;
               DUP ;
               CAR ;
               NIL operation ;
               SWAP ;
               ITER { CONS } ;
               DIG 3 ;
               DROP ;
               DIG 2 ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CAR ;
               DUG 2 ;
               DIG 2 ;
               DUP ;
               CAR ;
               SWAP ;
               CDR ;
               CAR ;
               DIG 3 ;
               CDR ;
               CDR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP } } ;
         DIG 2 ;
         DROP ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
