{ storage
    (pair (pair (nat %id) (nat %limit))
          (pair (list %previousWinners address) (map %ticketToAddress nat address))) ;
  parameter nat ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         AMOUNT ;
         PUSH mutez 1 ;
         PUSH nat 10000 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         MUL ;
         MUL ;
         COMPARE ;
         EQ ;
         IF {}
            { PUSH string "WrongCondition: sp.mutez(params * 10000) == sp.amount" ;
              FAILWITH } ;
         PUSH mutez 0 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CAR ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CDR ;
         SUB ;
         ISNAT ;
         IF_NONE { PUSH int 16 ; FAILWITH } {} ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         COMPARE ;
         GT ;
         IF { DROP 2 ;
              SWAP ;
              DUP ;
              DUG 2 ;
              CAR ;
              CAR ;
              DIG 2 ;
              DUP ;
              DUG 3 ;
              CAR ;
              CDR ;
              SUB ;
              ISNAT ;
              IF_NONE { PUSH int 16 ; FAILWITH } {} ;
              PUSH mutez 1 ;
              DIG 3 ;
              DUP ;
              DUG 4 ;
              CAR ;
              CAR ;
              DIG 4 ;
              DUP ;
              DUG 5 ;
              CAR ;
              CDR ;
              SUB ;
              ISNAT ;
              IF_NONE { PUSH int 16 ; FAILWITH } {} ;
              DIG 3 ;
              DUP ;
              DUG 4 ;
              SUB ;
              ISNAT ;
              IF_NONE { PUSH int 19 ; FAILWITH } {} ;
              PUSH nat 10000 ;
              MUL ;
              MUL ;
              SWAP }
            {} ;
         DUP ;
         PUSH nat 1 ;
         ADD ;
         PUSH nat 1 ;
         DUP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         GT ;
         LOOP { DIG 5 ;
                DUP ;
                DUG 6 ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DUP ;
                CAR ;
                SWAP ;
                CDR ;
                DIG 8 ;
                CAR ;
                CAR ;
                SENDER ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                PUSH nat 1 ;
                ADD ;
                PAIR ;
                PAIR ;
                DUG 5 ;
                PUSH nat 1 ;
                ADD ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT } ;
         DROP 2 ;
         PUSH mutez 0 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         GT ;
         IF { NIL operation ;
              SENDER ;
              CONTRACT unit ;
              IF_NONE { PUSH int 27 ; FAILWITH } {} ;
              DIG 3 ;
              DUP ;
              DUG 4 ;
              UNIT ;
              TRANSFER_TOKENS ;
              CONS }
            { NIL operation } ;
         PUSH nat 5 ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         CAR ;
         COMPARE ;
         EQ ;
         IF { DIG 4 ;
              DUP ;
              DUG 5 ;
              CDR ;
              CDR ;
              PUSH int 5 ;
              PUSH timestamp "0" ;
              PUSH timestamp "1595667167" ;
              SUB ;
              EDIV ;
              IF_NONE { PUSH int 36 ; FAILWITH } { CDR } ;
              GET ;
              IF_NONE { PUSH int 39 ; FAILWITH } {} ;
              CONTRACT unit ;
              IF_NONE { PUSH int 39 ; FAILWITH } {} ;
              PUSH mutez 50000 ;
              UNIT ;
              TRANSFER_TOKENS ;
              CONS ;
              DIG 4 ;
              DUP ;
              DUG 5 ;
              DUP ;
              CAR ;
              SWAP ;
              CDR ;
              CDR ;
              DIG 6 ;
              DUP ;
              DUG 7 ;
              CDR ;
              CAR ;
              DIG 7 ;
              CDR ;
              CDR ;
              PUSH int 5 ;
              PUSH timestamp "0" ;
              PUSH timestamp "1595667167" ;
              SUB ;
              EDIV ;
              IF_NONE { PUSH int 36 ; FAILWITH } { CDR } ;
              GET ;
              IF_NONE { PUSH int 40 ; FAILWITH } {} ;
              CONS ;
              PAIR ;
              SWAP ;
              PAIR ;
              DUP ;
              CDR ;
              SWAP ;
              CAR ;
              CDR ;
              PUSH nat 0 ;
              PAIR ;
              PAIR ;
              DUP ;
              DUG 5 ;
              CAR ;
              CDR ;
              PUSH nat 0 ;
              DUP ;
              DIG 2 ;
              DUP ;
              DUG 3 ;
              COMPARE ;
              GT ;
              LOOP { DIG 6 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     NONE address ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 6 ;
                     PUSH nat 1 ;
                     ADD ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     COMPARE ;
                     GT } ;
              DROP 2 ;
              SWAP ;
              DROP ;
              SWAP ;
              DROP ;
              SWAP ;
              DROP }
            { SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
