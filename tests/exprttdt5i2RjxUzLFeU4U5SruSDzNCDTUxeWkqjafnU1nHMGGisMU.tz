{ storage
    (pair (pair (list %findNumberofWins int)
                (map %horses int (pair (int %horseId) (pair (string %horseName) (list %winTimes int)))))
          (pair (address %owner) (pair (string %track) (string %winner)))) ;
  parameter
    (or (or (pair %addHorse (int %horseId) (pair (string %horseName) (list %winTimes int)))
            (address %addOwner))
        (or (string %changeTrack) (or (int %findNumberofWins) (string %makeWinner)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 SOME ;
                 SWAP ;
                 CAR ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR }
               { SWAP ; DUP ; CAR ; SWAP ; CDR ; CDR ; DIG 2 ; PAIR ; SWAP ; PAIR } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     GET ;
                     IF_NONE { PUSH int 20 ; FAILWITH } {} ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } } } ;
         NIL operation ;
         PAIR } }
