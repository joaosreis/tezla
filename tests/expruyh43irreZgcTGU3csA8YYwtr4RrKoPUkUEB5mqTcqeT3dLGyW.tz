{ storage
    (pair (pair (map %SecretStore bytes string) (bytes %hashedSecret)) (int %nonce)) ;
  parameter
    (pair (pair (string %encryptedData) (bytes %nexthashedProof)) (bytes %secret)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CDR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         BLAKE2B ;
         COMPARE ;
         EQ ;
         IF { {} }
            { { PUSH string "WrongCondition: sp.blake2b(params.secret) == self.data.hashedSecret" ;
                FAILWITH } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         PACK ;
         BLAKE2B ;
         MEM ;
         IF { { PUSH string
                     "WrongCondition: ~ (self.data.SecretStore.contains(sp.blake2b(sp.pack(params.encryptedData))))" ;
                FAILWITH } }
            { {} } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CAR ;
         SOME ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CAR ;
         PACK ;
         BLAKE2B ;
         UPDATE ;
         PAIR ;
         PAIR ;
         DUG 2 ;
         SWAP ;
         DROP ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         PUSH int 1 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         ADD ;
         SWAP ;
         PAIR ;
         DUG 2 ;
         SWAP ;
         DROP ;
         SWAP ;
         DUP ;
         DUG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         CAR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         SWAP ;
         PAIR ;
         PAIR ;
         DUG 2 ;
         DROP ;
         DROP ;
         NIL operation ;
         PAIR } }
