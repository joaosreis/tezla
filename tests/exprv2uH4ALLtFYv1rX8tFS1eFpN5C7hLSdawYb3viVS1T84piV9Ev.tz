{ parameter
    (or (or (or (list %addMembers
                   (pair address
                         (pair (pair (pair (bytes %country) (timestamp %expires)) (pair (nat %rating) (nat %region)))
                               (bool %restricted))))
                (pair %checkMember
                   (list address)
                   (big_map
                      bytes
                      (pair (pair (nat %country_invest_limit) (nat %min_rating))
                            (map %rating_restrictions nat nat)))))
            (or (pair %getMember
                   address
                   (lambda
                      (pair (pair (pair (bytes %country) (timestamp %expires)) (pair (nat %rating) (nat %region)))
                            (bool %restricted))
                      (list operation)))
                (list %removeMembers address)))
        (pair %setMemberCountry address bytes)) ;
  storage
    (pair (big_map %members
             address
             (pair (pair (pair (bytes %country) (timestamp %expires)) (pair (nat %rating) (nat %region)))
                   (bool %restricted)))
          (address %owner)) ;
  code { NIL operation ;
         PUSH string "13" ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { UNIT } { PUSH string "11" ; FAILWITH } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            SOME ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            UPDATE ;
                            DIP { DROP 2 } } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 5 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     NIL (pair bytes bool) ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH string "12" ; FAILWITH } { DUP ; DIP { DROP } } ;
                            DUP ;
                            CDR ;
                            NOT ;
                            IF { PUSH unit Unit } { PUSH string "14" ; FAILWITH } ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            GET ;
                            IF_NONE { DIG 11 ; DUP ; DUG 12 ; FAILWITH } { DROP ; PUSH unit Unit } ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            COMPARE ;
                            LE ;
                            IF { PUSH unit Unit } { DIG 13 ; DUP ; DUG 14 ; FAILWITH } ;
                            DIP { DROP 3 } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            PUSH bool False ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            CONS ;
                            DIP { DROP 3 } } ;
                     NIL operation ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 7 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 6 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { UNIT } { PUSH string "11" ; FAILWITH } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            NONE (pair (pair (pair bytes timestamp) (pair nat nat)) bool) ;
                            SWAP ;
                            UPDATE ;
                            DIP { DROP } } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 5 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CDR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { UNIT } { PUSH string "11" ; FAILWITH } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CDR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SOME ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             UPDATE ;
             PAIR ;
             NIL operation ;
             PAIR ;
             DIP { DROP 7 } } ;
         DIP { DROP 4 } } }
