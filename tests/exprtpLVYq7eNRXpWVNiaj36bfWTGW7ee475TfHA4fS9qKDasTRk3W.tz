{ parameter
    (or (or (or (or (pair %bid (string %question) (pair (nat %rate) (nat %quantity)))
                    (pair %burn (string %question) (nat %token_quantity)))
                (or (pair %buyToken (string %question) (pair (bool %token_type) (nat %coin_quantity)))
                    (string %claimWinnings)))
            (or (or (string %closeAuction) (pair %closeMarket (string %question) (bool %is_yes)))
                (or (pair %createQuestion
                       (string %question)
                       (pair (timestamp %auction_end)
                             (pair (timestamp %market_close) (pair (nat %rate) (nat %quantity)))))
                    (pair %swap (string %question) (pair (bool %token_in_type) (nat %fixed_token_in))))))
        (or (pair %updateLiquidity (string %question) (pair (bool %add_lqt) (nat %lqt_amount)))
            (string %withdrawAuction))) ;
  storage
    (pair (pair (pair (nat %last_token_created) (address %owner))
                (pair (big_map %questions
                         string
                         (pair (address %owner)
                               (pair (or %state
                                        (or (unit %questionAuctionOpen) (unit %questionAuctionWithdrawOpen))
                                        (unit %questionMarketClosed))
                                     (pair (timestamp %auction_end)
                                           (pair (timestamp %market_close)
                                                 (pair (map %auction_bids
                                                          address
                                                          (pair (nat %rate) (pair (nat %quantity) (nat %total_token))))
                                                       (pair (option %tokens
                                                                (pair (nat %yes_token_id) (pair (nat %no_token_id) (nat %lqt_token_id))))
                                                             (pair (option %winning_token nat)
                                                                   (pair (nat %total_auction_quantity)
                                                                         (pair (nat %yes_preference) (nat %uniswap_contribution_factor)))))))))))
                      (address %stablecoin)))
          (pair %tokens
             (big_map %ledger
                (pair address nat)
                (pair (nat %balance) (map %allowances address nat)))
             (pair (big_map %operators (pair address (pair address nat)) unit)
                   (pair (big_map %token_total_supply nat nat)
                         (big_map %token_metadata
                            nat
                            (pair (nat %token_id)
                                  (pair (string %symbol)
                                        (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))))) ;
  code { PUSH nat 1000000000000000000 ;
         PUSH nat 100 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } { DROP } ;
         PUSH int 4 ;
         PUSH int 16 ;
         PUSH int 18 ;
         PUSH int 21 ;
         PUSH int 1002 ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
                 nat)
           (big_map (pair address nat) (pair nat (map address nat)))
           { UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE { EMPTY_MAP address nat ; PUSH nat 0 ; PAIR } {} ;
             CDR ;
             DIG 3 ;
             PAIR ;
             SOME ;
             DIG 2 ;
             UPDATE } ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } { CAR } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
                          nat)
                       (lambda
                          (pair (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
                                nat)
                          (big_map (pair address nat) (pair nat (map address nat)))))
                 (pair (pair address nat)
                       (pair nat (big_map (pair address nat) (pair nat (map address nat))))))
           (big_map (pair address nat) (pair nat (map address nat)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; DIG 2 ; DROP ; NONE (pair nat (map address nat)) ; SWAP ; UPDATE }
                { DUG 2 ; PAIR ; PAIR ; EXEC } } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
                          nat)
                       (lambda
                          (pair (pair (pair address nat) (big_map (pair address nat) (pair nat (map address nat))))
                                nat)
                          (big_map (pair address nat) (pair nat (map address nat)))))
                 (pair (pair address nat)
                       (pair nat (big_map (pair address nat) (pair nat (map address nat))))))
           (big_map (pair address nat) (pair nat (map address nat)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DROP 3 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
               { PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP ; DIG 2 ; DROP ; NONE (pair nat (map address nat)) ; SWAP ; UPDATE }
                    { DUG 2 ; PAIR ; PAIR ; EXEC } } } ;
         SWAP ;
         APPLY ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         DUP ;
         DUG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address nat)
                                (pair nat (big_map (pair address nat) (pair nat (map address nat)))))
                          (big_map (pair address nat) (pair nat (map address nat))))
                       (lambda
                          (pair (pair address nat)
                                (pair nat (big_map (pair address nat) (pair nat (map address nat)))))
                          (big_map (pair address nat) (pair nat (map address nat)))))
                 (pair (pair (pair address address) (pair nat nat))
                       (pair (big_map (pair address nat) (pair nat (map address nat)))
                             (pair (big_map (pair address (pair address nat)) unit)
                                   (pair (big_map nat nat)
                                         (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))))
           (pair (big_map (pair address nat) (pair nat (map address nat)))
                 (pair (big_map (pair address (pair address nat)) unit)
                       (pair (big_map nat nat)
                             (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             PAIR ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         DIG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address nat)
                                (pair nat (big_map (pair address nat) (pair nat (map address nat)))))
                          (big_map (pair address nat) (pair nat (map address nat))))
                       string)
                 (pair (pair address nat)
                       (pair nat
                             (pair (big_map (pair address nat) (pair nat (map address nat)))
                                   (pair (big_map (pair address (pair address nat)) unit)
                                         (pair (big_map nat nat)
                                               (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))))))))
           (pair (big_map (pair address nat) (pair nat (map address nat)))
                 (pair (big_map (pair address (pair address nat)) unit)
                       (pair (big_map nat nat)
                             (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 2 ;
             PAIR ;
             DIG 4 ;
             DIG 4 ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 3 ; DIG 6 ; FAILWITH }
               { DIG 10 ; DROP ; DIG 3 ; DIG 3 ; DIG 2 ; ADD ; SOME ; DIG 2 ; UPDATE } ;
             DUG 2 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             CDR ;
             SWAP ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         DIG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair address nat)
                                (pair nat (big_map (pair address nat) (pair nat (map address nat)))))
                          (big_map (pair address nat) (pair nat (map address nat))))
                       string)
                 (pair (pair address nat)
                       (pair nat
                             (pair (big_map (pair address nat) (pair nat (map address nat)))
                                   (pair (big_map (pair address (pair address nat)) unit)
                                         (pair (big_map nat nat)
                                               (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))))))))
           (pair (big_map (pair address nat) (pair nat (map address nat)))
                 (pair (big_map (pair address (pair address nat)) unit)
                       (pair (big_map nat nat)
                             (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 2 ;
             PAIR ;
             DIG 4 ;
             DIG 4 ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 3 ; DIG 6 ; FAILWITH }
               { DIG 10 ;
                 DROP ;
                 DIG 3 ;
                 DIG 3 ;
                 DIG 2 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
                 SOME ;
                 DIG 2 ;
                 UPDATE } ;
             DUG 2 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             CDR ;
             SWAP ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         PUSH nat 997 ;
         LAMBDA
           (pair (pair address (pair address nat)) address)
           operation
           { UNPAIR ;
             SWAP ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE { PUSH int 200 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 2 ;
             TRANSFER_TOKENS } ;
         NIL operation ;
         DIG 14 ;
         DUP ;
         DUG 15 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair address (pair address nat)) address) operation) nat)
                 (pair (pair (pair string (pair nat nat))
                             (pair (pair (pair nat address)
                                         (pair (big_map
                                                  string
                                                  (pair address
                                                        (pair (or (or unit unit) unit)
                                                              (pair timestamp
                                                                    (pair timestamp
                                                                          (pair (map address (pair nat (pair nat nat)))
                                                                                (pair (option (pair nat (pair nat nat))) (pair (option nat) (pair nat (pair nat nat))))))))))
                                               address))
                                   (pair (big_map (pair address nat) (pair nat (map address nat)))
                                         (pair (big_map (pair address (pair address nat)) unit)
                                               (pair (big_map nat nat)
                                                     (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))))
                       (pair timestamp (pair mutez (pair address address)))))
           (pair (list operation)
                 (pair (pair (pair nat address)
                             (pair (big_map
                                      string
                                      (pair address
                                            (pair (or (or unit unit) unit)
                                                  (pair timestamp
                                                        (pair timestamp
                                                              (pair (map address (pair nat (pair nat nat)))
                                                                    (pair (option (pair nat (pair nat nat))) (pair (option nat) (pair nat (pair nat nat))))))))))
                                   address))
                       (pair (big_map (pair address nat) (pair nat (map address nat)))
                             (pair (big_map (pair address (pair address nat)) unit)
                                   (pair (big_map nat nat)
                                         (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SWAP ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 6 ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CDR ;
             CAR ;
             DIG 3 ;
             CAR ;
             COMPARE ;
             GT ;
             IF { DROP 2 ; PUSH int 10 ; FAILWITH }
                { PUSH nat 0 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CAR ;
                  COMPARE ;
                  EQ ;
                  DIG 7 ;
                  DUP ;
                  DUG 8 ;
                  DIG 3 ;
                  CDR ;
                  CAR ;
                  COMPARE ;
                  GT ;
                  OR ;
                  IF { DROP ; PUSH int 11 ; FAILWITH } {} } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CDR ;
             CDR ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             MUL ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CAR ;
             DIG 9 ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { DROP } { SWAP ; DROP } ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             CDR ;
             MUL ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             ADD ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             DIG 8 ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             CDR ;
             CDR ;
             PAIR ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 13 ;
             CDR ;
             CDR ;
             CAR ;
             DUG 2 ;
             SOME ;
             DIG 2 ;
             UPDATE ;
             PAIR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 8 ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 7 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 6 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 5 ;
             CAR ;
             DUG 2 ;
             SOME ;
             DIG 2 ;
             UPDATE ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR } ;
         SWAP ;
         APPLY ;
         DIG 15 ;
         DUP ;
         DUG 16 ;
         DIG 15 ;
         DUP ;
         DUG 16 ;
         DIG 12 ;
         DUP ;
         DUG 13 ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         PAIR ;
         PAIR ;
         PAIR ;
         LAMBDA
           (pair (pair (pair (pair (lambda
                                      (pair (pair address nat)
                                            (pair nat
                                                  (pair (big_map (pair address nat) (pair nat (map address nat)))
                                                        (pair (big_map (pair address (pair address nat)) unit)
                                                              (pair (big_map nat nat)
                                                                    (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))))
                                      (pair (big_map (pair address nat) (pair nat (map address nat)))
                                            (pair (big_map (pair address (pair address nat)) unit)
                                                  (pair (big_map nat nat)
                                                        (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))))))
                                   int)
                             int)
                       nat)
                 (pair (pair string
                             (pair (pair (pair nat address)
                                         (pair (big_map
                                                  string
                                                  (pair address
                                                        (pair (or (or unit unit) unit)
                                                              (pair timestamp
                                                                    (pair timestamp
                                                                          (pair (map address (pair nat (pair nat nat)))
                                                                                (pair (option (pair nat (pair nat nat))) (pair (option nat) (pair nat (pair nat nat))))))))))
                                               address))
                                   (pair (big_map (pair address nat) (pair nat (map address nat)))
                                         (pair (big_map (pair address (pair address nat)) unit)
                                               (pair (big_map nat nat)
                                                     (big_map nat (pair nat (pair string (pair string (pair nat (map string string)))))))))))
                       (pair timestamp (pair mutez (pair address address)))))
           (pair (pair (pair nat address)
                       (pair (big_map
                                string
                                (pair address
                                      (pair (or (or unit unit) unit)
                                            (pair timestamp
                                                  (pair timestamp
                                                        (pair (map address (pair nat (pair nat nat)))
                                                              (pair (option (pair nat (pair nat nat))) (pair (option nat) (pair nat (pair nat nat))))))))))
                             address))
                 (pair (big_map (pair address nat) (pair nat (map address nat)))
                       (pair (big_map (pair address (pair address nat)) unit)
                             (pair (big_map nat nat)
                                   (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))))))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 4 ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 6 ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CAR ;
             IF_LEFT
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     IF { DUP ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DUP ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP 2 ; DIG 6 ; DUP ; DUG 7 ; FAILWITH }
                             { EDIV ; IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ; CAR } ;
                          SWAP ;
                          DIG 9 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP 2 ; DIG 6 ; FAILWITH }
                             { DIG 8 ;
                               DROP ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR } ;
                          DUP ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          ADD ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          DIG 4 ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          PAIR ;
                          DIG 8 ;
                          DUP ;
                          DUG 9 ;
                          SWAP ;
                          EXEC ;
                          DIG 3 ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          PAIR ;
                          DIG 7 ;
                          DUP ;
                          DUG 8 ;
                          SWAP ;
                          EXEC ;
                          DIG 2 ;
                          PAIR ;
                          SWAP ;
                          CDR ;
                          CDR ;
                          DIG 5 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          CDR ;
                          PUSH unit Unit ;
                          RIGHT unit ;
                          LEFT unit ;
                          PAIR ;
                          DIG 4 ;
                          CAR ;
                          PAIR ;
                          DIG 4 ;
                          DUG 2 ;
                          SOME ;
                          DIG 2 ;
                          UPDATE ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR }
                        { DROP 8 ; PUSH int 12 ; FAILWITH } }
                   { DROP 3 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP } }
               { DROP 3 ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DROP } } ;
         SWAP ;
         APPLY ;
         DIG 17 ;
         UNPAIR ;
         SELF_ADDRESS ;
         SENDER ;
         PAIR ;
         AMOUNT ;
         PAIR ;
         NOW ;
         PAIR ;
         SWAP ;
         IF_LEFT
           { DIG 13 ;
             DROP ;
             DIG 18 ;
             DROP ;
             IF_LEFT
               { DIG 5 ;
                 DROP ;
                 DIG 15 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUG 2 ;
                         PAIR ;
                         PAIR ;
                         EXEC }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF_NONE { DIG 5 ; FAILWITH } { DIG 6 ; DROP } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         CDR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { DIG 4 ;
                     DROP ;
                     DIG 6 ;
                     DROP ;
                     IF_LEFT
                       { DIG 9 ;
                         DROP ;
                         DIG 11 ;
                         DROP ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         CAR ;
                         IF_LEFT
                           { IF_LEFT { DROP ; UNIT } { DROP ; UNIT } ; DROP }
                           { DROP ; DIG 13 ; DUP ; DUG 14 ; FAILWITH } ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF { DIG 11 ; FAILWITH } { DIG 11 ; DROP } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 3 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF { PAIR ; PAIR ; DIG 4 ; SWAP ; EXEC }
                            { DROP ; SWAP ; DROP ; DIG 4 ; DROP } ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF_NONE { DIG 9 ; FAILWITH } { DIG 10 ; DROP } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         IF { DUP ; CDR ; CAR ; SWAP ; CAR ; PAIR }
                            { DUP ; CAR ; SWAP ; CDR ; CAR ; PAIR } ;
                         UNPAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIG 4 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 14 ;
                         DUP ;
                         DUG 15 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CAR ;
                         DIG 2 ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 12 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MUL ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         MUL ;
                         SWAP ;
                         DIG 9 ;
                         MUL ;
                         PUSH nat 1000 ;
                         DIG 3 ;
                         MUL ;
                         ADD ;
                         SWAP ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; DIG 8 ; FAILWITH }
                            { DIG 10 ;
                              DROP ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIG 6 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 4 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DIG 3 ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 5 ;
                         DROP ;
                         DIG 5 ;
                         DROP ;
                         DIG 5 ;
                         DROP ;
                         DIG 5 ;
                         DROP ;
                         DIG 7 ;
                         DROP ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 3 ;
                         DIG 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF { PAIR ; PAIR ; DIG 3 ; SWAP ; EXEC }
                            { DROP ; SWAP ; DROP ; DIG 3 ; DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         IF_LEFT
                           { IF_LEFT
                               { DROP ; DIG 6 ; DUP ; DUG 7 ; FAILWITH }
                               { DROP ; DIG 6 ; DUP ; DUG 7 ; FAILWITH } }
                           { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF_NONE { DIG 6 ; FAILWITH } { DIG 7 ; DROP } ;
                         DIG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF_NONE { DIG 6 ; DUP ; DUG 7 ; FAILWITH } {} ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         CDR ;
                         CAR ;
                         DUG 2 ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { CAR } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         GET ;
                         IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         CDR ;
                         CAR ;
                         DUG 2 ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { CAR } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         MUL ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; DIG 8 ; FAILWITH }
                            { DIG 10 ;
                              DROP ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         CDR ;
                         CAR ;
                         DUG 2 ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { CAR } ;
                         ADD ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DIG 5 ;
                         PUSH nat 0 ;
                         PAIR ;
                         DIG 5 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         PUSH nat 0 ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         DIG 3 ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
                         DIG 3 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         SOME ;
                         DIG 4 ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } }
               { DIG 6 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 DIG 9 ;
                 DROP ;
                 DIG 10 ;
                 DROP ;
                 DIG 10 ;
                 DROP ;
                 IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     IF_LEFT
                       { DIG 5 ; DROP ; SWAP ; DUG 2 ; PAIR ; PAIR ; EXEC ; SWAP ; PAIR }
                       { SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH int 1 ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 3 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF { PAIR ; PAIR ; DIG 4 ; SWAP ; EXEC }
                            { DROP ; SWAP ; DROP ; DIG 4 ; DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              IF_NONE { DIG 4 ; FAILWITH } { DIG 5 ; DROP } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              PUSH unit Unit ;
                              RIGHT (or unit unit) ;
                              PAIR ;
                              DIG 6 ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              IF { DIG 5 ; CAR } { DIG 5 ; CDR ; CAR } ;
                              SOME ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 5 ;
                              CAR ;
                              DUG 2 ;
                              SOME ;
                              DIG 2 ;
                              UPDATE ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR }
                            { DROP 3 ; SWAP ; DROP ; PUSH int 13 ; FAILWITH } ;
                         SWAP ;
                         PAIR } }
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 5 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE {} { DROP ; PUSH int 5 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         LE ;
                         IF { DROP 2 ; PUSH int 7 ; FAILWITH }
                            { SWAP ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              LE ;
                              IF { DROP ; PUSH int 8 ; FAILWITH }
                                 { DUP ;
                                   CDR ;
                                   CAR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP ; PUSH int 9 ; FAILWITH }
                                      { PUSH nat 100 ;
                                        SWAP ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        COMPARE ;
                                        LT ;
                                        IF { PUSH int 19 ; FAILWITH } {} } } } ;
                         SWAP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PUSH nat 0 ;
                         PAIR ;
                         NONE nat ;
                         PAIR ;
                         NONE (pair nat (pair nat nat)) ;
                         PAIR ;
                         EMPTY_MAP address (pair nat (pair nat nat)) ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PUSH unit Unit ;
                         LEFT unit ;
                         LEFT unit ;
                         PAIR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PUSH nat 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PUSH nat 0 ;
                             SOME ;
                             DIG 2 ;
                             UPDATE }
                           { DROP 2 ; DIG 7 ; DUP ; DUG 8 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         PUSH nat 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         ADD ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PUSH nat 0 ;
                             SOME ;
                             DIG 2 ;
                             UPDATE }
                           { DROP 2 ; DIG 8 ; DUP ; DUG 9 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         PUSH nat 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         ADD ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { DIG 10 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PUSH nat 0 ;
                             SOME ;
                             DIG 2 ;
                             UPDATE }
                           { DROP 2 ; DIG 9 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 4 ;
                         PAIR ;
                         DIG 4 ;
                         PAIR ;
                         SOME ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         DUG 2 ;
                         SOME ;
                         DIG 2 ;
                         UPDATE ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         EXEC }
                       { DIG 3 ;
                         DROP ;
                         DIG 8 ;
                         DROP ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         IF { DUP ; CDR ; CAR ; SWAP ; CAR ; PAIR }
                            { DUP ; CAR ; SWAP ; CDR ; CAR ; PAIR } ;
                         UNPAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIG 4 ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 13 ;
                         DUP ;
                         DUG 14 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CAR ;
                         DIG 2 ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 11 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MUL ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         MUL ;
                         SWAP ;
                         DIG 9 ;
                         MUL ;
                         PUSH nat 1000 ;
                         DIG 3 ;
                         MUL ;
                         ADD ;
                         SWAP ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; DIG 7 ; FAILWITH }
                            { DIG 9 ;
                              DROP ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DIG 2 ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } } }
           { DIG 4 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 9 ;
             DROP ;
             DIG 11 ;
             DROP ;
             DIG 11 ;
             DROP ;
             DIG 11 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 11 ;
                 DROP ;
                 SWAP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 IF_NONE { DIG 10 ; FAILWITH } { DIG 11 ; DROP } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 UNPAIR ;
                 DIG 4 ;
                 UNPAIR ;
                 DUP ;
                 CAR ;
                 DIG 6 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 14 ;
                 DUP ;
                 DUG 15 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DIG 4 ;
                 DIG 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DIG 13 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 GET ;
                 IF_NONE { DIG 11 ; FAILWITH } { DIG 12 ; DROP } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 DUG 2 ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 4 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 MUL ;
                 EDIV ;
                 IF_NONE
                   { DIG 11 ; DUP ; DUG 12 ; FAILWITH }
                   { PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { CAR } { PUSH nat 1 ; SWAP ; CAR ; ADD } } ;
                 DUG 2 ;
                 DIG 3 ;
                 MUL ;
                 EDIV ;
                 IF_NONE
                   { DIG 9 ; FAILWITH }
                   { DIG 10 ;
                     DROP ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { CAR } { PUSH nat 1 ; SWAP ; CAR ; ADD } } ;
                 SWAP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 IF { DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR }
                    { DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      PAIR } ;
                 UNPAIR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 DIG 3 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 IF { DIG 6 ;
                      DROP ;
                      DIG 2 ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      SWAP ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 3 ;
                      SWAP ;
                      EXEC }
                    { DIG 7 ;
                      DROP ;
                      DIG 2 ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      SWAP ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 3 ;
                      SWAP ;
                      EXEC } ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { DIG 5 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 DIG 7 ;
                 DROP ;
                 SWAP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 3 ;
                 DIG 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 6 ; FAILWITH } {} ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 COMPARE ;
                 GE ;
                 IF { PAIR ; PAIR ; DIG 3 ; SWAP ; EXEC }
                    { DROP ; SWAP ; DROP ; DIG 3 ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      GET ;
                      IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR ; PUSH nat 0 ; PAIR } {} ;
                      PUSH nat 0 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      COMPARE ;
                      GT ;
                      IF { DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           DUP ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           CAR ;
                           MUL ;
                           PUSH nat 0 ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           COMPARE ;
                           EQ ;
                           IF { DROP 2 ; DIG 8 ; DUP ; DUG 9 ; FAILWITH }
                              { EDIV ; IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ; CAR } ;
                           SWAP ;
                           DIG 11 ;
                           DUP ;
                           DUG 12 ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           DIG 12 ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { PUSH int 1001 ; FAILWITH } {} ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           CAR ;
                           MUL ;
                           PUSH nat 0 ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           COMPARE ;
                           EQ ;
                           IF { DROP 2 ; DIG 8 ; FAILWITH }
                              { DIG 10 ;
                                DROP ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR } ;
                           DIG 4 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           CDR ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           COMPARE ;
                           GT ;
                           IF { DIG 3 ; DUP ; DUG 4 } { DIG 2 ; DUP ; DUG 3 } ;
                           PAIR ;
                           PUSH nat 500000000000000000 ;
                           DIG 5 ;
                           CAR ;
                           COMPARE ;
                           GT ;
                           IF { SWAP ; DUP ; DUG 2 ; CAR } { SWAP ; DUP ; DUG 2 ; CDR ; CAR } ;
                           DIG 6 ;
                           DUP ;
                           DUG 7 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 7 ;
                           SWAP ;
                           EXEC ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           DIG 4 ;
                           DUP ;
                           DUG 5 ;
                           COMPARE ;
                           GT ;
                           IF { DIG 3 ; DROP ; DIG 2 } { DIG 2 ; DROP ; DIG 2 } ;
                           DIG 2 ;
                           CDR ;
                           CDR ;
                           PAIR ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DIG 4 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           SWAP ;
                           EXEC ;
                           SWAP ;
                           CAR ;
                           PAIR }
                         { DROP ;
                           SWAP ;
                           DROP ;
                           SWAP ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DIG 2 ;
                           DROP } }
                    { DROP 3 ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      SWAP ;
                      DROP ;
                      PUSH int 17 ;
                      FAILWITH } ;
                 SWAP ;
                 PAIR } } } }
