{ parameter
    (or (or (or (or (address %add_to_allowlist) (address %add_to_blocklist))
                (or (pair %approve (nat %amount) (pair (address %f) (address %t)))
                    (or (pair %burn (address %address) (int %amount))
                        (list %burnMultiple (pair (address %address) (int %amount))))))
            (or (or (pair %getAllowance
                       (pair %arg (address %owner) (address %spender))
                       (address %target))
                    (or (pair %getBalance (address %arg) (address %target)) (address %getTotalSupply)))
                (or (address %get_administrator)
                    (or (pair %mint (address %address) (int %amount))
                        (list %mintMultiple (pair (address %address) (int %amount)))))))
        (or (or (or (bool %pause)
                    (or (address %remove_from_allowlist) (address %remove_from_blocklist)))
                (or (address %set_administrator)
                    (or (bool %set_allowlist_enabled) (bool %set_blocklist_enabled))))
            (or (or (bool %set_trading_enabled)
                    (or (pair %transfer (int %amount) (pair (address %f) (address %t)))
                        (list %update_burners
                           (or (list %add_burners address) (list %remove_burners address)))))
                (or (list %update_controllers
                       (or (list %add_controllers address) (list %remove_controllers address)))
                    (or (list %update_minters
                           (or (list %add_minters address) (list %remove_minters address)))
                        (list %update_operators
                           (or (pair %add_operator (nat %amount) (pair (address %operator) (address %owner)))
                               (pair %remove_operator (nat %amount) (pair (address %operator) (address %owner)))))))))) ;
  storage
    (pair (pair (pair (pair (address %administrator) (set %allowlist address))
                      (pair (bool %allowlist_enabled)
                            (big_map %balances address (pair (map %approvals address nat) (int %balance)))))
                (pair (pair (set %blocklist address) (set %burners address))
                      (pair (bool %controllable) (set %controllers address))))
          (pair (pair (pair (int %decimals) (set %minters address))
                      (pair (string %name) (bool %operable)))
                (pair (pair (bool %paused) (string %symbol))
                      (pair (int %total_supply) (bool %trading_enabled))))) ;
  code { LAMBDA
           (pair (pair %in_param (address %address) (int %amount))
                 (pair %in_storage
                    (pair (pair (pair (address %administrator) (set %allowlist address))
                                (pair (bool %allowlist_enabled)
                                      (big_map %balances address (pair (map %approvals address nat) (int %balance)))))
                          (pair (pair (set %blocklist address) (set %burners address))
                                (pair (bool %controllable) (set %controllers address))))
                    (pair (pair (pair (int %decimals) (set %minters address))
                                (pair (string %name) (bool %operable)))
                          (pair (pair (bool %paused) (string %symbol))
                                (pair (int %total_supply) (bool %trading_enabled))))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (pair (pair (address %administrator) (set %allowlist address))
                                      (pair (bool %allowlist_enabled)
                                            (big_map %balances address (pair (map %approvals address nat) (int %balance)))))
                                (pair (pair (set %blocklist address) (set %burners address))
                                      (pair (bool %controllable) (set %controllers address))))
                          (pair (pair (pair (int %decimals) (set %minters address))
                                      (pair (string %name) (bool %operable)))
                                (pair (pair (bool %paused) (string %symbol))
                                      (pair (int %total_supply) (bool %trading_enabled)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 127 ; FAILWITH } {} ;
             CDR ;
             COMPARE ;
             GE ;
             IF {}
                { PUSH string
                       "WrongCondition: self.data.balances[lparams_0.in_param.address].balance >= lparams_0.in_param.amount" ;
                  FAILWITH } ;
             DUP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             CAR ;
             CAR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 128 ; FAILWITH } {} ;
             CAR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             DIG 8 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 128 ; FAILWITH } {} ;
             CDR ;
             SUB ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 6 ;
             CAR ;
             CDR ;
             SWAP ;
             SUB ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         LAMBDA
           (pair (pair %in_param (address %address) (int %amount))
                 (pair %in_storage
                    (pair (pair (pair (address %administrator) (set %allowlist address))
                                (pair (bool %allowlist_enabled)
                                      (big_map %balances address (pair (map %approvals address nat) (int %balance)))))
                          (pair (pair (set %blocklist address) (set %burners address))
                                (pair (bool %controllable) (set %controllers address))))
                    (pair (pair (pair (int %decimals) (set %minters address))
                                (pair (string %name) (bool %operable)))
                          (pair (pair (bool %paused) (string %symbol))
                                (pair (int %total_supply) (bool %trading_enabled))))))
           (pair (list %operations operation)
                 (pair (unit %result)
                       (pair %storage
                          (pair (pair (pair (address %administrator) (set %allowlist address))
                                      (pair (bool %allowlist_enabled)
                                            (big_map %balances address (pair (map %approvals address nat) (int %balance)))))
                                (pair (pair (set %blocklist address) (set %burners address))
                                      (pair (bool %controllable) (set %controllers address))))
                          (pair (pair (pair (int %decimals) (set %minters address))
                                      (pair (string %name) (bool %operable)))
                                (pair (pair (bool %paused) (string %symbol))
                                      (pair (int %total_supply) (bool %trading_enabled)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             MEM ;
             IF {}
                { DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CAR ;
                  PUSH (option (pair (map %approvals address nat) (int %balance))) (Some (Pair {} 0)) ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CAR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 73 ; FAILWITH } {} ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             ADD ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 6 ;
             CAR ;
             CDR ;
             ADD ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             UNIT ;
             PAIR %result %storage ;
             SWAP ;
             PAIR %operations } ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: params == self.data.administrator" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF { PUSH string "WrongCondition: ~ (self.data.blocklist.contains(params))" ;
                              FAILWITH }
                            {} ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PUSH bool True ;
                         DIG 6 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF {}
                                 { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                   FAILWITH } ;
                              SWAP ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              PUSH bool True ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            {} ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         PUSH bool True ;
                         DIG 6 ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF {}
                                 { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                   FAILWITH } }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF { PUSH bool True } { DUP ; CDR ; CAR ; SENDER ; COMPARE ; EQ } ;
                              IF {}
                                 { PUSH string
                                        "WrongCondition: (sp.sender == self.data.administrator) | (params.f == sp.sender)" ;
                                   FAILWITH } } ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 498 ; FAILWITH } {} ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } {} ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True } { DUP ; CAR ; PUSH nat 0 ; COMPARE ; EQ } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (self.data.balances[params.f].approvals.get(params.t, default_value = 0) == 0) | (params.amount == 0)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 500 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 8 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH bool True }
                                     { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | ((sp.sender == self.data.administrator) | (self.data.burners.contains(sp.sender)))" ;
                                  FAILWITH } ;
                             PAIR %in_param %in_storage ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH bool True }
                                     { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; CDR ; SENDER ; MEM } } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | ((sp.sender == self.data.administrator) | (self.data.burners.contains(sp.sender)))" ;
                                  FAILWITH } ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             ITER { DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    DIG 4 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR %in_param %in_storage ;
                                    EXEC ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    DUG 4 ;
                                    DUP ;
                                    CAR ;
                                    ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                                    DROP 2 } ;
                             SWAP ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP } } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF {} { PUSH string "WrongCondition: self.data.operable" ; FAILWITH } ;
                         DUP ;
                         CDR ;
                         CONTRACT nat ;
                         IF_NONE { PUSH int 521 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 519 ; FAILWITH } {} ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 519 ; FAILWITH } {} ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             CONTRACT nat ;
                             IF_NONE { PUSH int 512 ; FAILWITH } {} ;
                             NIL operation ;
                             SWAP ;
                             PUSH mutez 0 ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH int 510 ; FAILWITH } {} ;
                             CDR ;
                             ISNAT ;
                             IF_NONE { PUSH int 510 ; FAILWITH } {} ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             CONTRACT nat ;
                             IF_NONE { PUSH int 529 ; FAILWITH } {} ;
                             NIL operation ;
                             SWAP ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CAR ;
                             ISNAT ;
                             IF_NONE { PUSH int 527 ; FAILWITH } {} ;
                             TRANSFER_TOKENS ;
                             CONS } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         CONTRACT address ;
                         IF_NONE { PUSH int 537 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 3 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ; DUP ; DUG 2 ; CDR ; CAR ; CAR ; CDR ; SENDER ; MEM } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | (self.data.minters.contains(sp.sender))" ;
                                  FAILWITH } ;
                             PAIR %in_param %in_storage ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH bool True }
                                { SWAP ; DUP ; DUG 2 ; CDR ; CAR ; CAR ; CDR ; SENDER ; MEM } ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: (sp.sender == self.data.administrator) | (self.data.minters.contains(sp.sender))" ;
                                  FAILWITH } ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             ITER { DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    DIG 4 ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR %in_param %in_storage ;
                                    EXEC ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    DUG 4 ;
                                    DUP ;
                                    CAR ;
                                    ITER { DIG 3 ; SWAP ; CONS ; DUG 2 } ;
                                    DROP 2 } ;
                             SWAP ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP } } } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             PUSH bool True ;
                             DIG 6 ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             PUSH bool False ;
                             DIG 6 ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR } } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR } } } }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             IF {}
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF {}
                                     { PUSH string "WrongCondition: (sp.sender == self.data.administrator) | False" ;
                                       FAILWITH } } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             MEM ;
                             IF {}
                                { SWAP ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  CDR ;
                                  DIG 5 ;
                                  DUP ;
                                  DUG 6 ;
                                  CDR ;
                                  CDR ;
                                  PUSH (option (pair (map %approvals address nat) (int %balance))) (Some (Pair {} 0)) ;
                                  SWAP ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP } ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH int 484 ; FAILWITH } {} ;
                             CDR ;
                             COMPARE ;
                             GE ;
                             IF {}
                                { PUSH string
                                       "WrongCondition: self.data.balances[params.f].balance >= params.amount" ;
                                  FAILWITH } ;
                             SWAP ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 486 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIG 8 ;
                             DUP ;
                             DUG 9 ;
                             CAR ;
                             SWAP ;
                             SUB ;
                             SWAP ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             CDR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 487 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DIG 8 ;
                             CAR ;
                             ADD ;
                             SWAP ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             DUP ;
                             ITER { DUP ;
                                    IF_LEFT
                                      { DUP ;
                                        ITER { DIG 4 ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool True ;
                                               DIG 6 ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               DUG 3 } ;
                                        DROP 2 }
                                      { DUP ;
                                        ITER { DIG 4 ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool False ;
                                               DIG 6 ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               DUG 3 } ;
                                        DROP 2 } } ;
                             DROP } } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { DUP ;
                              ITER { DUP ;
                                     IF_LEFT
                                       { DUP ;
                                         ITER { DIG 4 ;
                                                DUP ;
                                                CDR ;
                                                SWAP ;
                                                CAR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                PUSH bool True ;
                                                DIG 6 ;
                                                UPDATE ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                PAIR ;
                                                DUG 3 } ;
                                         DROP 2 }
                                       { DUP ;
                                         ITER { DIG 4 ;
                                                DUP ;
                                                CDR ;
                                                SWAP ;
                                                CAR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                DUP ;
                                                CAR ;
                                                SWAP ;
                                                CDR ;
                                                PUSH bool False ;
                                                DIG 6 ;
                                                UPDATE ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                SWAP ;
                                                PAIR ;
                                                PAIR ;
                                                DUG 3 } ;
                                         DROP 2 } } ;
                              DROP }
                            { PUSH string "CONTROLLERS_DISABLED" ; FAILWITH } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF {}
                                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                                  FAILWITH } ;
                             DUP ;
                             ITER { DUP ;
                                    IF_LEFT
                                      { DUP ;
                                        ITER { DIG 4 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool True ;
                                               DIG 6 ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 3 } ;
                                        DROP 2 }
                                      { DUP ;
                                        ITER { DIG 4 ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CDR ;
                                               SWAP ;
                                               CAR ;
                                               DUP ;
                                               CAR ;
                                               SWAP ;
                                               CDR ;
                                               PUSH bool False ;
                                               DIG 6 ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 3 } ;
                                        DROP 2 } } ;
                             DROP }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             IF { DUP ;
                                  ITER { IF_LEFT
                                           { DUP ;
                                             CDR ;
                                             CDR ;
                                             SENDER ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH bool True }
                                                { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                             IF {}
                                                { PUSH string
                                                       "WrongCondition: (arg.owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                  FAILWITH } ;
                                             DIG 2 ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             DIG 6 ;
                                             DUP ;
                                             DUG 7 ;
                                             CDR ;
                                             CDR ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH int 340 ; FAILWITH } {} ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DIG 8 ;
                                             DUP ;
                                             CDR ;
                                             CAR ;
                                             SWAP ;
                                             CAR ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             PAIR ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP }
                                           { DUP ;
                                             CDR ;
                                             CDR ;
                                             SENDER ;
                                             COMPARE ;
                                             EQ ;
                                             IF { PUSH bool True }
                                                { DIG 2 ; DUP ; DUG 3 ; CAR ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                             IF {}
                                                { PUSH string
                                                       "WrongCondition: (arg.owner == sp.sender) | (sp.sender == self.data.administrator)" ;
                                                  FAILWITH } ;
                                             DIG 2 ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             CAR ;
                                             SWAP ;
                                             CDR ;
                                             DUP ;
                                             DIG 6 ;
                                             DUP ;
                                             DUG 7 ;
                                             CDR ;
                                             CDR ;
                                             DUP ;
                                             DUG 2 ;
                                             GET ;
                                             IF_NONE { PUSH int 344 ; FAILWITH } {} ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             CAR ;
                                             NONE nat ;
                                             DIG 9 ;
                                             CDR ;
                                             CAR ;
                                             UPDATE ;
                                             PAIR ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             SWAP } } ;
                                  DROP }
                                { PUSH string "OPERATORS_DISABLED" ; FAILWITH } } } } } ;
             NIL operation } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
