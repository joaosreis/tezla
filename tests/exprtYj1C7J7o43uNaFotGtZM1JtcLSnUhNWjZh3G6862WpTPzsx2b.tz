{ storage
    (pair (pair (address %admin) (option %decimals nat))
          (pair (option %latestRoundData
                   (pair (pair (nat %answer) (nat %answeredInRound))
                         (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt)))))
                (address %proxy))) ;
  parameter
    (or (or (unit %getDecimals) (unit %getLatestRoundData))
        (or (nat %setDecimals)
            (or (pair %setLatestRoundData
                   (pair (nat %answer) (nat %answeredInRound))
                   (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt))))
                (pair %setup (address %admin) (address %proxy))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DUP ;
                 GET 4 ;
                 CONTRACT %decimals address ;
                 IF_NONE
                   { PUSH string "Wrong Interface: Could not resolve proxy decimals entry-point." ;
                     FAILWITH }
                   {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 SELF %setDecimals ;
                 ADDRESS ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DROP ;
                 DUP ;
                 GET 4 ;
                 CONTRACT %latestRoundData address ;
                 IF_NONE
                   { PUSH string
                          "Wrong Interface: Could not resolve proxy latestRoundData entry-point." ;
                     FAILWITH }
                   {} ;
                 NIL operation ;
                 SWAP ;
                 PUSH mutez 0 ;
                 SELF %setLatestRoundData ;
                 ADDRESS ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.proxy" ; FAILWITH } ;
                 SWAP ;
                 UNPAIR ;
                 CAR ;
                 DIG 2 ;
                 SOME ;
                 SWAP ;
                 PAIR ;
                 PAIR }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.proxy" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     SOME ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } } ;
             NIL operation } ;
         PAIR } }
