{ parameter
    (or (or (bytes %administrate)
            (or (pair %decimals (address %callback) (nat %req_id)) (unit %force_balance_update)))
        (or (or (pair %latest_round_data (address %callback) (nat %req_id))
                (pair %submit nat nat))
            (or (list %update_available_funds
                   (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))
                (pair %withdraw_payment
                   (nat %amount)
                   (pair (address %oracleAddress) (address %recipientAddress)))))) ;
  storage
    (pair (pair (pair (pair (bool %active) (address %admin)) (pair (nat %decimals) (nat %latestRoundId)))
                (pair (pair (nat %maxSubmissions) (big_map %metadata string bytes))
                      (pair (nat %minSubmissions) (nat %oraclePayment))))
          (pair (pair (pair (map %oracles
                               address
                               (pair (pair (address %adminAddress) (pair (nat %endingRound) (nat %lastReportedRound)))
                                     (pair (nat %lastStartedRound) (pair (nat %startingRound) (nat %withdrawable)))))
                            (pair %previousRoundDetails
                               (pair (set %activeOracles address) (nat %maxSubmissions))
                               (pair (nat %minSubmissions) (pair (map %submissions address nat) (nat %timeout)))))
                      (pair (pair %recordedFunds (nat %allocated) (nat %available))
                            (pair %reportingRoundDetails
                               (pair (set %activeOracles address) (nat %maxSubmissions))
                               (pair (nat %minSubmissions) (pair (map %submissions address nat) (nat %timeout))))))
                (pair (pair (nat %reportingRoundId) (nat %restartDelay))
                      (pair (big_map %rounds
                               nat
                               (pair (pair (nat %answer) (nat %answeredInRound))
                                     (pair (nat %roundId) (pair (timestamp %startedAt) (timestamp %updatedAt)))))
                            (pair (nat %timeout) (address %tokenAddress)))))) ;
  code { CAST (pair (or (or bytes (or (pair address nat) unit))
                        (or (or (pair address nat) (pair nat nat))
                            (or (list (pair (pair address nat) nat)) (pair nat (pair address address)))))
                    (pair (pair (pair (pair bool address) (pair nat nat))
                                (pair (pair nat (big_map string bytes)) (pair nat nat)))
                          (pair (pair (pair (map address (pair (pair address (pair nat nat)) (pair nat (pair nat nat))))
                                            (pair (pair (set address) nat) (pair nat (pair (map address nat) nat))))
                                      (pair (pair nat nat) (pair (pair (set address) nat) (pair nat (pair (map address nat) nat)))))
                                (pair (pair nat nat)
                                      (pair (big_map nat (pair (pair nat nat) (pair nat (pair timestamp timestamp))))
                                            (pair nat address)))))) ;
         LAMBDA
           (pair nat
                 (pair (pair (pair (pair bool address) (pair nat nat))
                             (pair (pair nat (big_map string bytes)) (pair nat nat)))
                       (pair (pair (pair (map address (pair (pair address (pair nat nat)) (pair nat (pair nat nat))))
                                         (pair (pair (set address) nat) (pair nat (pair (map address nat) nat))))
                                   (pair (pair nat nat) (pair (pair (set address) nat) (pair nat (pair (map address nat) nat)))))
                             (pair (pair nat nat)
                                   (pair (big_map nat (pair (pair nat nat) (pair nat (pair timestamp timestamp))))
                                         (pair nat address))))))
           (pair (list operation)
                 (pair (set address)
                       (pair (pair (pair (pair bool address) (pair nat nat))
                                   (pair (pair nat (big_map string bytes)) (pair nat nat)))
                             (pair (pair (pair (map address (pair (pair address (pair nat nat)) (pair nat (pair nat nat))))
                                               (pair (pair (set address) nat) (pair nat (pair (map address nat) nat))))
                                         (pair (pair nat nat) (pair (pair (set address) nat) (pair nat (pair (map address nat) nat)))))
                                   (pair (pair nat nat)
                                         (pair (big_map nat (pair (pair nat nat) (pair nat (pair timestamp timestamp))))
                                               (pair nat address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             GET 3 ;
             CAR ;
             CAR ;
             NIL address ;
             SWAP ;
             ITER { CAR ; CONS } ;
             NIL address ;
             SWAP ;
             ITER { CONS } ;
             EMPTY_SET address ;
             SWAP ;
             DUP ;
             DUG 2 ;
             ITER { DUP 6 ;
                    CAR ;
                    DUP 5 ;
                    GET 3 ;
                    CAR ;
                    CAR ;
                    DUP 3 ;
                    GET ;
                    { IF_NONE { PUSH int 542 ; FAILWITH } {} } ;
                    CAR ;
                    GET 3 ;
                    COMPARE ;
                    GE ;
                    IF { DUP 6 ;
                         CAR ;
                         DUP 5 ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         GET ;
                         { IF_NONE { PUSH int 542 ; FAILWITH } {} } ;
                         GET 5 ;
                         COMPARE ;
                         LE }
                       { PUSH bool False } ;
                    IF { SWAP ; PUSH bool True ; DIG 2 ; UPDATE } { DROP } } ;
             SWAP ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (list nat)
           nat
           { PUSH nat 0 ;
             PUSH nat 2 ;
             DUP 3 ;
             SIZE ;
             EDIV ;
             { IF_NONE { PUSH int 281 ; FAILWITH } { CAR } } ;
             EMPTY_MAP nat nat ;
             DUP 4 ;
             SIZE ;
             PUSH nat 2 ;
             DUP 4 ;
             MUL ;
             COMPARE ;
             EQ ;
             DUP 5 ;
             ITER { DUP 3 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    MEM ;
                    IF { DIG 2 ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         { IF_NONE { PUSH int 286 ; FAILWITH } {} } ;
                         PUSH nat 1 ;
                         ADD ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP }
                       { DIG 2 ; PUSH (option nat) (Some 1) ; DIG 2 ; UPDATE ; SWAP } } ;
             PUSH nat 0 ;
             DUP 3 ;
             ITER { DUP 3 ;
                    IF { DUP 5 ;
                         DUP 3 ;
                         COMPARE ;
                         LT ;
                         IF { DIG 5 ; DROP ; DUP ; CAR ; DUG 5 }
                            { DIG 2 ;
                              DROP ;
                              DUP ;
                              CAR ;
                              DIG 5 ;
                              ADD ;
                              DUG 4 ;
                              PUSH nat 2 ;
                              DIG 5 ;
                              EDIV ;
                              { IF_NONE { PUSH int 296 ; FAILWITH } { CAR } } ;
                              DUG 4 ;
                              PUSH bool False ;
                              DUG 2 } ;
                         CDR ;
                         ADD }
                       { DUP 5 ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DIG 5 ; DROP ; DUP ; CAR ; DUG 5 ; CDR ; ADD } { DROP } } } ;
             DROP 4 ;
             SWAP ;
             DROP } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "AGGREGATOR_NotAdmin" ; FAILWITH } ;
                 DUP ;
                 UNPACK
                   (list (or (or bool address)
                             (or (pair (pair (option nat) (pair (option nat) (option nat)))
                                       (pair (pair (list (pair address (pair address (pair (option nat) nat)))) (list address))
                                             (pair (option nat) (option nat))))
                                 (pair nat address)))) ;
                 { IF_NONE
                     { PUSH string "AGGREGATOR_AdministrationActionsInvalid" ; FAILWITH }
                     {} } ;
                 NIL operation ;
                 SWAP ;
                 ITER { DUP ;
                        IF_LEFT
                          { SWAP ;
                            DROP ;
                            IF_LEFT
                              { DIG 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                UNPAIR ;
                                CDR ;
                                DIG 4 ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                DUG 2 }
                              { DIG 3 ;
                                UNPAIR ;
                                UNPAIR ;
                                UNPAIR ;
                                CAR ;
                                DIG 4 ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                DUG 2 } }
                          { IF_LEFT
                              { DUP 5 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "AGGREGATOR_NotAdmin" ; FAILWITH } ;
                                DUP ;
                                GET 5 ;
                                { IF_NONE
                                    {}
                                    { DROP ;
                                      DIG 4 ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      CAR ;
                                      DUP 5 ;
                                      GET 5 ;
                                      { IF_NONE { PUSH int 602 ; FAILWITH } {} } ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DUG 4 } } ;
                                DUP ;
                                CAR ;
                                GET 3 ;
                                { IF_NONE
                                    {}
                                    { DROP ;
                                      DIG 4 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      CDR ;
                                      DUP 5 ;
                                      CAR ;
                                      GET 3 ;
                                      { IF_NONE { PUSH int 604 ; FAILWITH } {} } ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 4 } } ;
                                DUP ;
                                CAR ;
                                CAR ;
                                { IF_NONE
                                    {}
                                    { DROP ;
                                      DIG 4 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      CDR ;
                                      DUP 5 ;
                                      CAR ;
                                      CAR ;
                                      { IF_NONE { PUSH int 606 ; FAILWITH } {} } ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 4 } } ;
                                DUP ;
                                GET 6 ;
                                { IF_NONE
                                    {}
                                    { DROP ;
                                      DIG 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      GET 6 ;
                                      { IF_NONE { PUSH int 608 ; FAILWITH } {} } ;
                                      UPDATE 9 ;
                                      DUG 4 } } ;
                                DUP ;
                                CAR ;
                                GET 4 ;
                                { IF_NONE
                                    {}
                                    { DROP ;
                                      DIG 4 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      SWAP ;
                                      UNPAIR ;
                                      SWAP ;
                                      CAR ;
                                      DUP 5 ;
                                      CAR ;
                                      GET 4 ;
                                      { IF_NONE { PUSH int 610 ; FAILWITH } {} } ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      PAIR ;
                                      DUG 4 } } ;
                                DUP ;
                                GET 3 ;
                                CDR ;
                                ITER { DIG 5 ;
                                       UNPAIR ;
                                       SWAP ;
                                       UNPAIR ;
                                       UNPAIR ;
                                       UNPAIR ;
                                       NONE (pair (pair address (pair nat nat)) (pair nat (pair nat nat))) ;
                                       DIG 6 ;
                                       UPDATE ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DUG 4 } ;
                                DUP ;
                                GET 3 ;
                                CAR ;
                                ITER { DUP ;
                                       UNPAIR ;
                                       PUSH nat 100 ;
                                       DUP 9 ;
                                       GET 3 ;
                                       CAR ;
                                       CAR ;
                                       SIZE ;
                                       COMPARE ;
                                       LT ;
                                       IF {} { PUSH string "AGGREGATOR_MaxOraclesCountReached" ; FAILWITH } ;
                                       PUSH nat 4294967295 ;
                                       DUP 3 ;
                                       GET 3 ;
                                       { IF_NONE
                                           { DIG 3 ; DROP }
                                           { DROP 2 ;
                                             DIG 2 ;
                                             DROP ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             GET 3 ;
                                             { IF_NONE { PUSH int 661 ; FAILWITH } {} } } } ;
                                       DIG 7 ;
                                       UNPAIR ;
                                       SWAP ;
                                       UNPAIR ;
                                       UNPAIR ;
                                       UNPAIR ;
                                       PUSH nat 0 ;
                                       DUP 9 ;
                                       GET 4 ;
                                       PAIR ;
                                       PUSH nat 0 ;
                                       PAIR ;
                                       PUSH nat 0 ;
                                       DIG 7 ;
                                       PAIR ;
                                       DIG 8 ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       SOME ;
                                       DIG 6 ;
                                       UPDATE ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DUG 4 } ;
                                DROP 2 ;
                                DUP 3 ;
                                GET 3 ;
                                CAR ;
                                CAR ;
                                SIZE ;
                                DUP 4 ;
                                CAR ;
                                GET 3 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "AGGREGATOR_MaxExceedActive" ; FAILWITH } ;
                                DIG 3 ;
                                DUP ;
                                CAR ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                CAR ;
                                GET 3 ;
                                CAR ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "AGGREGATOR_MaxInferiorToMin" ; FAILWITH } ;
                                DUP ;
                                PUSH nat 0 ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True }
                                   { DUP 4 ; GET 5 ; CDR ; SWAP ; DUP ; DUG 2 ; COMPARE ; GT } ;
                                IF {} { PUSH string "AGGREGATOR_DelayExceedTotal" ; FAILWITH } ;
                                DUP ;
                                PUSH nat 0 ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { PUSH nat 0 ; DUP 5 ; CAR ; GET 5 ; COMPARE ; GT } ;
                                IF {} { PUSH string "AGGREGATOR_MinSubmissionsTooLow" ; FAILWITH } ;
                                PUSH nat 2 ;
                                SWAP ;
                                DUP 5 ;
                                CAR ;
                                GET 6 ;
                                MUL ;
                                MUL ;
                                DUP 4 ;
                                GET 3 ;
                                GET 3 ;
                                CDR ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "AGGREGATOR_InsufficientFundsForPayment" ; FAILWITH } }
                              { SWAP ;
                                DROP ;
                                SENDER ;
                                DUP 5 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "AGGREGATOR_NotAdmin" ; FAILWITH } ;
                                DUP ;
                                CAR ;
                                DUP 5 ;
                                GET 3 ;
                                GET 3 ;
                                CDR ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "AGGREGATOR_InsufficientWithdrawableFunds" ; FAILWITH } ;
                                SWAP ;
                                DUP 4 ;
                                GET 10 ;
                                CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                                { IF_NONE { PUSH string "AGGREGATOR_InvalidTokenkInterface" ; FAILWITH } {} } ;
                                PUSH mutez 0 ;
                                NIL (pair address (list (pair address (pair nat nat)))) ;
                                NIL (pair address (pair nat nat)) ;
                                DUP 6 ;
                                CAR ;
                                PUSH nat 0 ;
                                DIG 7 ;
                                CDR ;
                                PAIR 3 ;
                                CONS ;
                                SELF_ADDRESS ;
                                PAIR ;
                                CONS ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                DUP 3 ;
                                GET 10 ;
                                CONTRACT %balance_of
                                  (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                                { IF_NONE { PUSH string "AGGREGATOR_InvalidTokenkInterface" ; FAILWITH } {} } ;
                                PUSH mutez 0 ;
                                SELF %update_available_funds ;
                                NIL (pair address nat) ;
                                PUSH nat 0 ;
                                SELF_ADDRESS ;
                                PAIR ;
                                CONS ;
                                PAIR ;
                                TRANSFER_TOKENS ;
                                CONS } } } ;
                 SWAP ;
                 DROP ;
                 DIG 2 ;
                 DROP }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CONTRACT (pair nat nat) ;
                     { IF_NONE { PUSH string "AGGREGATOR_CallbackNotFound" ; FAILWITH } {} } ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DIG 4 ;
                     CDR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     GET 10 ;
                     CONTRACT %balance_of
                       (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                     { IF_NONE { PUSH string "AGGREGATOR_InvalidTokenkInterface" ; FAILWITH } {} } ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     SELF %update_available_funds ;
                     NIL (pair address nat) ;
                     PUSH nat 0 ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CONTRACT (pair nat (pair (pair nat nat) (pair nat (pair timestamp timestamp)))) ;
                     { IF_NONE { PUSH string "AGGREGATOR_CallbackNotFound" ; FAILWITH } {} } ;
                     NIL operation ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DUP ;
                     GET 7 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     GET ;
                     { IF_NONE { PUSH int 128 ; FAILWITH } {} } ;
                     DIG 4 ;
                     CDR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DUP ;
                     UNPAIR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     IF {} { PUSH string "AGGREGATOR_Inactive" ; FAILWITH } ;
                     DUP 4 ;
                     GET 5 ;
                     CAR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     ADD ;
                     COMPARE ;
                     GE ;
                     IF { PUSH nat 1 ;
                          DUP 5 ;
                          GET 5 ;
                          CAR ;
                          ADD ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          LE }
                        { PUSH bool False } ;
                     IF {} { PUSH string "AGGREGATOR_InvalidRound" ; FAILWITH } ;
                     DUP 4 ;
                     GET 5 ;
                     CAR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     ADD ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 4 ;
                          GET 3 ;
                          CAR ;
                          GET 3 ;
                          CAR ;
                          SENDER ;
                          MEM ;
                          IF {} { PUSH string "AGGREGATOR_NotOracle" ; FAILWITH } ;
                          DIG 3 ;
                          DUP ;
                          GET 3 ;
                          CAR ;
                          GET 3 ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 5 ;
                          GET 3 ;
                          CAR ;
                          GET 7 ;
                          SIZE ;
                          COMPARE ;
                          LT ;
                          IF {} { PUSH string "AGGREGATOR_RoundMaxSubmissionExceed" ; FAILWITH } ;
                          DUP ;
                          DUP 5 ;
                          GET 3 ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          GET ;
                          { IF_NONE { PUSH int 441 ; FAILWITH } {} } ;
                          CAR ;
                          GET 4 ;
                          COMPARE ;
                          LT ;
                          IF {} { PUSH string "AGGREGATOR_ConnotSubmitOnPreviousRound" ; FAILWITH } ;
                          DIG 3 ;
                          DUP ;
                          GET 5 ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          COMPARE ;
                          NEQ ;
                          IF {} { PUSH string "AGGREGATOR_ReportingHasValue" ; FAILWITH } ;
                          DIG 3 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          DUP ;
                          GET 5 ;
                          DUP 8 ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          UPDATE 5 ;
                          SWAP ;
                          DUP ;
                          SENDER ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          { IF_NONE { PUSH int 450 ; FAILWITH } {} } ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          CAR ;
                          DUP 10 ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          DUP ;
                          GET 3 ;
                          CAR ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 5 ;
                          GET 3 ;
                          CAR ;
                          GET 7 ;
                          SIZE ;
                          COMPARE ;
                          GE ;
                          IF { SWAP ;
                               DROP ;
                               SWAP ;
                               DROP ;
                               DIG 3 ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               DUP ;
                               GET 7 ;
                               DUP ;
                               DUP 4 ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 452 ; FAILWITH } {} } ;
                               UNPAIR ;
                               CDR ;
                               DIG 7 ;
                               NIL nat ;
                               DIG 8 ;
                               GET 3 ;
                               CAR ;
                               GET 7 ;
                               ITER { CDR ; CONS } ;
                               NIL nat ;
                               SWAP ;
                               ITER { CONS } ;
                               EXEC ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 7 ;
                               DUP ;
                               GET 7 ;
                               DUP ;
                               DUP 4 ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 453 ; FAILWITH } {} } ;
                               NOW ;
                               UPDATE 6 ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 7 ;
                               DUP ;
                               DUG 2 ;
                               DUP ;
                               GET 7 ;
                               DUP ;
                               DUP 4 ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 454 ; FAILWITH } {} } ;
                               UNPAIR ;
                               CAR ;
                               DIG 6 ;
                               GET 5 ;
                               CAR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 7 ;
                               UNPAIR ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               CAR ;
                               DIG 4 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               PAIR }
                             { DROP 3 ; SWAP ; DROP ; SWAP ; DROP } ;
                          NIL operation }
                        { DUP 4 ;
                          GET 5 ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ;
                               SWAP ;
                               DROP ;
                               DIG 3 ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               GET 5 ;
                               CAR ;
                               SENDER ;
                               MEM ;
                               IF {} { PUSH string "AGGREGATOR_NotOracle" ; FAILWITH } ;
                               SWAP ;
                               DUP ;
                               GET 3 ;
                               GET 5 ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 3 ;
                               GET 3 ;
                               GET 9 ;
                               SIZE ;
                               COMPARE ;
                               LT ;
                               IF {} { PUSH string "AGGREGATOR_RoundMaxSubmissionExceed" ; FAILWITH } ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               GET 9 ;
                               SENDER ;
                               MEM ;
                               IF { PUSH string "AGGREGATOR_SubmittedInReporting" ; FAILWITH } {} ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               SWAP ;
                               DUP ;
                               GET 5 ;
                               DIG 6 ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               UPDATE 5 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               UNPAIR ;
                               DUP ;
                               SENDER ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 472 ; FAILWITH } {} } ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               CAR ;
                               DIG 9 ;
                               GET 5 ;
                               CAR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               GET 3 ;
                               GET 7 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               GET 9 ;
                               SIZE ;
                               COMPARE ;
                               GE ;
                               IF { DUP ;
                                    DUP ;
                                    GET 7 ;
                                    DUP ;
                                    DUP 4 ;
                                    GET 5 ;
                                    CAR ;
                                    DUP ;
                                    DUG 2 ;
                                    GET ;
                                    { IF_NONE { PUSH int 474 ; FAILWITH } {} } ;
                                    UNPAIR ;
                                    CDR ;
                                    DIG 6 ;
                                    NIL nat ;
                                    DIG 7 ;
                                    GET 3 ;
                                    GET 9 ;
                                    ITER { CDR ; CONS } ;
                                    NIL nat ;
                                    SWAP ;
                                    ITER { CONS } ;
                                    EXEC ;
                                    PAIR ;
                                    PAIR ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 7 ;
                                    DUP ;
                                    DUP ;
                                    GET 7 ;
                                    DUP ;
                                    DIG 3 ;
                                    GET 5 ;
                                    CAR ;
                                    DUP ;
                                    DUG 2 ;
                                    GET ;
                                    { IF_NONE { PUSH int 475 ; FAILWITH } {} } ;
                                    NOW ;
                                    UPDATE 6 ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 7 ;
                                    DUP ;
                                    DUP ;
                                    GET 7 ;
                                    DUP ;
                                    DUP 4 ;
                                    GET 5 ;
                                    CAR ;
                                    DUP ;
                                    DUG 2 ;
                                    GET ;
                                    { IF_NONE { PUSH int 476 ; FAILWITH } {} } ;
                                    UNPAIR ;
                                    CAR ;
                                    DIG 5 ;
                                    GET 5 ;
                                    CAR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    UPDATE 7 ;
                                    DUP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    SWAP ;
                                    CAR ;
                                    DIG 4 ;
                                    GET 5 ;
                                    CAR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR }
                                  { SWAP ; DROP } ;
                               NIL operation }
                             { DUP 6 ;
                               DUP 5 ;
                               PUSH nat 1 ;
                               DIG 6 ;
                               GET 5 ;
                               CAR ;
                               ADD ;
                               PAIR ;
                               EXEC ;
                               DUP ;
                               GET 4 ;
                               DUG 4 ;
                               DUP ;
                               CAR ;
                               NIL operation ;
                               SWAP ;
                               ITER { CONS } ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               SENDER ;
                               MEM ;
                               IF {} { PUSH string "AGGREGATOR_NotOracle" ; FAILWITH } ;
                               PUSH nat 0 ;
                               DUP 7 ;
                               GET 5 ;
                               CAR ;
                               COMPARE ;
                               GT ;
                               IF { PUSH nat 0 ;
                                    DUP 7 ;
                                    GET 3 ;
                                    CAR ;
                                    CAR ;
                                    SENDER ;
                                    GET ;
                                    { IF_NONE { PUSH int 494 ; FAILWITH } {} } ;
                                    GET 3 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 5 ;
                                         DUP ;
                                         GET 5 ;
                                         CDR ;
                                         SWAP ;
                                         DUP ;
                                         DUG 7 ;
                                         GET 3 ;
                                         CAR ;
                                         CAR ;
                                         SENDER ;
                                         GET ;
                                         { IF_NONE { PUSH int 491 ; FAILWITH } {} } ;
                                         GET 3 ;
                                         ADD ;
                                         PUSH nat 1 ;
                                         DUP 8 ;
                                         GET 5 ;
                                         CAR ;
                                         ADD ;
                                         COMPARE ;
                                         GT } ;
                                    IF {} { PUSH string "AGGREGATOR_WaitBeforeInit" ; FAILWITH } ;
                                    DIG 5 ;
                                    DUP ;
                                    GET 7 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 7 ;
                                    GET 5 ;
                                    CAR ;
                                    GET ;
                                    { IF_NONE { PUSH int 487 ; FAILWITH } {} } ;
                                    GET 5 ;
                                    PUSH int 60 ;
                                    DUP 8 ;
                                    GET 9 ;
                                    INT ;
                                    MUL ;
                                    ADD ;
                                    NOW ;
                                    COMPARE ;
                                    GT ;
                                    IF { PUSH bool True }
                                       { DIG 5 ;
                                         DUP ;
                                         GET 5 ;
                                         CAR ;
                                         SWAP ;
                                         DUP ;
                                         GET 7 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 8 ;
                                         GET 5 ;
                                         CAR ;
                                         GET ;
                                         { IF_NONE { PUSH int 487 ; FAILWITH } {} } ;
                                         CAR ;
                                         CDR ;
                                         COMPARE ;
                                         EQ } ;
                                    IF {} { PUSH string "AGGREGATOR_ReportingRoundNotOver" ; FAILWITH } }
                                  {} ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               PUSH nat 1 ;
                               DUP 9 ;
                               CAR ;
                               GET 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 2 ;
                                    DIG 2 ;
                                    DROP ;
                                    DIG 3 ;
                                    DROP ;
                                    DIG 4 ;
                                    DROP ;
                                    DIG 4 ;
                                    DROP ;
                                    DUP 3 ;
                                    PUSH nat 1 ;
                                    DUP 6 ;
                                    GET 5 ;
                                    CAR ;
                                    ADD }
                                  { DIG 4 ; DROP ; DIG 5 ; DROP ; DIG 6 ; DROP ; DIG 6 ; DROP } ;
                               DUP 6 ;
                               DUP ;
                               GET 7 ;
                               NOW ;
                               NOW ;
                               PAIR ;
                               PUSH nat 1 ;
                               DUP 10 ;
                               GET 5 ;
                               CAR ;
                               ADD ;
                               PAIR ;
                               DIG 3 ;
                               DIG 4 ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               PUSH nat 1 ;
                               DIG 7 ;
                               GET 5 ;
                               CAR ;
                               ADD ;
                               UPDATE ;
                               UPDATE 7 ;
                               DUP ;
                               DUG 4 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               CAR ;
                               DIG 7 ;
                               GET 3 ;
                               GET 4 ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               DUG 4 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               CAR ;
                               DUP 8 ;
                               GET 9 ;
                               EMPTY_MAP address nat ;
                               DIG 8 ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               PAIR ;
                               DUP 8 ;
                               CAR ;
                               GET 5 ;
                               PAIR ;
                               DIG 7 ;
                               CAR ;
                               GET 3 ;
                               CAR ;
                               DIG 7 ;
                               GET 3 ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               DUG 2 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               UNPAIR ;
                               DUP ;
                               SENDER ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 527 ; FAILWITH } {} } ;
                               UNPAIR ;
                               UNPAIR ;
                               SWAP ;
                               CAR ;
                               PUSH nat 1 ;
                               DIG 11 ;
                               GET 5 ;
                               CAR ;
                               ADD ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               DUP ;
                               DUG 2 ;
                               UNPAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               UNPAIR ;
                               DUP ;
                               SENDER ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               { IF_NONE { PUSH int 528 ; FAILWITH } {} } ;
                               PUSH nat 1 ;
                               DIG 9 ;
                               GET 5 ;
                               CAR ;
                               ADD ;
                               UPDATE 3 ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               UNPAIR ;
                               UNPAIR ;
                               PUSH nat 1 ;
                               ADD ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 6 ;
                     DUP ;
                     CAR ;
                     GET 6 ;
                     SWAP ;
                     GET 3 ;
                     GET 3 ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH string "AGGREGATOR_OraclePaymentUnderflow" ; FAILWITH } {} } ;
                     UPDATE 2 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     CAR ;
                     DIG 7 ;
                     CAR ;
                     GET 6 ;
                     ADD ;
                     UPDATE 1 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     { IF_NONE { PUSH int 196 ; FAILWITH } {} } ;
                     DUP ;
                     GET 6 ;
                     DIG 9 ;
                     CAR ;
                     GET 6 ;
                     ADD ;
                     UPDATE 6 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } }
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 10 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "AGGREGATOR_NotLinkToken" ; FAILWITH } ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     ITER { SWAP ;
                            DROP ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SELF_ADDRESS ;
                            COMPARE ;
                            EQ ;
                            IF {}
                               { PUSH string "WrongCondition: resp.request.owner == sp.self_address" ;
                                 FAILWITH } ;
                            CDR } ;
                     DUP 3 ;
                     GET 3 ;
                     GET 3 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH int 240 ; FAILWITH } {} } ;
                     DUP 4 ;
                     GET 3 ;
                     GET 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DROP ;
                          SWAP ;
                          DROP ;
                          DIG 2 ;
                          DROP ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DIG 5 ;
                          UPDATE 2 ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR }
                        { DROP 3 ; SWAP ; DROP } ;
                     NIL operation }
                   { DIG 2 ;
                     DROP ;
                     SENDER ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     GET 3 ;
                     GET ;
                     { IF_NONE { PUSH int 261 ; FAILWITH } {} } ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "AGGREGATOR_NotOracleAdmin" ; FAILWITH } ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     GET 3 ;
                     GET ;
                     { IF_NONE { PUSH int 265 ; FAILWITH } {} } ;
                     GET 6 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AGGREGATOR_InsufficientWithdrawableFunds" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP ;
                     DUP 7 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     { IF_NONE { PUSH int 269 ; FAILWITH } {} } ;
                     DUP 8 ;
                     CAR ;
                     DIG 9 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     DUP 10 ;
                     GET 3 ;
                     GET ;
                     { IF_NONE { PUSH int 265 ; FAILWITH } {} } ;
                     GET 6 ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH int 269 ; FAILWITH } {} } ;
                     UPDATE 6 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP 6 ;
                     CAR ;
                     DIG 7 ;
                     GET 3 ;
                     GET 3 ;
                     CAR ;
                     SUB ;
                     ISNAT ;
                     { IF_NONE { PUSH int 270 ; FAILWITH } {} } ;
                     UPDATE 1 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     NIL operation ;
                     DUP 3 ;
                     GET 10 ;
                     CONTRACT %transfer (list (pair address (list (pair address (pair nat nat))))) ;
                     { IF_NONE { PUSH string "AGGREGATOR_InvalidTokenkInterface" ; FAILWITH } {} } ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DUP 6 ;
                     CAR ;
                     PUSH nat 0 ;
                     DIG 7 ;
                     GET 4 ;
                     PAIR 3 ;
                     CONS ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 10 ;
                     CONTRACT %balance_of
                       (pair (list (pair address nat)) (contract (list (pair (pair address nat) nat)))) ;
                     { IF_NONE { PUSH string "AGGREGATOR_InvalidTokenkInterface" ; FAILWITH } {} } ;
                     PUSH mutez 0 ;
                     SELF %update_available_funds ;
                     NIL (pair address nat) ;
                     PUSH nat 0 ;
                     SELF_ADDRESS ;
                     PAIR ;
                     CONS ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
