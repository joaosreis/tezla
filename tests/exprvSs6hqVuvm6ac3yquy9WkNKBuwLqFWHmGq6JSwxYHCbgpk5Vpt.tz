{ storage (option address) ;
  parameter
    (or (or (unit %create1) (unit %create2)) (or (unit %create3) (list %create4 int))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { { DROP 2 ;
                   PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
                   PUSH mutez 0 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                PUSH int 42 ;
                                COMPARE ;
                                EQ ;
                                IF { { NIL operation ;
                                       SELF ;
                                       PUSH mutez 0 ;
                                       PUSH (pair (int %x) (nat %y)) (Pair 0 0) ;
                                       TRANSFER_TOKENS ;
                                       CONS } }
                                   { NIL operation } ;
                                SWAP ;
                                DROP ;
                                PAIR } } } ;
                   NIL operation ;
                   SWAP ;
                   CONS ;
                   SWAP ;
                   SOME ;
                   SWAP } }
               { { DROP ;
                   PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
                   PUSH mutez 12000000 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                PUSH int 42 ;
                                COMPARE ;
                                EQ ;
                                IF { { NIL operation ;
                                       SELF ;
                                       PUSH mutez 0 ;
                                       PUSH (pair (int %x) (nat %y)) (Pair 0 0) ;
                                       TRANSFER_TOKENS ;
                                       CONS } }
                                   { NIL operation } ;
                                SWAP ;
                                DROP ;
                                PAIR } } } ;
                   PAIR ;
                   CAR ;
                   NIL operation ;
                   SWAP ;
                   CONS ;
                   PUSH (pair (int %a) (nat %b)) (Pair 12 16) ;
                   PUSH mutez 12000000 ;
                   NONE key_hash ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                PUSH int 42 ;
                                COMPARE ;
                                EQ ;
                                IF { { NIL operation ;
                                       SELF ;
                                       PUSH mutez 0 ;
                                       PUSH (pair (int %x) (nat %y)) (Pair 0 0) ;
                                       TRANSFER_TOKENS ;
                                       CONS } }
                                   { NIL operation } ;
                                SWAP ;
                                DROP ;
                                PAIR } } } ;
                   PAIR ;
                   CAR ;
                   CONS } } }
           { IF_LEFT
               { { DROP 2 ;
                   PUSH (pair (int %a) (nat %b)) (Pair 12 15) ;
                   PUSH mutez 0 ;
                   PUSH (option key_hash) (Some "tz1MjWkqBp7e1KVeSBg1f43BRQfRsCfN4KU7") ;
                   CREATE_CONTRACT
                     { parameter (pair (int %x) (nat %y)) ;
                       storage (pair (int %a) (nat %b)) ;
                       code { { DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                DIG 3 ;
                                CAR ;
                                ADD ;
                                PAIR ;
                                SWAP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 3 ;
                                CDR ;
                                ADD ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                PUSH int 42 ;
                                COMPARE ;
                                EQ ;
                                IF { { NIL operation ;
                                       SELF ;
                                       PUSH mutez 0 ;
                                       PUSH (pair (int %x) (nat %y)) (Pair 0 0) ;
                                       TRANSFER_TOKENS ;
                                       CONS } }
                                   { NIL operation } ;
                                SWAP ;
                                DROP ;
                                PAIR } } } ;
                   NIL operation ;
                   SWAP ;
                   CONS ;
                   SWAP ;
                   SOME ;
                   SWAP } }
               { { DUP ;
                   NIL operation ;
                   SWAP ;
                   ITER { PUSH nat 15 ;
                          SWAP ;
                          PAIR %a %b ;
                          PUSH mutez 0 ;
                          NONE key_hash ;
                          CREATE_CONTRACT
                            { parameter (pair (int %x) (nat %y)) ;
                              storage (pair (int %a) (nat %b)) ;
                              code { { DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       DIG 3 ;
                                       CAR ;
                                       ADD ;
                                       PAIR ;
                                       SWAP ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       DIG 3 ;
                                       CDR ;
                                       ADD ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       DUP ;
                                       CAR ;
                                       PUSH int 42 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { { NIL operation ;
                                              SELF ;
                                              PUSH mutez 0 ;
                                              PUSH (pair (int %x) (nat %y)) (Pair 0 0) ;
                                              TRANSFER_TOKENS ;
                                              CONS } }
                                          { NIL operation } ;
                                       SWAP ;
                                       DROP ;
                                       PAIR } } } ;
                          PAIR ;
                          CAR ;
                          CONS } ;
                   SWAP ;
                   DROP } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
