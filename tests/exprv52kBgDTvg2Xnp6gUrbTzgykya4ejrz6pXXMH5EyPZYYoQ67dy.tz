{ parameter
    (or (or (or (address %add_Admin) (unit %show_Store))
            (or (unit %start_loto) (int %subscribe)))
        (or (pair %subscribe_Loto int int) (pair %subscribe_Roulette int int))) ;
  storage
    (pair (pair (pair (pair (map %admin address bool)
                            (map %blackjack address (pair (int %bet) (int %value_hand))))
                      (pair (map %loto address (pair int int)) (int %loto_fund)))
                (pair (pair (int %number_player_roulette) (map %player address int))
                      (pair (int %random) (map %roulette address (pair int int)))))
          (pair (pair (int %roulette_fund) (address %winner_loto)) (address %winner_roulette))) ;
  code { { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SOURCE ;
                     GET ;
                     IF_NONE
                       { SWAP ; DROP ; PUSH string "not admin" ; FAILWITH }
                       { DROP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PUSH bool True ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         PAIR } }
                   { DROP } }
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     PUSH address "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx" ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CAR ;
                            CDR ;
                            { DIP 2 { DUP } ; DIG 3 } ;
                            CDR ;
                            { DIP 4 { DUP } ; DIG 5 } ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CDR ;
                            ADD ;
                            { DIP 4 { DUP } ; DIG 5 } ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PAIR ;
                            DIG 4 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF { DUP ;
                                 CDR ;
                                 CDR ;
                                 DIG 2 ;
                                 CDR ;
                                 CAR ;
                                 { DIP 2 { DUP } ; DIG 3 } ;
                                 CDR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 CAR ;
                                 PAIR }
                               { SWAP ; DROP } } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH int 450 ;
                     ADD ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     { DIP 2 { DUP } ; DIG 3 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH int 450 ;
                     ADD ;
                     { DIP 4 { DUP } ; DIG 5 } ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     { DIP 3 { DUP } ; DIG 4 } ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SOURCE ;
                     GET ;
                     IF_NONE
                       { DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         SOME ;
                         SOURCE ;
                         UPDATE ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR }
                       { DIG 2 ; DROP 2 ; PUSH string "already exist" ; FAILWITH } ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "No contract." ; FAILWITH } { DROP } } } }
           { IF_LEFT
               { SWAP ;
                 PUSH bool True ;
                 PUSH bool False ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      { DIP 3 { DUP } ; DIG 4 } ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      SOME ;
                      SOURCE ;
                      UPDATE ;
                      PAIR ;
                      DIG 3 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR }
                    { SWAP ; DROP } }
               { SWAP ;
                 PUSH bool True ;
                 PUSH bool True ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      { DIP 4 { DUP } ; DIG 5 } ;
                      CDR ;
                      PUSH int 500 ;
                      SUB ;
                      SOME ;
                      SOURCE ;
                      UPDATE ;
                      { DIP 3 { DUP } ; DIG 4 } ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      SOME ;
                      SOURCE ;
                      UPDATE ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      { DIP 2 { DUP } ; DIG 3 } ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      PUSH int 1 ;
                      { DIP 4 { DUP } ; DIG 5 } ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PUSH int 1 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      COMPARE ;
                      EQ ;
                      IF { DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           PUSH int 0 ;
                           PAIR ;
                           PAIR ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PUSH address "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx" ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           SWAP ;
                           CAR ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           ITER { SWAP ;
                                  PAIR ;
                                  DUP ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  { DIP 2 { DUP } ; DIG 3 } ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  { DIP 2 { DUP } ; DIG 3 } ;
                                  CDR ;
                                  { DIP 4 { DUP } ; DIG 5 } ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  ADD ;
                                  PAIR ;
                                  PAIR ;
                                  DIG 2 ;
                                  CAR ;
                                  PAIR ;
                                  SWAP ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  COMPARE ;
                                  EQ ;
                                  IF { SWAP ;
                                       CDR ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       CAR ;
                                       PAIR ;
                                       SWAP ;
                                       CAR ;
                                       PAIR }
                                     { SWAP ; DROP } } ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           { DIP 2 { DUP } ; DIG 3 } ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           { DIP 3 { DUP } ; DIG 4 } ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PUSH int 450 ;
                           ADD ;
                           { DIP 4 { DUP } ; DIG 5 } ;
                           CDR ;
                           CDR ;
                           SWAP ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           { DIP 3 { DUP } ; DIG 4 } ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR }
                         {} }
                    { SWAP ; DROP } } } ;
         NIL operation ;
         PAIR } }
