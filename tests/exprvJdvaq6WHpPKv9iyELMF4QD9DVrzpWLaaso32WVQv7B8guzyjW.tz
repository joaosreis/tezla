{ parameter
    (or (or (pair %register nat key)
            (pair %setSettings
               (pair (big_map nat (pair (nat %fee) (nat %price))) nat)
               (pair string string)))
        (pair %withdrawFee address nat)) ;
  storage
    (pair (pair (pair (pair (big_map %accounts
                               address
                               (pair (pair (pair (nat %balance) (nat %deals_count))
                                           (pair (key %public_key) (nat %refunds_count)))
                                     (pair (timestamp %subscribed_until) (nat %subscription))))
                            (nat %cashback))
                      (pair (nat %fee_pool) (big_map %items string (pair (nat %price) (address %seller_id)))))
                (pair (pair (string %items_db)
                            (big_map %orders
                               string
                               (pair (pair (pair (address %buyer_id) (nat %count)) (pair (string %item) (address %seller_id)))
                                     (pair (pair (nat %status) (nat %total_price)) (timestamp %valid_until)))))
                      (pair (string %orders_db) (address %owner))))
          (pair (pair (big_map %refunds string string)
                      (big_map %subscriptions nat (pair (nat %fee) (nat %price))))
                (address %token))) ;
  code { DUP ;
         CDR ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PUSH int 2592000 ;
                     NOW ;
                     ADD ;
                     PAIR ;
                     PUSH nat 0 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { PUSH string "Registered yet" ; FAILWITH } ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 PUSH nat 0 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { NIL operation ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      CONTRACT
                        (or (or (or (pair %approve address nat)
                                    (pair %getAllowance (pair address address) (contract nat)))
                                (or (pair %getBalance address (contract nat))
                                    (pair %getTotalSupply unit (contract nat))))
                            (pair %transfer (pair address address) nat)) ;
                      IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CAR ;
                      SENDER ;
                      PAIR ;
                      PAIR ;
                      RIGHT
                        (or (or (pair address nat) (pair (pair address address) (contract nat)))
                            (or (pair address (contract nat)) (pair unit (contract nat)))) ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { NIL operation } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DIP { DROP 8 } }
               { DIG 2 ; DUP ; DUG 3 ; NIL operation ; PAIR ; DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             SELF ;
             ADDRESS ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Permision denied" ; FAILWITH } { PUSH unit Unit } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             LT ;
             IF { PUSH string "Not enough funds" ; FAILWITH } { PUSH unit Unit } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             SUB ;
             ABS ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CONTRACT
               (or (or (or (pair %approve address nat)
                           (pair %getAllowance (pair address address) (contract nat)))
                       (or (pair %getBalance address (contract nat))
                           (pair %getTotalSupply unit (contract nat))))
                   (pair %transfer (pair address address) nat)) ;
             IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 10 ;
             DUP ;
             DUG 11 ;
             CAR ;
             CDR ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             RIGHT
               (or (or (pair address nat) (pair (pair address address) (contract nat)))
                   (or (pair address (contract nat)) (pair unit (contract nat)))) ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR ;
             DIP { DROP 7 } } ;
         DIP { DROP 2 } } }
