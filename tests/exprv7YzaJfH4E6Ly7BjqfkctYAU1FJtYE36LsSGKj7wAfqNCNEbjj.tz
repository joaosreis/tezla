{ parameter
    (or (or (or (pair %changeBlackList address bool) (pair %changeOwner address bool))
            (or (int %closeGame) (int %participate)))
        (mutez %withDraw)) ;
  storage
    (pair (pair (pair (bool %available) (mutez %bet))
                (pair (map %blackList address bool) (map %loto int (set address))))
          (map %owners address bool)) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair bool mutez) (pair (map address bool) (map int (set address))))
                       (map address bool)))
           unit
           { UNPAIR ;
             SWAP ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT OWNER" ; FAILWITH } {} ;
             PUSH string "Owner privilege Revoke" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT A VALID VALUE" ;
                     PUSH int 1 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT A VALID VALUE" ;
                     PUSH int 1000 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     GET ;
                     IF_NONE { EMPTY_SET address } {} ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            CONTRACT unit ;
                            IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                            BALANCE ;
                            UNIT ;
                            TRANSFER_TOKENS ;
                            SWAP ;
                            CAR ;
                            SWAP ;
                            CONS } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH bool False } {} ;
                     PUSH string "YOU ARE BLACKLISTED FOR THAT GAME" ;
                     PUSH bool True ;
                     DIG 2 ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT A VALID VALUE" ;
                     PUSH int 1 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT A VALID VALUE" ;
                     PUSH int 1000 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND" ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { EMPTY_SET address ; PUSH bool True ; SENDER ; UPDATE }
                       { PUSH bool True ; SENDER ; UPDATE } ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { SWAP ;
             DUP ;
             DUG 2 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             PUSH string "TO HIGH VALUE TO WITHDRAW" ;
             BALANCE ;
             DUP 3 ;
             COMPARE ;
             GT ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SENDER ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS ;
             SWAP ;
             DUG 2 ;
             CONS ;
             PAIR } } }
