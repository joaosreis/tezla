{ storage
    (pair (pair (pair (pair (map %board int (map int int)) (nat %currentPlayer)) (bool %isOver))
                (map %players nat address))
          (int %winner)) ;
  parameter
    (pair (pair (pair (int %start_x) (int %start_y)) (int %target_x)) (int %target_y)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         SENDER ;
         COMPARE ;
         EQ ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         CDR ;
         IF { { PUSH unit Unit ; FAILWITH } } { {} } ;
         DUP ;
         CAR ;
         CAR ;
         CAR ;
         PUSH int 0 ;
         SWAP ;
         COMPARE ;
         GE ;
         IF { { DUP ; CAR ; CAR ; CAR ; PUSH int 8 ; COMPARE ; GT } }
            { PUSH bool False } ;
         IF { {} } { { PUSH string "AAAAA" ; FAILWITH } } ;
         DUP ;
         CAR ;
         CAR ;
         CDR ;
         PUSH int 0 ;
         SWAP ;
         COMPARE ;
         GE ;
         IF { { DUP ; CAR ; CAR ; CDR ; PUSH int 8 ; COMPARE ; GT } }
            { PUSH bool False } ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         DUP ;
         CAR ;
         CDR ;
         PUSH int 0 ;
         SWAP ;
         COMPARE ;
         GE ;
         IF { { DUP ; CAR ; CDR ; PUSH int 8 ; COMPARE ; GT } }
            { PUSH bool False } ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         DUP ;
         CDR ;
         PUSH int 0 ;
         SWAP ;
         COMPARE ;
         GE ;
         IF { { DUP ; CDR ; PUSH int 8 ; COMPARE ; GT } } { PUSH bool False } ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         ABS ;
         COMPARE ;
         EQ ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         PUSH int 0 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         COMPARE ;
         EQ ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         PUSH nat 1 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CDR ; COMPARE ; LE } }
            { PUSH bool False } ;
         IF { PUSH bool True }
            { { PUSH nat 2 ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { { DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CDR ; COMPARE ; GE } }
                   { PUSH bool False } } } ;
         IF { PUSH bool True }
            { { PUSH int 0 ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                COMPARE ;
                LT } } ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         DUP ;
         CAR ;
         CAR ;
         CAR ;
         PUSH nat 0 ;
         SWAP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CDR ;
         SUB ;
         ABS ;
         COMPARE ;
         EQ ;
         IF { PUSH bool True }
            { { DUP ;
                CAR ;
                CAR ;
                CDR ;
                PUSH nat 0 ;
                SWAP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                CDR ;
                SUB ;
                ABS ;
                COMPARE ;
                EQ } } ;
         IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
         PUSH bool False ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         INT ;
         PUSH int 3 ;
         SUB ;
         ABS ;
         PUSH int 0 ;
         PUSH bool True ;
         LOOP { PUSH int 0 ;
                PUSH bool True ;
                LOOP { DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CDR ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       ABS ;
                       COMPARE ;
                       EQ ;
                       IF { { PUSH int 1 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              IF { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     PUSH int 0 ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT ;
                                     LOOP { DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            IF { PUSH bool False }
                                               { { PUSH int 0 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   EQ } } ;
                                            IF { { DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   PUSH int 1 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   ADD ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   ABS ;
                                                   COMPARE ;
                                                   EQ } }
                                               { PUSH bool False } ;
                                            IF { { PUSH int -1 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   GT ;
                                                   IF { { PUSH int 2 ;
                                                          DIG 4 ;
                                                          DUP ;
                                                          DUG 5 ;
                                                          SUB ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          COMPARE ;
                                                          EQ } }
                                                      { PUSH bool False } ;
                                                   IF { PUSH bool True }
                                                      { { PUSH int 0 ;
                                                          DIG 8 ;
                                                          DUP ;
                                                          DUG 9 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 5 ;
                                                          DUP ;
                                                          DUG 6 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 4 ;
                                                          DUP ;
                                                          DUG 5 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          LT } } } }
                                               { PUSH bool False } ;
                                            IF { { DIG 5 ;
                                                   DROP ;
                                                   PUSH bool True ;
                                                   DUG 5 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   PUSH int 2 ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   ADD ;
                                                   DUP ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   COMPARE ;
                                                   GT ;
                                                   LOOP { PUSH int 0 ;
                                                          DIG 10 ;
                                                          DUP ;
                                                          DUG 11 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 6 ;
                                                          DUP ;
                                                          DUG 7 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          NEQ ;
                                                          IF { { DIG 7 ; DROP ; PUSH bool False ; DUG 7 } } { {} } ;
                                                          PUSH int 1 ;
                                                          ADD ;
                                                          DUP ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          COMPARE ;
                                                          GT } ;
                                                   DROP ;
                                                   DROP } }
                                               { {} } ;
                                            PUSH int 1 ;
                                            ADD ;
                                            DUP ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            COMPARE ;
                                            GT } ;
                                     DROP ;
                                     DROP } }
                                 { {} } ;
                              PUSH int 6 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              LT ;
                              IF { { PUSH int 1 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     ADD ;
                                     DUP ;
                                     PUSH int 7 ;
                                     COMPARE ;
                                     GT ;
                                     LOOP { DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            IF { PUSH bool False }
                                               { { PUSH int 0 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   PUSH int 1 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   ADD ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   EQ } } ;
                                            IF { { DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   ABS ;
                                                   COMPARE ;
                                                   EQ } }
                                               { PUSH bool False } ;
                                            IF { { PUSH int -1 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   GT ;
                                                   IF { { PUSH int 1 ;
                                                          DIG 3 ;
                                                          DUP ;
                                                          DUG 4 ;
                                                          ADD ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          COMPARE ;
                                                          EQ } }
                                                      { PUSH bool False } ;
                                                   IF { PUSH bool True }
                                                      { { PUSH int 0 ;
                                                          DIG 7 ;
                                                          DUP ;
                                                          DUG 8 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 4 ;
                                                          DUP ;
                                                          DUG 5 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 3 ;
                                                          DUP ;
                                                          DUG 4 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          LT } } } }
                                               { PUSH bool False } ;
                                            IF { { DIG 4 ;
                                                   DROP ;
                                                   PUSH bool True ;
                                                   DUG 4 ;
                                                   DUP ;
                                                   PUSH int 1 ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   ADD ;
                                                   DUP ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   COMPARE ;
                                                   GT ;
                                                   LOOP { PUSH int 0 ;
                                                          DIG 9 ;
                                                          DUP ;
                                                          DUG 10 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 5 ;
                                                          DUP ;
                                                          DUG 6 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          NEQ ;
                                                          IF { { DIG 6 ; DROP ; PUSH bool False ; DUG 6 } } { {} } ;
                                                          PUSH int 1 ;
                                                          ADD ;
                                                          DUP ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          COMPARE ;
                                                          GT } ;
                                                   DROP ;
                                                   DROP } }
                                               { {} } ;
                                            PUSH int 1 ;
                                            ADD ;
                                            DUP ;
                                            PUSH int 7 ;
                                            COMPARE ;
                                            GT } ;
                                     DROP } }
                                 { {} } ;
                              DUP ;
                              PUSH int 6 ;
                              COMPARE ;
                              GT ;
                              IF { { PUSH int 2 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { PUSH bool True }
                                        { { PUSH nat 0 ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            GET ;
                                            IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            GET ;
                                            IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                            ABS ;
                                            COMPARE ;
                                            LT } } } }
                                 { PUSH bool False } ;
                              IF { { DUP ;
                                     PUSH int 1 ;
                                     ADD ;
                                     DUP ;
                                     PUSH int 7 ;
                                     COMPARE ;
                                     GT ;
                                     LOOP { DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            IF { PUSH bool False }
                                               { { PUSH int 0 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   PUSH int 1 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   ADD ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   EQ } } ;
                                            IF { { DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   ABS ;
                                                   COMPARE ;
                                                   EQ } }
                                               { PUSH bool False } ;
                                            IF { { PUSH int -1 ;
                                                   DIG 7 ;
                                                   DUP ;
                                                   DUG 8 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   GT ;
                                                   IF { { PUSH int 1 ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          ADD ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          COMPARE ;
                                                          EQ } }
                                                      { PUSH bool False } ;
                                                   IF { PUSH bool True }
                                                      { { PUSH int 0 ;
                                                          DIG 7 ;
                                                          DUP ;
                                                          DUG 8 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 4 ;
                                                          DUP ;
                                                          DUG 5 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 3 ;
                                                          DUP ;
                                                          DUG 4 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          LT } } } }
                                               { PUSH bool False } ;
                                            IF { { DIG 4 ;
                                                   DROP ;
                                                   PUSH bool True ;
                                                   DUG 4 ;
                                                   DUP ;
                                                   PUSH int 1 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   ADD ;
                                                   DUP ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   COMPARE ;
                                                   GT ;
                                                   LOOP { PUSH int 0 ;
                                                          DIG 9 ;
                                                          DUP ;
                                                          DUG 10 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 6 ;
                                                          DUP ;
                                                          DUG 7 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          NEQ ;
                                                          IF { { DIG 6 ; DROP ; PUSH bool False ; DUG 6 } } { {} } ;
                                                          PUSH int 1 ;
                                                          ADD ;
                                                          DUP ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          COMPARE ;
                                                          GT } ;
                                                   DROP ;
                                                   DROP } }
                                               { {} } ;
                                            PUSH int 1 ;
                                            ADD ;
                                            DUP ;
                                            PUSH int 7 ;
                                            COMPARE ;
                                            GT } ;
                                     DROP } }
                                 { {} } ;
                              DUP ;
                              PUSH int 1 ;
                              COMPARE ;
                              LT ;
                              IF { { PUSH int 1 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { PUSH bool True }
                                        { { PUSH nat 0 ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            GET ;
                                            IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            GET ;
                                            IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                            ABS ;
                                            COMPARE ;
                                            LT } } } }
                                 { PUSH bool False } ;
                              IF { { DUP ;
                                     PUSH int 0 ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT ;
                                     LOOP { DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            IF { PUSH bool False }
                                               { { PUSH int 0 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   EQ } } ;
                                            IF { { DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   PUSH int 1 ;
                                                   DIG 3 ;
                                                   DUP ;
                                                   DUG 4 ;
                                                   ADD ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   ABS ;
                                                   COMPARE ;
                                                   EQ } }
                                               { PUSH bool False } ;
                                            IF { { PUSH int -1 ;
                                                   DIG 8 ;
                                                   DUP ;
                                                   DUG 9 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   DIG 5 ;
                                                   DUP ;
                                                   DUG 6 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   DIG 4 ;
                                                   DUP ;
                                                   DUG 5 ;
                                                   GET ;
                                                   IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                   COMPARE ;
                                                   GT ;
                                                   IF { { PUSH int 2 ;
                                                          DIG 3 ;
                                                          DUP ;
                                                          DUG 4 ;
                                                          SUB ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          COMPARE ;
                                                          EQ } }
                                                      { PUSH bool False } ;
                                                   IF { PUSH bool True }
                                                      { { PUSH int 0 ;
                                                          DIG 8 ;
                                                          DUP ;
                                                          DUG 9 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 5 ;
                                                          DUP ;
                                                          DUG 6 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 4 ;
                                                          DUP ;
                                                          DUG 5 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          LT } } } }
                                               { PUSH bool False } ;
                                            IF { { DIG 5 ;
                                                   DROP ;
                                                   PUSH bool True ;
                                                   DUG 5 ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   PUSH int 2 ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   ADD ;
                                                   DUP ;
                                                   DIG 2 ;
                                                   DUP ;
                                                   DUG 3 ;
                                                   COMPARE ;
                                                   GT ;
                                                   LOOP { PUSH int 0 ;
                                                          DIG 10 ;
                                                          DUP ;
                                                          DUG 11 ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          CAR ;
                                                          DIG 7 ;
                                                          DUP ;
                                                          DUG 8 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          GET ;
                                                          IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                                          COMPARE ;
                                                          NEQ ;
                                                          IF { { DIG 7 ; DROP ; PUSH bool False ; DUG 7 } } { {} } ;
                                                          PUSH int 1 ;
                                                          ADD ;
                                                          DUP ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          COMPARE ;
                                                          GT } ;
                                                   DROP ;
                                                   DROP } }
                                               { {} } ;
                                            PUSH int 1 ;
                                            ADD ;
                                            DUP ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            COMPARE ;
                                            GT } ;
                                     DROP ;
                                     DROP } }
                                 { {} } } }
                          { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       PUSH int 8 ;
                       COMPARE ;
                       GT } ;
                DROP ;
                PUSH int 1 ;
                ADD ;
                DUP ;
                PUSH int 8 ;
                COMPARE ;
                GT } ;
         DROP ;
         SWAP ;
         DUP ;
         DUG 2 ;
         IF { { PUSH nat 3 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CDR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                SUB ;
                ABS ;
                COMPARE ;
                LT ;
                IF { { PUSH nat 3 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       SUB ;
                       ABS ;
                       COMPARE ;
                       LT } }
                   { PUSH bool False } ;
                IF { PUSH bool True }
                   { { PUSH int 0 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       LT } } ;
                IF { {} } { { PUSH unit Unit ; FAILWITH } } } }
            { { PUSH nat 2 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CDR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                SUB ;
                ABS ;
                COMPARE ;
                LT ;
                IF { { PUSH nat 2 ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CDR ;
                       SUB ;
                       ABS ;
                       COMPARE ;
                       LT } }
                   { PUSH bool False } ;
                IF { PUSH bool True }
                   { { PUSH int 0 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       LT } } ;
                IF { {} } { { PUSH unit Unit ; FAILWITH } } } } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         CAR ;
         CDR ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CAR ;
         CAR ;
         CAR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CAR ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         SOME ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CDR ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         PAIR ;
         PAIR ;
         PAIR ;
         DUG 4 ;
         DIG 3 ;
         DROP ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         CAR ;
         CAR ;
         CAR ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
         PUSH (option int) (Some 0) ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CAR ;
         CAR ;
         CDR ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         PAIR ;
         PAIR ;
         PAIR ;
         DUG 4 ;
         DIG 3 ;
         DROP ;
         SWAP ;
         DUP ;
         DUG 2 ;
         IF { { PUSH nat 0 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CAR ;
                CAR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CDR ;
                SUB ;
                ABS ;
                COMPARE ;
                EQ ;
                IF { { DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CDR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       COMPARE ;
                       LT ;
                       IF { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              SUB ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              PUSH nat 0 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              SUB ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CAR ;
                              CDR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH (option int) (Some 0) ;
                              PUSH int 1 ;
                              DIG 11 ;
                              DUP ;
                              DUG 12 ;
                              CDR ;
                              SUB ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 4 ;
                              DIG 3 ;
                              DROP } }
                          { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              PUSH nat 0 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              DIG 8 ;
                              DUP ;
                              DUG 9 ;
                              CAR ;
                              CDR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH (option int) (Some 0) ;
                              PUSH int 1 ;
                              DIG 11 ;
                              DUP ;
                              DUG 12 ;
                              CDR ;
                              ADD ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 4 ;
                              DIG 3 ;
                              DROP } } } }
                   { { DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       CDR ;
                       COMPARE ;
                       GT ;
                       IF { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              SUB ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              PUSH nat 0 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              SUB ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              PUSH int 1 ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              CAR ;
                              CDR ;
                              SUB ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH (option int) (Some 0) ;
                              DIG 10 ;
                              DUP ;
                              DUG 11 ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 4 ;
                              DIG 3 ;
                              DROP } }
                          { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              PUSH nat 0 ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              NEQ ;
                              IF { {} } { { PUSH unit Unit ; FAILWITH } } ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              PUSH int 1 ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              CAR ;
                              CDR ;
                              ADD ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH (option int) (Some 0) ;
                              DIG 10 ;
                              DUP ;
                              DUG 11 ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 4 ;
                              DIG 3 ;
                              DROP } } } } } }
            { {} } ;
         PUSH int 7 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { { PUSH nat 1 ; DIG 4 ; DUP ; DUG 5 ; CAR ; CAR ; CAR ; CDR ; COMPARE ; EQ } }
            { PUSH bool False } ;
         IF { PUSH bool True }
            { { PUSH int 0 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { { PUSH nat 2 ; DIG 4 ; DUP ; DUG 5 ; CAR ; CAR ; CAR ; CDR ; COMPARE ; EQ } }
                   { PUSH bool False } } } ;
         IF { { PUSH int 0 ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CDR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                COMPARE ;
                GT } }
            { PUSH bool False } ;
         IF { { DIG 3 ;
                DUP ;
                DUG 4 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                DIG 8 ;
                DUP ;
                DUG 9 ;
                CAR ;
                CDR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                DIG 10 ;
                DUP ;
                DUG 11 ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                DIG 10 ;
                DUP ;
                DUG 11 ;
                CAR ;
                CDR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                DIG 10 ;
                DUP ;
                DUG 11 ;
                CDR ;
                GET ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                NEG ;
                SOME ;
                DIG 10 ;
                DUP ;
                DUG 11 ;
                CDR ;
                UPDATE ;
                SOME ;
                SWAP ;
                UPDATE ;
                PAIR ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 4 ;
                DIG 3 ;
                DROP } }
            { {} } ;
         PUSH bool False ;
         PUSH int 1 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CDR ;
         COMPARE ;
         GT ;
         IF { { DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                PUSH int 0 ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT ;
                LOOP { DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       IF { PUSH bool False }
                          { { PUSH int 0 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              EQ } } ;
                       IF { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              EQ } }
                          { PUSH bool False } ;
                       IF { { PUSH int -1 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              GT ;
                              IF { { PUSH int 2 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CDR ;
                                     SUB ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ } }
                                 { PUSH bool False } ;
                              IF { PUSH bool True }
                                 { { PUSH int 0 ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     LT } } } }
                          { PUSH bool False } ;
                       IF { { DIG 2 ;
                              DROP ;
                              PUSH bool True ;
                              DUG 2 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              PUSH int 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              ADD ;
                              DUP ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              LOOP { PUSH int 0 ;
                                     DIG 9 ;
                                     DUP ;
                                     DUG 10 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 9 ;
                                     DUP ;
                                     DUG 10 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { DIG 4 ; DROP ; PUSH bool False ; DUG 4 } } { {} } ;
                                     PUSH int 1 ;
                                     ADD ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT } ;
                              DROP ;
                              DROP } }
                          { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       COMPARE ;
                       GT } ;
                DROP ;
                DROP } }
            { {} } ;
         PUSH int 6 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CAR ;
         CDR ;
         COMPARE ;
         LT ;
         IF { { DIG 3 ;
                DUP ;
                DUG 4 ;
                CAR ;
                CDR ;
                DUP ;
                PUSH int 7 ;
                COMPARE ;
                GT ;
                LOOP { SWAP ;
                       DUP ;
                       DUG 2 ;
                       IF { PUSH bool False }
                          { { PUSH int 0 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              EQ } } ;
                       IF { { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PUSH int 1 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              SUB ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              EQ } }
                          { PUSH bool False } ;
                       IF { { PUSH int -1 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              GT ;
                              IF { { PUSH int 2 ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     CDR ;
                                     ADD ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ } }
                                 { PUSH bool False } ;
                              IF { PUSH bool True }
                                 { { PUSH int 0 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     LT } } } }
                          { PUSH bool False } ;
                       IF { { SWAP ;
                              DROP ;
                              PUSH bool True ;
                              SWAP ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              DUP ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              LOOP { PUSH int 0 ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { DIG 3 ; DROP ; PUSH bool False ; DUG 3 } } { {} } ;
                                     PUSH int 1 ;
                                     ADD ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT } ;
                              DROP ;
                              DROP } }
                          { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       PUSH int 7 ;
                       COMPARE ;
                       GT } ;
                DROP } }
            { {} } ;
         PUSH int 6 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         COMPARE ;
         LT ;
         IF { { PUSH int 1 ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                ADD ;
                DUP ;
                PUSH int 7 ;
                COMPARE ;
                GT ;
                LOOP { SWAP ;
                       DUP ;
                       DUG 2 ;
                       IF { PUSH bool False }
                          { { PUSH int 0 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              EQ } } ;
                       IF { { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              EQ } }
                          { PUSH bool False } ;
                       IF { { PUSH int -1 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              GT ;
                              IF { { PUSH int 1 ;
                                     DIG 5 ;
                                     DUP ;
                                     DUG 6 ;
                                     CDR ;
                                     ADD ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ } }
                                 { PUSH bool False } ;
                              IF { PUSH bool True }
                                 { { PUSH int 0 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     LT } } } }
                          { PUSH bool False } ;
                       IF { { SWAP ;
                              DROP ;
                              PUSH bool True ;
                              SWAP ;
                              DUP ;
                              PUSH int 1 ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CDR ;
                              ADD ;
                              DUP ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              LOOP { PUSH int 0 ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 8 ;
                                     DUP ;
                                     DUG 9 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { DIG 3 ; DROP ; PUSH bool False ; DUG 3 } } { {} } ;
                                     PUSH int 1 ;
                                     ADD ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT } ;
                              DROP ;
                              DROP } }
                          { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       PUSH int 7 ;
                       COMPARE ;
                       GT } ;
                DROP } }
            { {} } ;
         PUSH int 1 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         COMPARE ;
         GT ;
         IF { { DIG 3 ;
                DUP ;
                DUG 4 ;
                CDR ;
                PUSH int 0 ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT ;
                LOOP { DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       IF { PUSH bool False }
                          { { PUSH int 0 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              EQ } } ;
                       IF { { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              PUSH int 1 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              ADD ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              ABS ;
                              COMPARE ;
                              EQ } }
                          { PUSH bool False } ;
                       IF { { PUSH int -1 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              GET ;
                              IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                              COMPARE ;
                              GT ;
                              IF { { PUSH int 2 ;
                                     DIG 6 ;
                                     DUP ;
                                     DUG 7 ;
                                     CDR ;
                                     SUB ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ } }
                                 { PUSH bool False } ;
                              IF { PUSH bool True }
                                 { { PUSH int 0 ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 7 ;
                                     DUP ;
                                     DUG 8 ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     LT } } } }
                          { PUSH bool False } ;
                       IF { { DIG 2 ;
                              DROP ;
                              PUSH bool True ;
                              DUG 2 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              PUSH int 2 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              ADD ;
                              DUP ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              LOOP { PUSH int 0 ;
                                     DIG 9 ;
                                     DUP ;
                                     DUG 10 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 9 ;
                                     DUP ;
                                     DUG 10 ;
                                     CAR ;
                                     CDR ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     GET ;
                                     IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { { DIG 4 ; DROP ; PUSH bool False ; DUG 4 } } { {} } ;
                                     PUSH int 1 ;
                                     ADD ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT } ;
                              DROP ;
                              DROP } }
                          { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       COMPARE ;
                       GT } ;
                DROP ;
                DROP } }
            { {} } ;
         DUP ;
         IF { { DIG 2 ; DUP ; DUG 3 } } { PUSH bool False } ;
         IF { {} }
            { { PUSH nat 1 ;
                DIG 5 ;
                DUP ;
                DUG 6 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { { DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       PUSH nat 2 ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 5 ;
                       DIG 4 ;
                       DROP } }
                   { { DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       PUSH nat 1 ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 5 ;
                       DIG 4 ;
                       DROP } } } } ;
         PUSH int 0 ;
         PUSH int 0 ;
         PUSH int 0 ;
         PUSH int 0 ;
         PUSH int 0 ;
         PUSH bool True ;
         LOOP { PUSH int 0 ;
                PUSH bool True ;
                LOOP { PUSH int 1 ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       EQ ;
                       IF { { DIG 5 ; PUSH int 1 ; ADD ; DUG 5 } } { {} } ;
                       PUSH int -1 ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       EQ ;
                       IF { { DIG 4 ; PUSH int 1 ; ADD ; DUG 4 } } { {} } ;
                       PUSH int 2 ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       EQ ;
                       IF { { DIG 3 ; PUSH int 1 ; ADD ; DUG 3 } } { {} } ;
                       PUSH int -2 ;
                       DIG 11 ;
                       DUP ;
                       DUG 12 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } {} ;
                       COMPARE ;
                       EQ ;
                       IF { { DIG 2 ; PUSH int 1 ; ADD ; DUG 2 } } { {} } ;
                       PUSH int 1 ;
                       ADD ;
                       DUP ;
                       PUSH int 8 ;
                       COMPARE ;
                       GT } ;
                DROP ;
                PUSH int 1 ;
                ADD ;
                DUP ;
                PUSH int 8 ;
                COMPARE ;
                GT } ;
         DROP ;
         PUSH int 0 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         COMPARE ;
         EQ ;
         IF { { PUSH int 0 ; DIG 3 ; DUP ; DUG 4 ; COMPARE ; EQ } }
            { PUSH bool False } ;
         IF { { DIG 8 ;
                DUP ;
                DUG 9 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP ;
                DIG 8 ;
                DUP ;
                DUG 9 ;
                CAR ;
                PUSH int 2 ;
                SWAP ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP } }
            { {} } ;
         PUSH int 0 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         EQ ;
         IF { { DUP ; PUSH int 0 ; COMPARE ; EQ } } { PUSH bool False } ;
         IF { { DIG 8 ;
                DUP ;
                DUG 9 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP ;
                DIG 8 ;
                DUP ;
                DUG 9 ;
                CAR ;
                PUSH int 1 ;
                SWAP ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP } }
            { {} } ;
         PUSH int 1 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         COMPARE ;
         EQ ;
         IF { { PUSH int 0 ; DIG 3 ; DUP ; DUG 4 ; COMPARE ; EQ } }
            { PUSH bool False } ;
         IF { { DUP ; PUSH int 0 ; COMPARE ; LT } } { PUSH bool False } ;
         IF { { DIG 8 ;
                DUP ;
                DUG 9 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP ;
                DIG 8 ;
                DUP ;
                DUG 9 ;
                CAR ;
                PUSH int 2 ;
                SWAP ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP } }
            { {} } ;
         PUSH int 1 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         EQ ;
         IF { { DUP ; PUSH int 0 ; COMPARE ; EQ } } { PUSH bool False } ;
         IF { { PUSH int 0 ; DIG 3 ; DUP ; DUG 4 ; COMPARE ; GT } }
            { PUSH bool False } ;
         IF { { DIG 8 ;
                DUP ;
                DUG 9 ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                DUP ;
                CDR ;
                SWAP ;
                CAR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP ;
                DIG 8 ;
                DUP ;
                DUG 9 ;
                CAR ;
                PUSH int 1 ;
                SWAP ;
                PAIR ;
                DUG 9 ;
                DIG 8 ;
                DROP } }
            { {} } ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         NIL operation ;
         PAIR } }
