{ storage
    (pair (pair (int %a) (pair (int %b) (int %c)))
          (pair (int %d) (pair (big_map %msg nat string) (int %x)))) ;
  parameter int ;
  code { LAMBDA
           (pair (pair (pair (int %a) (pair (int %b) (int %c)))
                       (pair (int %d) (pair (big_map %msg nat string) (int %x))))
                 nat)
           string
           { { DUP ;
               CAR ;
               CDR ;
               CDR ;
               CAR ;
               SWAP ;
               CDR ;
               GET ;
               IF_NONE { PUSH string "" } {} } } ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH int 123 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CDR ;
         CDR ;
         COMPARE ;
         LE ;
         IF { {} }
            { { DIG 2 ; PUSH nat 0 ; DIG 3 ; PAIR ; EXEC ; FAILWITH } } ;
         PUSH int 123 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CDR ;
         CDR ;
         COMPARE ;
         LE ;
         IF { {} }
            { { DIG 2 ; PUSH nat 1 ; DIG 3 ; PAIR ; EXEC ; FAILWITH } } ;
         PUSH int 123 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         CDR ;
         CDR ;
         COMPARE ;
         LE ;
         IF { {} }
            { { DIG 2 ; PUSH nat 2 ; DIG 3 ; PAIR ; EXEC ; FAILWITH } } ;
         DIG 2 ;
         DROP ;
         SWAP ;
         DUP ;
         DUG 2 ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         CAR ;
         DIG 3 ;
         DIG 4 ;
         CDR ;
         CDR ;
         CDR ;
         ADD ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         NIL operation ;
         PAIR } }
