{ parameter
    (or (or (pair %bet (nat %betType) (nat %number)) (unit %fund))
        (or (unit %initialize) (unit %spinWheel))) ;
  storage
    (pair (pair (pair (pair (mutez %betAmount)
                            (map %bets nat (pair (pair (nat %betType) (nat %number)) (address %player))))
                      (pair (address %creator) (bool %initialized)))
                (pair (pair (mutez %maxTezInContract) (mutez %necessaryBalance))
                      (pair (nat %nextRoundTimestamp) (map %numberRange nat nat))))
          (pair (map %payouts nat nat) (map %winnings address mutez))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { { { DUP ; CAR ; DIP { CDR } } } ;
             IF { DROP } { FAILWITH } ;
             UNIT } ;
         SWAP ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 2 ;
                 PUSH string "Tezos.amount = self.betAmount" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "(betType >= 0n) and (betType <= 5n)" ;
                 PUSH nat 5 ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 LE ;
                 PUSH nat 0 ;
                 { DIP 5 { DUP } ; DIG 6 } ;
                 COMPARE ;
                 GE ;
                 AND ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "Out of range" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 COMPARE ;
                 LE ;
                 PUSH nat 0 ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 COMPARE ;
                 GE ;
                 AND ;
                 PAIR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 AMOUNT ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 MUL ;
                 DUP ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 PUSH string "provisionalBalance < Tezos.balance" ;
                 BALANCE ;
                 DIG 2 ;
                 COMPARE ;
                 LT ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 DIG 6 ;
                 DIG 7 ;
                 PAIR ;
                 PAIR ;
                 { DIP 5 { DUP } ; DIG 6 } ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ; SWAP ; DROP ; NIL operation ; PAIR } }
           { IF_LEFT
               { DROP ;
                 PUSH string "Creator already exist" ;
                 PUSH bool False ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PUSH bool True ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH mutez 0 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH timestamp 0 ;
                 NOW ;
                 SUB ;
                 ABS ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 EMPTY_MAP nat nat ;
                 PUSH nat 36 ;
                 SOME ;
                 PUSH nat 5 ;
                 UPDATE ;
                 PUSH nat 2 ;
                 SOME ;
                 PUSH nat 4 ;
                 UPDATE ;
                 PUSH nat 2 ;
                 SOME ;
                 PUSH nat 3 ;
                 UPDATE ;
                 PUSH nat 3 ;
                 SOME ;
                 PUSH nat 2 ;
                 UPDATE ;
                 PUSH nat 3 ;
                 SOME ;
                 PUSH nat 1 ;
                 UPDATE ;
                 PUSH nat 2 ;
                 SOME ;
                 PUSH nat 0 ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 EMPTY_MAP nat nat ;
                 PUSH nat 36 ;
                 SOME ;
                 PUSH nat 5 ;
                 UPDATE ;
                 PUSH nat 1 ;
                 SOME ;
                 PUSH nat 4 ;
                 UPDATE ;
                 PUSH nat 1 ;
                 SOME ;
                 PUSH nat 3 ;
                 UPDATE ;
                 PUSH nat 2 ;
                 SOME ;
                 PUSH nat 2 ;
                 UPDATE ;
                 PUSH nat 2 ;
                 SOME ;
                 PUSH nat 1 ;
                 UPDATE ;
                 PUSH nat 1 ;
                 SOME ;
                 PUSH nat 0 ;
                 UPDATE ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PUSH mutez 1000000 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH mutez 4000000 ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 PUSH string "size(self.bets) > 0n" ;
                 PUSH nat 0 ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "now>self.nextRoundTimestamp" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PUSH timestamp 0 ;
                 NOW ;
                 SUB ;
                 ABS ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH timestamp 0 ;
                 NOW ;
                 SUB ;
                 ABS ;
                 PAIR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 PUSH nat 1984 ;
                 EDIV ;
                 IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                 CDR ;
                 PUSH int 0 ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 PAIR ;
                 DUG 2 ;
                 PAIR ;
                 LAMBDA
                   (pair (pair nat
                               (pair (pair (pair (pair mutez (map nat (pair (pair nat nat) address))) (pair address bool))
                                           (pair (pair mutez mutez) (pair nat (map nat nat))))
                                     (pair (map nat nat) (map address mutez))))
                         (pair (pair (pair (pair (pair mutez (map nat (pair (pair nat nat) address))) (pair address bool))
                                           (pair (pair mutez mutez) (pair nat (map nat nat))))
                                     (pair (map nat nat) (map address mutez)))
                               int))
                   (pair bool
                         (pair (pair (pair (pair (pair mutez (map nat (pair (pair nat nat) address))) (pair address bool))
                                           (pair (pair mutez mutez) (pair nat (map nat nat))))
                                     (pair (map nat nat) (map address mutez)))
                               int))
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     { { DUP ; CAR ; DIP { CDR } } } ;
                     DIG 2 ;
                     DUP ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     INT ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LE ;
                     IF { SWAP ;
                          CAR ;
                          PUSH bool False ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          { DIP 3 { DUP } ; DIG 4 } ;
                          ABS ;
                          GET ;
                          IF_NONE
                            { PUSH address "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
                              PUSH nat 0 ;
                              PUSH nat 0 ;
                              PAIR ;
                              PAIR }
                            {} ;
                          PUSH nat 0 ;
                          { DIP 5 { DUP } ; DIG 6 } ;
                          COMPARE ;
                          EQ ;
                          IF { SWAP ;
                               DROP ;
                               DIG 3 ;
                               DROP ;
                               PUSH nat 0 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               PUSH nat 5 ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               CAR ;
                               CAR ;
                               COMPARE ;
                               EQ ;
                               AND }
                             { PUSH nat 5 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CAR ;
                               COMPARE ;
                               EQ ;
                               IF { SWAP ; DROP ; DIG 3 ; SWAP ; DUP ; DUG 2 ; CAR ; CDR ; COMPARE ; EQ }
                                  { PUSH nat 4 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH nat 0 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         CDR ;
                                         COMPARE ;
                                         EQ ;
                                         IF { SWAP ;
                                              DROP ;
                                              PUSH nat 0 ;
                                              PUSH nat 2 ;
                                              { DIP 5 { DUP } ; DIG 6 } ;
                                              EDIV ;
                                              IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                              CDR ;
                                              COMPARE ;
                                              EQ }
                                            { SWAP } ;
                                         PUSH nat 1 ;
                                         { DIP 2 { DUP } ; DIG 3 } ;
                                         CAR ;
                                         CDR ;
                                         COMPARE ;
                                         EQ ;
                                         IF { DROP ;
                                              PUSH nat 1 ;
                                              PUSH nat 2 ;
                                              DIG 5 ;
                                              EDIV ;
                                              IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                              CDR ;
                                              COMPARE ;
                                              EQ }
                                            { DIG 4 ; DROP } }
                                       { PUSH nat 3 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         CAR ;
                                         COMPARE ;
                                         EQ ;
                                         IF { PUSH nat 1 ;
                                              SWAP ;
                                              DUP ;
                                              DUG 2 ;
                                              CAR ;
                                              CDR ;
                                              COMPARE ;
                                              EQ ;
                                              IF { SWAP ; DROP ; PUSH nat 19 ; DIG 4 ; COMPARE ; GE }
                                                 { PUSH nat 0 ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   CDR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { SWAP ; DROP ; PUSH nat 18 ; DIG 4 ; COMPARE ; LE }
                                                      { DIG 4 ; DROP ; SWAP } } }
                                            { PUSH nat 2 ;
                                              SWAP ;
                                              DUP ;
                                              DUG 2 ;
                                              CAR ;
                                              CAR ;
                                              COMPARE ;
                                              EQ ;
                                              IF { PUSH nat 2 ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   CDR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { SWAP ; DROP ; PUSH nat 24 ; DIG 4 ; COMPARE ; GT }
                                                      { PUSH nat 1 ;
                                                        SWAP ;
                                                        DUP ;
                                                        DUG 2 ;
                                                        CAR ;
                                                        CDR ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { SWAP ;
                                                             DROP ;
                                                             PUSH nat 24 ;
                                                             { DIP 4 { DUP } ; DIG 5 } ;
                                                             COMPARE ;
                                                             LE ;
                                                             PUSH nat 12 ;
                                                             DIG 5 ;
                                                             COMPARE ;
                                                             GT ;
                                                             AND }
                                                           { PUSH nat 0 ;
                                                             SWAP ;
                                                             DUP ;
                                                             DUG 2 ;
                                                             CAR ;
                                                             CDR ;
                                                             COMPARE ;
                                                             EQ ;
                                                             IF { SWAP ; DROP ; PUSH nat 12 ; DIG 4 ; COMPARE ; LE }
                                                                { DIG 4 ; DROP ; SWAP } } } }
                                                 { PUSH nat 1 ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   CAR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { PUSH nat 0 ;
                                                        SWAP ;
                                                        DUP ;
                                                        DUG 2 ;
                                                        CAR ;
                                                        CDR ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { SWAP ;
                                                             DROP ;
                                                             PUSH nat 1 ;
                                                             PUSH nat 3 ;
                                                             { DIP 5 { DUP } ; DIG 6 } ;
                                                             EDIV ;
                                                             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                             CDR ;
                                                             COMPARE ;
                                                             EQ }
                                                           { SWAP } ;
                                                        PUSH nat 1 ;
                                                        { DIP 2 { DUP } ; DIG 3 } ;
                                                        CAR ;
                                                        CDR ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { DROP ;
                                                             PUSH nat 2 ;
                                                             PUSH nat 3 ;
                                                             { DIP 5 { DUP } ; DIG 6 } ;
                                                             EDIV ;
                                                             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                             CDR ;
                                                             COMPARE ;
                                                             EQ }
                                                           {} ;
                                                        PUSH nat 2 ;
                                                        { DIP 2 { DUP } ; DIG 3 } ;
                                                        CAR ;
                                                        CDR ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { DROP ;
                                                             PUSH nat 0 ;
                                                             PUSH nat 3 ;
                                                             DIG 5 ;
                                                             EDIV ;
                                                             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                             CDR ;
                                                             COMPARE ;
                                                             EQ }
                                                           { DIG 4 ; DROP } }
                                                      { PUSH nat 0 ;
                                                        SWAP ;
                                                        DUP ;
                                                        DUG 2 ;
                                                        CAR ;
                                                        CAR ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { SWAP ;
                                                             DROP ;
                                                             PUSH nat 0 ;
                                                             SWAP ;
                                                             DUP ;
                                                             DUG 2 ;
                                                             CAR ;
                                                             CDR ;
                                                             COMPARE ;
                                                             EQ ;
                                                             IF { PUSH nat 28 ;
                                                                  { DIP 4 { DUP } ; DIG 5 } ;
                                                                  COMPARE ;
                                                                  LE ;
                                                                  PUSH nat 20 ;
                                                                  { DIP 5 { DUP } ; DIG 6 } ;
                                                                  COMPARE ;
                                                                  GE ;
                                                                  AND ;
                                                                  PUSH nat 10 ;
                                                                  { DIP 5 { DUP } ; DIG 6 } ;
                                                                  COMPARE ;
                                                                  LE ;
                                                                  OR ;
                                                                  IF { PUSH nat 0 ;
                                                                       PUSH nat 2 ;
                                                                       DIG 5 ;
                                                                       EDIV ;
                                                                       IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                                       CDR ;
                                                                       COMPARE ;
                                                                       EQ }
                                                                     { PUSH nat 1 ;
                                                                       PUSH nat 2 ;
                                                                       DIG 5 ;
                                                                       EDIV ;
                                                                       IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                                       CDR ;
                                                                       COMPARE ;
                                                                       EQ } }
                                                                { PUSH nat 28 ;
                                                                  { DIP 4 { DUP } ; DIG 5 } ;
                                                                  COMPARE ;
                                                                  LE ;
                                                                  PUSH nat 20 ;
                                                                  { DIP 5 { DUP } ; DIG 6 } ;
                                                                  COMPARE ;
                                                                  GE ;
                                                                  AND ;
                                                                  PUSH nat 10 ;
                                                                  { DIP 5 { DUP } ; DIG 6 } ;
                                                                  COMPARE ;
                                                                  LE ;
                                                                  OR ;
                                                                  IF { PUSH nat 1 ;
                                                                       PUSH nat 2 ;
                                                                       DIG 5 ;
                                                                       EDIV ;
                                                                       IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                                       CDR ;
                                                                       COMPARE ;
                                                                       EQ }
                                                                     { PUSH nat 0 ;
                                                                       PUSH nat 2 ;
                                                                       DIG 5 ;
                                                                       EDIV ;
                                                                       IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                                                       CDR ;
                                                                       COMPARE ;
                                                                       EQ } } }
                                                           { DIG 4 ; DROP ; SWAP } } } } } } } ;
                          IF { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CDR ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               CDR ;
                               CAR ;
                               { DIP 2 { DUP } ; DIG 3 } ;
                               CAR ;
                               CAR ;
                               GET ;
                               IF_NONE { PUSH nat 0 } {} ;
                               { DIP 3 { DUP } ; DIG 4 } ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               MUL ;
                               { DIP 3 { DUP } ; DIG 4 } ;
                               CDR ;
                               CDR ;
                               { DIP 3 { DUP } ; DIG 4 } ;
                               CDR ;
                               GET ;
                               IF_NONE { PUSH mutez 0 } {} ;
                               ADD ;
                               DIG 2 ;
                               CDR ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               CAR ;
                               PAIR }
                             { DROP } ;
                          PUSH int 1 ;
                          DIG 2 ;
                          ADD ;
                          SWAP ;
                          PAIR ;
                          PUSH bool True ;
                          PAIR }
                        { DROP ; SWAP ; DROP ; PUSH bool False ; PAIR } } ;
                 SWAP ;
                 APPLY ;
                 SWAP ;
                 PUSH bool True ;
                 LOOP { DIP { DUP } ; EXEC ; { { DUP ; CAR ; DIP { CDR } } } } ;
                 SWAP ;
                 DROP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 { DIP 2 { DUP } ; DIG 3 } ;
                 CAR ;
                 CAR ;
                 CDR ;
                 EMPTY_MAP nat (pair (pair nat nat) address) ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH mutez 0 ;
                 { DIP 3 { DUP } ; DIG 4 } ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 BALANCE ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 BALANCE ;
                 SUB ;
                 PUSH mutez 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 PAIR } } } }
