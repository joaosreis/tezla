{ parameter (pair int nat) ;
  storage (pair int int) ;
  code { CAR @x ;
         LAMBDA
           (pair int nat)
           (pair int int)
           { { { DUP ; CAR @p ; DIP { CDR @q } } } ;
             PUSH @_36744 nat 10 ;
             DUP ;
             DIP { MUL @_36744p } ;
             SWAP ;
             DIP { SWAP ;
                   DUP ;
                   DIP { MUL @_36744q } ;
                   PUSH @_25469 nat 7 ;
                   MUL @_25469q ;
                   DUP } ;
             EDIV ;
             { IF_NONE { { UNIT ; FAILWITH } } {} } ;
             { { DUP ; CAR @a ; DIP { CDR @b } } } ;
             { DIP { DUP } ; SWAP } ;
             PUSH nat 2 ;
             MUL @_2b ;
             { DIP 3 { DUP } ; DIG 4 } ;
             { COMPARE ;
               GE ;
               IF { RENAME @i ;
                    DIP { PUSH int 0 ; ADD @u ; DIP { DROP ; RENAME @v } } }
                  { PUSH nat 1 ; ADD @i ; DIP { SUB @u ; DIP { RENAME @v } } } } ;
             DUP ;
             { GT ; IF { PUSH @sign int 1 } { PUSH @sign int -1 } } ;
             SWAP ;
             ABS @ai ;
             DUP ;
             DIP 2 { PUSH @base nat 2 ; PUSH @acc nat 1 } ;
             PUSH nat 0 ;
             { COMPARE ; NEQ } ;
             LOOP { PUSH @_2 nat 2 ;
                    SWAP ;
                    EDIV ;
                    { IF_NONE { { UNIT ; FAILWITH } } {} } ;
                    { { DUP ; CAR @ai ; DIP { CDR @parity } } } ;
                    DIP { PUSH @_0 nat 0 ;
                          { COMPARE ; NEQ ; IF { { DIP { DUP } ; SWAP } ; MUL @acc } {} } ;
                          DIP { DUP ; MUL @base } } ;
                    DUP ;
                    PUSH nat 0 ;
                    { COMPARE ; NEQ } } ;
             DROP ;
             SWAP ;
             DROP ;
             RENAME @_2_pow_ai ;
             SWAP ;
             DIP 2
                 { DUP ;
                   DIP { SWAP ; DUP ; DIP { PUSH nat 6 ; MUL ; MUL @_6uv } } ;
                   DUP ;
                   MUL @u2 ;
                   SWAP ;
                   DUP ;
                   PUSH nat 12 ;
                   MUL ;
                   MUL @_12v2 ;
                   ADD @u2_12v2 ;
                   { DIP { DUP } ; SWAP } ;
                   { DIP { DUP } ; SWAP } ;
                   ADD @num ;
                   DIP { SUB @denom } } ;
             { GT ; IF { MUL @num } { SWAP ; DIP { MUL @denom } } } ;
             PAIR } ;
         SWAP ;
         EXEC ;
         NIL operation ;
         PAIR } }
