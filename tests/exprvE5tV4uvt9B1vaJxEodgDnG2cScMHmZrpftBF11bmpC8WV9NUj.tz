{ storage
    (pair (address %admin)
          (pair (map %chances int (pair (int %param) (string %type))) (address %gameContract))) ;
  parameter
    (or (pair %perform (nat %chanceId) (address %player))
        (or (address %setAdministrator) (address %setGameContract))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF { PUSH bool True }
                  { { SWAP ; DUP ; DUG 2 ; CDR ; CDR ; SENDER ; COMPARE ; EQ } } ;
               IF { {} }
                  { { PUSH string
                           "WrongCondition: (sp.sender == self.data.admin) | (sp.sender == self.data.gameContract)" ;
                      FAILWITH } } ;
               DROP } }
           { IF_LEFT
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } } ;
                   SWAP ;
                   CDR ;
                   SWAP ;
                   PAIR } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { {} }
                      { { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } } ;
                   SWAP ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   CAR ;
                   DIG 2 ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR } } } ;
         NIL operation ;
         PAIR } }
