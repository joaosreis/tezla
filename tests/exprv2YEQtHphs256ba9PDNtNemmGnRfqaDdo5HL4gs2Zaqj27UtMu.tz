{ parameter
    (or (or (or (address %expectAddress) (unit %triggerFailWith))
            (or (unit %triggerShiftOverflow)
                (pair %voidEP (bool %voidParam) (lambda %voidResProxy bool bool))))
        (or (or (unit %triggerFailWithCustomError) (unit %triggerFailWithCustomErrorUnit1))
            (or (unit %triggerFailWithCustomErrorUnit2)
                (or (unit %triggerFailWithCustomErrorNoArg) (unit %triggerFailWith228))))) ;
  storage unit ;
  code { CAST (pair (or (or (or address unit) (or unit (pair bool (lambda bool bool))))
                        (or (or unit unit) (or unit (or unit unit))))
                    unit) ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DROP ; UNIT ; NIL operation ; PAIR }
                   { DROP ; PUSH string "oops" ; FAILWITH } }
               { IF_LEFT
                   { DROP ;
                     PUSH nat 257 ;
                     PUSH nat 1 ;
                     LSL ;
                     DROP ;
                     UNIT ;
                     NIL operation ;
                     PAIR }
                   { UNPAIR ;
                     SWAP ;
                     DIP { NOT } ;
                     SWAP ;
                     EXEC ;
                     PUSH string "VoidResult" ;
                     PAIR ;
                     FAILWITH } } }
           { IF_LEFT
               { IF_LEFT
                   { DROP ; PUSH nat 1 ; PUSH string "CustomError" ; PAIR ; FAILWITH }
                   { DROP ; UNIT ; PUSH string "CustomErrorUnit1" ; PAIR ; FAILWITH } }
               { IF_LEFT
                   { DROP ; UNIT ; PUSH string "CustomErrorUnit2" ; PAIR ; FAILWITH }
                   { IF_LEFT
                       { DROP ; PUSH string "CustomErrorNoArg" ; FAILWITH }
                       { DROP ; PUSH (pair nat nat nat) { 1 ; 2 ; 3 } ; FAILWITH } } } } } }
