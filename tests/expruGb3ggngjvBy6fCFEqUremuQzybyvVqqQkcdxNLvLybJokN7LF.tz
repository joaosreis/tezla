{ parameter
    (or (or (or (or (pair %balance_of
                       (list %requests (pair (address %owner) (nat %token_id)))
                       (contract %callback
                          (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                    (pair %burn_tokens nat nat))
                (or (pair %buy_from_exchange (nat %order_id) (pair (nat %token_to_buy) (nat %amount)))
                    (unit %buy_xtz_wrapper)))
            (or (or (pair %confirm_buy_from_exchange
                       (nat %order_id)
                       (pair (pair %token_ids nat nat)
                             (pair (bool %status)
                                   (pair (pair %from_ (address %owner) (nat %token_id))
                                         (pair %to_ (address %owner) (nat %token_id))))))
                    (pair %mint_more_tokens (nat %token_id) (nat %tokens_to_mint)))
                (or (pair %mint_tokens
                       (list %metadata (pair string bytes))
                       (pair (nat %total_supply) (bool %fixed_supply)))
                    (pair %new_exchange_order
                       (or %order_type (unit %buy) (unit %sell))
                       (pair (nat %token_id_to_sell)
                             (pair (nat %token_amount_to_sell)
                                   (pair (nat %token_id_to_buy)
                                         (pair (nat %token_amount_to_buy) (pair (nat %total_token_amount) (address %seller))))))))))
        (or (or (or (nat %redeem_xtz_wrapper) (contract %token_metadata_registry address))
                (or (list %transfer
                       (pair (address %from_)
                             (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                    (address %update_exchange_address)))
            (list %update_operators
               (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                   (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))) ;
  storage
    (pair (pair (pair (pair (address %admin) (address %exchange_address))
                      (pair (nat %last_token_id)
                            (big_map %ledger (pair (address %owner) (nat %token_id)) nat)))
                (pair (pair (big_map %metadata string bytes)
                            (big_map %operators
                               (pair (address %owner) (pair (address %operator) (nat %token_id)))
                               unit))
                      (pair (big_map %token_admins nat (pair address bool))
                            (big_map %token_metadata nat (pair nat (map string bytes))))))
          (big_map %token_total_supply nat nat)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair address (pair address nat))
           (pair (pair address address) nat)
           { DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             PAIR } ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { DUP ; CDR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         CAR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         MAP {} ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DUP ;
                         CDR ;
                         MAP { DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               MEM ;
                               NOT ;
                               IF { DROP ; DIG 4 ; DUP ; DUG 5 ; FAILWITH }
                                  { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DIG 5 ;
                                    DUP ;
                                    DUG 6 ;
                                    SWAP ;
                                    EXEC ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    SWAP ;
                                    PAIR } } ;
                         DIG 2 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         GET ;
                         IF_NONE
                           { PUSH string "NO_TOKEN_FOUND" ; FAILWITH }
                           { SENDER ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             COMPARE ;
                             NEQ ;
                             IF { DROP ; PUSH string "UNAUTHORIZED_ACTION" ; FAILWITH } { CAR } } ;
                         DROP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SENDER ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH string "NO_BALANCE_FOUND" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP 4 ; PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              SWAP ;
                              SUB ;
                              ABS ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SWAP ;
                              SOME ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              SENDER ;
                              PAIR ;
                              UPDATE ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              GET ;
                              IF_NONE { PUSH string "NO_TOTAL_SUPPLY_FOUND" ; FAILWITH } {} ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              LT ;
                              IF { DROP 5 ; PUSH string "INSUFFICIENT_TOTAL_SUPPLY" ; FAILWITH }
                                 { DIG 2 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   SUB ;
                                   DROP ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   DIG 2 ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CAR ;
                                         SWAP ;
                                         CDR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 3 ;
                                   CDR ;
                                   DIG 2 ;
                                   SOME ;
                                   DIG 3 ;
                                   UPDATE ;
                                   SWAP ;
                                   CAR ;
                                   PAIR } } ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         GET ;
                         IF_NONE
                           { PUSH string "NO_BALANCE" ; FAILWITH }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             LT ;
                             IF { DROP ; PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH } {} } ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CONTRACT %fulfill_order
                           (pair (nat %order_id)
                                 (pair (nat %amount_to_buy) (pair (address %buyer) (nat %buyer_balance)))) ;
                         IF_NONE { PUSH string "UNKNOWN_CONTRACT" ; FAILWITH } {} ;
                         SWAP ;
                         SENDER ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DROP ;
                         PUSH nat 1 ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; PUSH string "NO_AMOUNT_PROVIDED" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SENDER ;
                              PAIR ;
                              GET ;
                              IF_NONE
                                { PUSH mutez 1 ;
                                  AMOUNT ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR }
                                { PUSH mutez 1 ;
                                  AMOUNT ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  ADD } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE
                                { PUSH string "NO_WTOKEN" ; FAILWITH }
                                { PUSH mutez 1 ;
                                  AMOUNT ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  ADD } ;
                              DIG 3 ;
                              DUP ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              SOME ;
                              PUSH nat 1 ;
                              SENDER ;
                              PAIR ;
                              UPDATE ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              CDR ;
                              DIG 2 ;
                              SOME ;
                              DIG 3 ;
                              UPDATE ;
                              SWAP ;
                              CAR ;
                              PAIR } ;
                         NIL operation ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 3 ; PUSH string "FA2_TX_DENIED" ; FAILWITH }
                            { PUSH bool False ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              EQ ;
                              IF { DROP 3 ; PUSH string "UNCONFIRMED_EXCHANGE" ; FAILWITH }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   GET ;
                                   IF_NONE { DIG 2 ; DUP ; DUG 3 ; FAILWITH } {} ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DROP 4 ; PUSH string "BUYER_INSUFFICIENT_BALANCE" ; FAILWITH }
                                      { DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { DIG 3 ; FAILWITH } { DIG 4 ; DROP } ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        LT ;
                                        IF { DROP 4 ; PUSH string "SELLER_INSUFFICIENT_BALANCE" ; FAILWITH }
                                           { DIG 2 ;
                                             DUP ;
                                             DUG 3 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             DIG 4 ;
                                             DUP ;
                                             DUG 5 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             DIG 3 ;
                                             DUP ;
                                             DUG 4 ;
                                             PAIR ;
                                             GET ;
                                             IF_NONE { DIG 2 ; DUP ; DUG 3 } { DIG 3 ; DUP ; DUG 4 ; ADD } ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             DIG 7 ;
                                             SUB ;
                                             ABS ;
                                             DIG 4 ;
                                             DIG 6 ;
                                             SUB ;
                                             ABS ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             PAIR ;
                                             GET ;
                                             IF_NONE { DIG 3 } { DIG 4 ; ADD } ;
                                             DIG 7 ;
                                             DUP ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             DIG 5 ;
                                             SOME ;
                                             DIG 8 ;
                                             DUP ;
                                             DUG 9 ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             PAIR ;
                                             UPDATE ;
                                             DIG 4 ;
                                             SOME ;
                                             DIG 7 ;
                                             DUP ;
                                             DUG 8 ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             DIG 6 ;
                                             PAIR ;
                                             UPDATE ;
                                             DIG 3 ;
                                             SOME ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             CDR ;
                                             CAR ;
                                             CAR ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             PAIR ;
                                             UPDATE ;
                                             DIG 2 ;
                                             SOME ;
                                             DIG 4 ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             DIG 4 ;
                                             PAIR ;
                                             UPDATE ;
                                             DIP { DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   DUP ;
                                                   CDR ;
                                                   SWAP ;
                                                   CAR ;
                                                   DUP ;
                                                   CAR ;
                                                   SWAP ;
                                                   CDR ;
                                                   CAR } ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR } } } } ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { PUSH string "NO_TOKEN_FOUND" ; FAILWITH }
                           { SENDER ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             COMPARE ;
                             NEQ ;
                             IF { DROP ; PUSH string "UNAUTHORIZED_ACTION" ; FAILWITH } {} } ;
                         PUSH bool False ;
                         SWAP ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 2 ; PUSH string "FIXED_TOTAL_SUPPLY" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET ;
                              IF_NONE
                                { PUSH string "NO_TOKEN_FOUND" ; FAILWITH }
                                { SWAP ; DUP ; DUG 2 ; CDR ; ADD } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              SENDER ;
                              PAIR ;
                              GET ;
                              IF_NONE
                                { PUSH string "NO_TOKEN_FOUND" ; FAILWITH }
                                { DIG 2 ; DUP ; DUG 3 ; CDR ; ADD } ;
                              DIG 3 ;
                              DUP ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              DIG 3 ;
                              SOME ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              UPDATE ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              SOME ;
                              DIG 3 ;
                              CAR ;
                              SENDER ;
                              PAIR ;
                              UPDATE ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR } ;
                         NIL operation ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         PUSH nat 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         EMPTY_MAP string bytes ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         ITER { DUP ; DUG 2 ; CDR ; DIG 2 ; CAR ; SWAP ; SOME ; SWAP ; UPDATE } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SENDER ;
                         PAIR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SWAP ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH string "NO_ACCOUNT" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         COMPARE ;
                         LT ;
                         IF { DROP 2 ; FAILWITH }
                            { DIG 2 ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CONTRACT %create_new_order
                                (pair (or %order_type (unit %buy) (unit %sell))
                                      (pair (nat %token_id_to_sell)
                                            (pair (nat %token_amount_to_sell)
                                                  (pair (nat %token_id_to_buy)
                                                        (pair (nat %token_amount_to_buy) (pair (nat %total_token_amount) (address %seller))))))) ;
                              IF_NONE { PUSH string "UNKNOWN_CONTRACT" ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 2 ;
                              TRANSFER_TOKENS ;
                              PAIR } ;
                         DUP ;
                         CDR ;
                         NIL operation ;
                         DIG 2 ;
                         CAR ;
                         CONS ;
                         PAIR } } } }
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { PUSH nat 1 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         SENDER ;
                         PAIR ;
                         GET ;
                         IF_NONE
                           { PUSH string "NO_ACCOUNT" ; FAILWITH }
                           { PUSH nat 0 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP ; PUSH string "NO_BALANCE" ; FAILWITH }
                                { DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  LT ;
                                  IF { DROP ; PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH } {} } } ;
                         SENDER ;
                         CONTRACT unit ;
                         IF_NONE { PUSH string "CONTRACT_ERROR" ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         MUL ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         SUB ;
                         ABS ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SENDER ;
                         PAIR ;
                         UPDATE ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         GET ;
                         IF_NONE
                           { DIG 3 ; DROP ; PUSH string "NO_WTOKEN" ; FAILWITH }
                           { DIG 4 ; SWAP ; SUB ; ABS } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 4 ;
                         CDR ;
                         DIG 2 ;
                         SOME ;
                         DIG 4 ;
                         UPDATE ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         NIL operation ;
                         DIG 2 ;
                         CAR ;
                         CONS ;
                         PAIR }
                       { PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     DIG 2 ;
                                     CDR ;
                                     CDR ;
                                     PAIR ;
                                     PAIR } ;
                               SWAP ;
                               CAR ;
                               PAIR } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         LAMBDA
                           (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                           unit
                           { DUP ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DUP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 3 ; UNIT }
                                { DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  CDR ;
                                  CDR ;
                                  DIG 3 ;
                                  CDR ;
                                  CAR ;
                                  DIG 2 ;
                                  PAIR ;
                                  DIG 2 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         ITER { DUP ;
                                DUG 2 ;
                                CDR ;
                                ITER { SWAP ;
                                       PAIR ;
                                       DUP ;
                                       CDR ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       MEM ;
                                       NOT ;
                                       IF { DROP 2 ; DIG 6 ; DUP ; DUG 7 ; FAILWITH }
                                          { DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            PAIR ;
                                            SENDER ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            EXEC ;
                                            DROP ;
                                            SWAP ;
                                            CAR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP ;
                                            CDR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            PAIR ;
                                            DIG 9 ;
                                            DUP ;
                                            DUG 10 ;
                                            SWAP ;
                                            EXEC ;
                                            DIG 3 ;
                                            CDR ;
                                            CAR ;
                                            SWAP ;
                                            SUB ;
                                            ISNAT ;
                                            IF_NONE
                                              { DROP 2 ; DIG 6 ; DUP ; DUG 7 ; FAILWITH }
                                              { PUSH nat 0 ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                   { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            DIG 2 ;
                                            CAR ;
                                            CDR ;
                                            PAIR ;
                                            PAIR ;
                                            DUP ;
                                            CDR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            PAIR ;
                                            DIG 8 ;
                                            DUP ;
                                            DUG 9 ;
                                            SWAP ;
                                            EXEC ;
                                            DIG 3 ;
                                            CDR ;
                                            CAR ;
                                            ADD ;
                                            PUSH nat 0 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                               { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                                SWAP ;
                                DROP } ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIP { DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               CAR ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               CDR ;
                               CAR } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ;
                              CAR ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR }
                            { DROP 2 ; PUSH string "UNAUTHORIZED_ACTION" ; FAILWITH } ;
                         NIL operation ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 MAP { IF_LEFT
                         { LEFT (pair address (pair address nat)) }
                         { RIGHT (pair address (pair address nat)) } ;
                       IF_LEFT
                         { DIG 3 ; DUP ; DUG 4 ; SWAP ; EXEC ; LEFT (pair (pair address address) nat) }
                         { DIG 3 ; DUP ; DUG 4 ; SWAP ; EXEC ; RIGHT (pair (pair address address) nat) } } ;
                 DIG 3 ;
                 DROP ;
                 SENDER ;
                 DIG 2 ;
                 CDR ;
                 DIG 2 ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        IF_LEFT {} {} ;
                        CAR ;
                        CDR ;
                        COMPARE ;
                        EQ ;
                        IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                        DROP ;
                        SWAP ;
                        CAR ;
                        SWAP ;
                        IF_LEFT
                          { SWAP ;
                            UNIT ;
                            SOME ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            DIG 3 ;
                            CAR ;
                            CDR ;
                            PAIR ;
                            UPDATE }
                          { DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            DIG 2 ;
                            CAR ;
                            CDR ;
                            PAIR ;
                            NONE unit ;
                            SWAP ;
                            UPDATE } } ;
                 SWAP ;
                 DROP ;
                 DIP { DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }
