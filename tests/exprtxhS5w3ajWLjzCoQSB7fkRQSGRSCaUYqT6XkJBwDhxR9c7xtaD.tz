{ parameter
    (or (or (or (list %cardPack int) (pair %manageAdmin bool address))
            (or (pair %manageBlackList bool address) (unit %newPlayer)))
        (or (or (unit %sendCoins) (unit %startGame)) (mutez %withDraw))) ;
  storage
    (pair (pair (pair (set %admins address) (mutez %amountValue))
                (pair (bool %available) (set %blackList address)))
          (pair (pair (list %pack int) (address %player)) (pair (int %playerHand) (bool %ready)))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair (set address) mutez) (pair bool (set address)))
                       (pair (pair (list int) address) (pair int bool))))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             PUSH string "NOT AN OWNER" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH bool True ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "ALREADY AN OWNER" ;
                          PUSH bool True ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          CDR ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR }
                        { PUSH string "ALREADY NOT AN OWNER" ;
                          PUSH bool False ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          CDR ;
                          PUSH bool False ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "ALREADY BLACKLISTED" ;
                          PUSH bool True ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          CDR ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR }
                        { PUSH string "ALREADY NOT BLACKLISTED" ;
                          PUSH bool False ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          CDR ;
                          MEM ;
                          COMPARE ;
                          EQ ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          CDR ;
                          PUSH bool False ;
                          SWAP ;
                          UPDATE ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR } ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP 2 ;
                     PUSH string "THE GAME IS ALREADY LAUNCHED" ;
                     PUSH bool False ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "PLEASE SEND THE RIGHT AMOUNT TO PLAY" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NO COINS TO PAY WINNER" ;
                     PUSH nat 3 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     BALANCE ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     MEM ;
                     PUSH string "YOU ARE BLACKLISTED" ;
                     PUSH bool True ;
                     DIG 2 ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH int 0 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool False ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP 2 ;
                     PUSH string "THEIR IS NO COINS IN YOUR TRANSACTION" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     PUSH string "CARD SEQUENCE NOT SET BY THE ADMINISTRATOR" ;
                     PUSH bool False ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND IN CONTRACT TO PLAY" ;
                     PUSH nat 3 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     MUL ;
                     BALANCE ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DUP ; DIG 2 ; SWAP ; EXEC } { SWAP ; DROP ; PUSH unit Unit } ;
                     DROP ;
                     DUP ;
                     NIL operation ;
                     PUSH bool False ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            DUP 3 ;
                            DUP 3 ;
                            DUP 3 ;
                            PAIR ;
                            PAIR ;
                            PUSH bool False ;
                            DIG 2 ;
                            COMPARE ;
                            EQ ;
                            PUSH int 21 ;
                            DUP 5 ;
                            CDR ;
                            CDR ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            AND ;
                            IF { DUP 3 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CONTRACT unit ;
                                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                                 PUSH nat 3 ;
                                 DIG 4 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 MUL ;
                                 UNIT ;
                                 TRANSFER_TOKENS ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DIG 3 ;
                                 DIG 2 ;
                                 CONS ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 CDR ;
                                 PUSH bool True ;
                                 PAIR ;
                                 PAIR }
                               { SWAP ;
                                 DROP ;
                                 PUSH int 21 ;
                                 DUP 3 ;
                                 CDR ;
                                 CDR ;
                                 CAR ;
                                 COMPARE ;
                                 LT ;
                                 IF { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      DUP 4 ;
                                      CDR ;
                                      DUP 4 ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      ADD ;
                                      PAIR ;
                                      DUP 3 ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      PAIR }
                                    { SWAP } ;
                                 SWAP ;
                                 CAR ;
                                 PAIR } ;
                            DUP ;
                            CDR ;
                            DIG 2 ;
                            CAR ;
                            UNPAIR ;
                            CDR ;
                            DUP 4 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            DUP ;
                            CDR ;
                            DIG 3 ;
                            CAR ;
                            CDR ;
                            DIG 2 ;
                            CAR ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            CAR ;
                            PAIR } ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PUSH bool False ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "NO ENOUGH FUND IN CONTRACT TO WITHDRAW" ;
                 BALANCE ;
                 DUP 3 ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SENDER ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }
