{ storage
    (pair (pair (address %administrator)
                (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance)))
                      (address %freezer)))
          (pair (big_map %frozen_accounts address timestamp)
                (pair (big_map %metadata string string) (nat %totalSupply)))) ;
  parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (or (nat %burn) (pair %getAdministrator unit (contract address))))
            (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                (or (pair %getBalance address (contract nat))
                    (pair %getFreezer unit (contract address)))))
        (or (or (pair %getTotalSupply unit (contract nat))
                (or (address %setAdministrator) (address %setFreezer)))
            (or (pair %transfer (address %from) (pair (address %to) (nat %value)))
                (or (pair %transferAndFreeze (pair (address %to) (nat %value)) (int %duration))
                    (unit %unsetFreezer))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True } { DUP ; CDR ; PUSH nat 0 ; COMPARE ; EQ } ;
                     IF {} { PUSH string "UnsafeAllowanceChange" ; FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 68 ; FAILWITH } {} ;
                     UNPAIR ;
                     DUP 8 ;
                     CDR ;
                     SOME ;
                     DIG 8 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         DUP ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.balances[sp.sender].balance >= params.value" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                         CAR ;
                         DUP 7 ;
                         DIG 8 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                         CDR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 142 ; FAILWITH } {} ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 3 ;
                         DIG 4 ;
                         GET 6 ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 143 ; FAILWITH } {} ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 83 ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 83 ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 79 ; FAILWITH } {} ;
                         CDR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } ;
                     NIL operation } }
               { IF_LEFT
                   { DUP ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True }
                        { DUP ;
                          GET 4 ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DUP 3 ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH int 51 ; FAILWITH } {} ;
                          COMPARE ;
                          GE } ;
                     IF {}
                        { PUSH string "You are not authorized to transfer SMAK from this address" ;
                          FAILWITH } ;
                     DUP ;
                     GET 4 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 53 ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "You do not have enough SMAK" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MEM ;
                     IF { NOW ;
                          DUP 3 ;
                          GET 3 ;
                          DUP 3 ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                          COMPARE ;
                          LT ;
                          IF {}
                             { PUSH string "This address is frozen, transfer is impossible" ; FAILWITH } }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     MEM ;
                     IF {}
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)) ;
                          DUP 6 ;
                          GET 3 ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          SWAP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 6 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     CAR ;
                     DUP 7 ;
                     GET 4 ;
                     DIG 8 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 9 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     CDR ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DUP 6 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     DUP 8 ;
                     GET 4 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DUP 6 ;
                          CAR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                          UNPAIR ;
                          DUP 8 ;
                          GET 4 ;
                          DIG 9 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DIG 9 ;
                          CAR ;
                          GET ;
                          IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR }
                        { DROP } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Only a freezer can freeze funds" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "You cannot freeze an admin account" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 101 ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string "There is not enough SMAK on the Freezer account" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         MEM ;
                         IF {}
                            { SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)) ;
                              DUP 6 ;
                              CAR ;
                              CAR ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                         CAR ;
                         DUP 7 ;
                         CAR ;
                         CDR ;
                         DIG 8 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                         CDR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 35 ; FAILWITH } {} ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                         UNPAIR ;
                         SWAP ;
                         DUP 8 ;
                         CAR ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         SENDER ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              DUP ;
                              SENDER ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                              UNPAIR ;
                              DUP 8 ;
                              CAR ;
                              CDR ;
                              DIG 9 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH int 38 ; FAILWITH } {} ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            {} ;
                         DUP ;
                         CDR ;
                         PUSH int 0 ;
                         COMPARE ;
                         LT ;
                         IF {}
                            { PUSH string
                                   "The freeze duration must be greater than 0 seconds. Please use the transfer entry point for a regular transfer." ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         NOW ;
                         DUP 5 ;
                         CDR ;
                         ADD ;
                         SOME ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation } } ;
         PAIR } }
