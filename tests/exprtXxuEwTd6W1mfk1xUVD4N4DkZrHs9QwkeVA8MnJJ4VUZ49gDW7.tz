{ parameter
    (or (or (or (or (unit %claimRewardFlex)
                    (or (pair %createStakingOption
                           (nat %id)
                           (pair (nat %rate) (pair (nat %max) (pair (nat %min) (int %duration)))))
                        (pair %getAdmin unit (contract address))))
                (or (or (pair %getAllStakeFlex
                           unit
                           (contract
                              (big_map address (pair (nat %reward) (pair (timestamp %timestamp) (nat %value))))))
                        (pair %getAllStakeLock
                           unit
                           (contract
                              (big_map
                                 address
                                 (map nat (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value)))))))))
                    (or (pair %getFlexStakeInformation
                           address
                           (contract (pair (nat %reward) (pair (timestamp %timestamp) (nat %value)))))
                        (pair %getLockStakeByPack
                           (pair (address %address) (nat %pack))
                           (contract (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value)))))))))
            (or (or (pair %getLockStakeByPackAndId
                       (pair (nat %id) (pair (nat %pack) (address %address)))
                       (contract (pair (nat %rate) (pair (timestamp %timestamp) (nat %value)))))
                    (or (pair %getLockStakeInformation
                           address
                           (contract (map nat (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value)))))))
                        (pair %getReserve unit (contract address))))
                (or (or (pair %getStakingOptionById
                           nat
                           (contract
                              (pair (pair (nat %maxStake) (nat %minStake))
                                    (pair (nat %stakingPercentage) (int %stakingPeriod)))))
                        (pair %getStakingOptions
                           unit
                           (contract
                              (big_map
                                 nat
                                 (pair (pair (nat %maxStake) (nat %minStake))
                                       (pair (nat %stakingPercentage) (int %stakingPeriod)))))))
                    (or (pair %getTokenContractAddress unit (contract address))
                        (pair %getTotalReward address (contract nat))))))
        (or (or (or (pair %getVotingContract unit (contract address))
                    (or (nat %stakeFlex) (pair %stakeLock (nat %amount) (nat %pack))))
                (or (or (nat %unstakeFlex) (pair %unstakeLock (nat %index) (nat %pack)))
                    (or (address %updateAdmin) (address %updateContract))))
            (or (or (address %updateReserve)
                    (or (pair %updateStakingOptionDuration (nat %id) (int %duration))
                        (pair %updateStakingOptionMax (nat %id) (nat %max))))
                (or (or (pair %updateStakingOptionMin (nat %id) (nat %min))
                        (pair %updateStakingOptionRate (nat %id) (nat %rate)))
                    (or (address %updateVotingContract)
                        (pair %update_metadata (string %key) (bytes %value))))))) ;
  storage
    (pair (pair (pair (address %FA12TokenContract) (address %admin))
                (pair (big_map %metadata string bytes) (address %reserve)))
          (pair (pair (big_map %stakingOptions
                         nat
                         (pair (pair (nat %maxStake) (nat %minStake))
                               (pair (nat %stakingPercentage) (int %stakingPeriod))))
                      (big_map %totalReward address nat))
                (pair (big_map %userStakeFlexPack
                         address
                         (pair (nat %reward) (pair (timestamp %timestamp) (nat %value))))
                      (pair (big_map %userStakeLockPack
                               address
                               (map nat (map nat (pair (nat %rate) (pair (timestamp %timestamp) (nat %value))))))
                            (option %votingContract address))))) ;
  code { LAMBDA
           (pair address
                 (pair (pair (pair address address) (pair (big_map string bytes) address))
                       (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair bool
                       (pair (pair (pair address address) (pair (big_map string bytes) address))
                             (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             GET 8 ;
             IF_NONE
               { DIG 2 ; DROP ; PUSH bool False }
               { DROP ;
                 DIG 2 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 8 ;
                 IF_NONE { PUSH int 149 ; FAILWITH } {} ;
                 COMPARE ;
                 EQ } ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair address address) (pair (big_map string bytes) address))
                       (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address address) (pair (big_map string bytes) address))
                             (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE { PUSH int 326 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             PUSH nat 100 ;
             PUSH nat 10000000000 ;
             MUL ;
             DUP 5 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             GET 4 ;
             DUP 6 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 8 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             CAR ;
             PUSH timestamp "1970-01-01T00:00:00Z" ;
             DUP ;
             PUSH int 31536000 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 390 ; FAILWITH } {} ;
             DUP 8 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             GET 3 ;
             DUP 9 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 11 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             GET 3 ;
             DUP 10 ;
             GET 3 ;
             CAR ;
             DUP 12 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 323 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 390 ; FAILWITH } {} ;
             PUSH nat 10000000000 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 390 ; FAILWITH } { CAR } ;
             MUL ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH int 393 ; FAILWITH } { CAR } ;
             DUP 5 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             DUP 7 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 321 ; FAILWITH } {} ;
             GET 4 ;
             ADD ;
             SENDER ;
             DUP 6 ;
             CAR ;
             GET 4 ;
             PAIR 3 ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             DUP ;
             GET 7 ;
             DUP ;
             SENDER ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 327 ; FAILWITH } {} ;
             DUP ;
             DUP 7 ;
             CAR ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 327 ; FAILWITH } {} ;
             NONE (pair nat (pair timestamp nat)) ;
             DIG 8 ;
             CAR ;
             CAR ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 7 ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair nat nat)
                 (pair (pair (pair address address) (pair (big_map string bytes) address))
                       (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                             (pair (big_map address (pair nat (pair timestamp nat)))
                                   (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address))))))
           (pair (list operation)
                 (pair unit
                       (pair (pair (pair address address) (pair (big_map string bytes) address))
                             (pair (pair (big_map nat (pair (pair nat nat) (pair nat int))) (big_map address nat))
                                   (pair (big_map address (pair nat (pair timestamp nat)))
                                         (pair (big_map address (map nat (map nat (pair nat (pair timestamp nat))))) (option address)))))))
           { NIL operation ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %transfer (pair address (pair address nat)) ;
             IF_NONE { PUSH int 339 ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DUP 4 ;
             GET 7 ;
             SENDER ;
             GET ;
             IF_NONE { PUSH int 336 ; FAILWITH } {} ;
             DUP 6 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH int 336 ; FAILWITH } {} ;
             DUP 6 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH int 336 ; FAILWITH } {} ;
             GET 4 ;
             SENDER ;
             DUP 6 ;
             CAR ;
             GET 4 ;
             PAIR 3 ;
             TRANSFER_TOKENS ;
             CONS ;
             SWAP ;
             DUP ;
             GET 7 ;
             DUP ;
             SENDER ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 340 ; FAILWITH } {} ;
             DUP ;
             DUP 7 ;
             CAR ;
             CDR ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH int 340 ; FAILWITH } {} ;
             NONE (pair nat (pair timestamp nat)) ;
             DIG 8 ;
             CAR ;
             CAR ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 7 ;
             UNIT ;
             DIG 2 ;
             PAIR 3 } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         DROP ;
                         DUP ;
                         GET 5 ;
                         SENDER ;
                         MEM ;
                         IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                         DUP ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 370 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         PUSH nat 100 ;
                         PUSH nat 10000000000 ;
                         MUL ;
                         DUP 7 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 369 ; FAILWITH } {} ;
                         GET 4 ;
                         DUP 8 ;
                         GET 3 ;
                         CAR ;
                         PUSH nat 0 ;
                         GET ;
                         IF_NONE { PUSH int 370 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH timestamp "1970-01-01T00:00:00Z" ;
                         DUP ;
                         PUSH int 31536000 ;
                         ADD ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                         DIG 9 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 369 ; FAILWITH } {} ;
                         GET 3 ;
                         NOW ;
                         PUSH int 0 ;
                         ADD ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                         PUSH nat 10000000000 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH int 390 ; FAILWITH } { CAR } ;
                         MUL ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH int 393 ; FAILWITH } { CAR } ;
                         ADD ;
                         UPDATE 1 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer (pair address (pair address nat)) ;
                         IF_NONE { PUSH int 374 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         GET 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 373 ; FAILWITH } {} ;
                         CAR ;
                         SENDER ;
                         DUP 6 ;
                         CAR ;
                         GET 4 ;
                         PAIR 3 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 376 ; FAILWITH } {} ;
                         PUSH int 0 ;
                         ISNAT ;
                         IF_NONE { PUSH int 376 ; FAILWITH } {} ;
                         UPDATE 1 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         DUP ;
                         GET 5 ;
                         DUP ;
                         SENDER ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 377 ; FAILWITH } {} ;
                         NOW ;
                         PUSH int 0 ;
                         ADD ;
                         UPDATE 3 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         SWAP }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { PUSH string "A staking option with this Id already exists" ; FAILWITH }
                                {} ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DIG 5 ;
                             DUP ;
                             GET 8 ;
                             SWAP ;
                             DUP ;
                             DUG 7 ;
                             GET 3 ;
                             PAIR ;
                             DIG 6 ;
                             DUP ;
                             GET 7 ;
                             SWAP ;
                             DUP ;
                             DUG 8 ;
                             GET 5 ;
                             PAIR ;
                             PAIR ;
                             SOME ;
                             DIG 6 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } }
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 5 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 485 ; FAILWITH } {} }
                                { PUSH string "There is no flexible staking for this address" ; FAILWITH } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 7 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 451 ; FAILWITH } {} ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CDR ;
                                  MEM ;
                                  IF { SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       GET 7 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CAR ;
                                       GET ;
                                       IF_NONE { PUSH int 452 ; FAILWITH } {} ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH int 452 ; FAILWITH } {} }
                                     { PUSH string "This locked staking pack does not exist" ; FAILWITH } }
                                { PUSH string "There is no locked staking for this address" ; FAILWITH } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } } }
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 4 ;
                         MEM ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 7 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET 4 ;
                              GET ;
                              IF_NONE { PUSH int 471 ; FAILWITH } {} ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              GET 3 ;
                              MEM ;
                              IF { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 7 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   GET 4 ;
                                   GET ;
                                   IF_NONE { PUSH int 472 ; FAILWITH } {} ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   GET 3 ;
                                   GET ;
                                   IF_NONE { PUSH int 472 ; FAILWITH } {} ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   MEM ;
                                   IF { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 7 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        GET 4 ;
                                        GET ;
                                        IF_NONE { PUSH int 473 ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        GET 3 ;
                                        GET ;
                                        IF_NONE { PUSH int 473 ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 473 ; FAILWITH } {} }
                                      { PUSH string "There is no locked staking with this id in this pack" ;
                                        FAILWITH } }
                                 { PUSH string "This locked staking pack does not exist" ; FAILWITH } }
                            { PUSH string "There is no locked staking for this address" ; FAILWITH } ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 7 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 463 ; FAILWITH } {} }
                                { PUSH string "There is no locked staking for this address" ; FAILWITH } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             GET 4 ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } }
                   { IF_LEFT
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 3 ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 405 ; FAILWITH } {} }
                                { PUSH string "There is no staking options for this id" ; FAILWITH } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 3 ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  GET ;
                                  IF_NONE { PUSH int 433 ; FAILWITH } {} }
                                { PUSH nat 0 } ;
                             NIL operation ;
                             DIG 2 ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 3 ;
                             TRANSFER_TOKENS ;
                             CONS } } } } }
           { IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         IF_NONE { PUSH int 149 ; FAILWITH } {} ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Amount is too low" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 285 ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             LT ;
                             IF {} { PUSH string "Amount is too high" ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %transfer (pair address (pair address nat)) ;
                             IF_NONE { PUSH int 289 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DUP 4 ;
                             DUP 6 ;
                             CAR ;
                             GET 4 ;
                             SENDER ;
                             PAIR 3 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             GET 5 ;
                             SENDER ;
                             MEM ;
                             IF { DUP 3 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 244 ; FAILWITH } {} ;
                                  PUSH nat 100 ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  DUP 8 ;
                                  GET 5 ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE { PUSH int 244 ; FAILWITH } {} ;
                                  GET 4 ;
                                  DUP 9 ;
                                  GET 3 ;
                                  CAR ;
                                  PUSH nat 0 ;
                                  GET ;
                                  IF_NONE { PUSH int 244 ; FAILWITH } {} ;
                                  GET 3 ;
                                  PUSH timestamp "1970-01-01T00:00:00Z" ;
                                  DUP ;
                                  PUSH int 31536000 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                                  DIG 10 ;
                                  GET 5 ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE { PUSH int 244 ; FAILWITH } {} ;
                                  GET 3 ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                                  PUSH nat 10000000000 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 390 ; FAILWITH } { CAR } ;
                                  MUL ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH int 393 ; FAILWITH } { CAR } ;
                                  UPDATE 1 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 245 ; FAILWITH } {} ;
                                  DUP ;
                                  GET 4 ;
                                  DIG 6 ;
                                  ADD ;
                                  UPDATE 4 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  DUP ;
                                  GET 5 ;
                                  DUP ;
                                  SENDER ;
                                  DUP ;
                                  DUG 2 ;
                                  GET ;
                                  IF_NONE { PUSH int 246 ; FAILWITH } {} ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  UPDATE 3 ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  SWAP }
                                { DIG 2 ;
                                  DUP ;
                                  GET 5 ;
                                  PUSH nat 0 ;
                                  DIG 4 ;
                                  ADD ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  PUSH nat 0 ;
                                  PAIR 3 ;
                                  SOME ;
                                  SENDER ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  SWAP } }
                           { DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 257 ; FAILWITH } {} ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             COMPARE ;
                             GT ;
                             IF {} { PUSH string "Amount is too low" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 258 ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             COMPARE ;
                             LT ;
                             IF {} { PUSH string "Amount is too high" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %transfer (pair address (pair address nat)) ;
                             IF_NONE { PUSH int 263 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DUP 4 ;
                             CAR ;
                             DUP 6 ;
                             CAR ;
                             GET 4 ;
                             SENDER ;
                             PAIR 3 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF { DUP 3 ;
                                  GET 7 ;
                                  SENDER ;
                                  GET ;
                                  IF_NONE { PUSH int 270 ; FAILWITH } {} ;
                                  DUP 3 ;
                                  CDR ;
                                  MEM ;
                                  IF { DUP 3 ;
                                       DUP ;
                                       GET 7 ;
                                       DUP ;
                                       SENDER ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                                       DUP ;
                                       DUP 7 ;
                                       CDR ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 274 ; FAILWITH } {} ;
                                       DUP 8 ;
                                       CAR ;
                                       NOW ;
                                       PUSH int 0 ;
                                       ADD ;
                                       DUP 11 ;
                                       GET 3 ;
                                       CAR ;
                                       DUP 11 ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                                       GET 3 ;
                                       PAIR 3 ;
                                       SOME ;
                                       DIG 9 ;
                                       GET 7 ;
                                       SENDER ;
                                       GET ;
                                       IF_NONE { PUSH int 273 ; FAILWITH } {} ;
                                       DIG 9 ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH int 273 ; FAILWITH } {} ;
                                       SIZE ;
                                       UPDATE ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       UPDATE 7 ;
                                       SWAP }
                                     { DUP 3 ;
                                       DUP ;
                                       GET 7 ;
                                       DUP ;
                                       SENDER ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 271 ; FAILWITH } {} ;
                                       EMPTY_MAP nat (pair nat (pair timestamp nat)) ;
                                       DUP 7 ;
                                       CAR ;
                                       NOW ;
                                       PUSH int 0 ;
                                       ADD ;
                                       DIG 9 ;
                                       GET 3 ;
                                       CAR ;
                                       DUP 10 ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                                       GET 3 ;
                                       PAIR 3 ;
                                       SOME ;
                                       PUSH nat 0 ;
                                       UPDATE ;
                                       SOME ;
                                       DIG 6 ;
                                       CDR ;
                                       UPDATE ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       UPDATE 7 ;
                                       SWAP } }
                                { DUP 3 ;
                                  DUP ;
                                  GET 7 ;
                                  EMPTY_MAP nat (map nat (pair nat (pair timestamp nat))) ;
                                  EMPTY_MAP nat (pair nat (pair timestamp nat)) ;
                                  DUP 6 ;
                                  CAR ;
                                  NOW ;
                                  PUSH int 0 ;
                                  ADD ;
                                  DIG 8 ;
                                  GET 3 ;
                                  CAR ;
                                  DUP 9 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { PUSH int 265 ; FAILWITH } {} ;
                                  GET 3 ;
                                  PAIR 3 ;
                                  SOME ;
                                  PUSH nat 0 ;
                                  UPDATE ;
                                  SOME ;
                                  DIG 5 ;
                                  CDR ;
                                  UPDATE ;
                                  SOME ;
                                  SENDER ;
                                  UPDATE ;
                                  UPDATE 7 ;
                                  SWAP } } } }
                   { IF_LEFT
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 5 ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                             DUP ;
                             DUP 3 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 350 ; FAILWITH } {} ;
                             GET 4 ;
                             COMPARE ;
                             GE ;
                             IF {} { PUSH string "Not enough tokens to unstake" ; FAILWITH } ;
                             NIL operation ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CONTRACT %transfer (pair address (pair address nat)) ;
                             IF_NONE { PUSH int 354 ; FAILWITH } {} ;
                             PUSH mutez 0 ;
                             DUP 4 ;
                             SENDER ;
                             DUP 7 ;
                             CAR ;
                             GET 4 ;
                             PAIR 3 ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             DUP 3 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                             DUP ;
                             CAR ;
                             PUSH nat 100 ;
                             PUSH nat 10000000000 ;
                             MUL ;
                             DUP 9 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                             GET 4 ;
                             DUP 10 ;
                             GET 3 ;
                             CAR ;
                             PUSH nat 0 ;
                             GET ;
                             IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                             GET 3 ;
                             PUSH timestamp "1970-01-01T00:00:00Z" ;
                             DUP ;
                             PUSH int 31536000 ;
                             ADD ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                             DIG 11 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 356 ; FAILWITH } {} ;
                             GET 3 ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                             PUSH nat 10000000000 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH int 390 ; FAILWITH } { CAR } ;
                             MUL ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH int 393 ; FAILWITH } { CAR } ;
                             ADD ;
                             UPDATE 1 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             DUP ;
                             DUG 3 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 359 ; FAILWITH } {} ;
                             DIG 5 ;
                             DIG 6 ;
                             GET 5 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 359 ; FAILWITH } {} ;
                             GET 4 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH int 359 ; FAILWITH } {} ;
                             UPDATE 4 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             DUP ;
                             GET 5 ;
                             DUP ;
                             SENDER ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 360 ; FAILWITH } {} ;
                             NOW ;
                             PUSH int 0 ;
                             ADD ;
                             UPDATE 3 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 5 ;
                             SWAP }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             MEM ;
                             IF {} { PUSH string "Never staked on this contract" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 306 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             MEM ;
                             IF {} { PUSH string "Never staked using this pack" ; FAILWITH } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 307 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 307 ; FAILWITH } {} ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             MEM ;
                             IF {} { PUSH string "This stake doesn't exist" ; FAILWITH } ;
                             NOW ;
                             DUP 3 ;
                             GET 7 ;
                             SENDER ;
                             GET ;
                             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                             DUP 3 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                             DUP 3 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                             GET 3 ;
                             DUP 4 ;
                             GET 3 ;
                             CAR ;
                             DUP 4 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH int 309 ; FAILWITH } {} ;
                             GET 4 ;
                             ADD ;
                             COMPARE ;
                             LT ;
                             IF { DIG 2 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  PAIR ;
                                  EXEC ;
                                  DUP ;
                                  GET 4 ;
                                  SWAP ;
                                  CAR ;
                                  NIL operation ;
                                  SWAP ;
                                  ITER { CONS } }
                                { DIG 3 ;
                                  DROP ;
                                  DIG 3 ;
                                  DROP ;
                                  PAIR ;
                                  EXEC ;
                                  DUP ;
                                  GET 4 ;
                                  SWAP ;
                                  CAR ;
                                  NIL operation ;
                                  SWAP ;
                                  ITER { CONS } } } }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             SENDER ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             CAR ;
                             DIG 3 ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             SENDER ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             CDR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             PAIR } ;
                         NIL operation } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PACK ;
                         SENDER ;
                         PACK ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Access denied" ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DUP ;
                             DUP 7 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 195 ; FAILWITH } {} ;
                             DIG 7 ;
                             CDR ;
                             UPDATE 4 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DUP ;
                             DUP 7 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 207 ; FAILWITH } {} ;
                             UNPAIR ;
                             CDR ;
                             DIG 8 ;
                             CDR ;
                             PAIR ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } } }
                   { IF_LEFT
                       { IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DUP ;
                             DUP 7 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 218 ; FAILWITH } {} ;
                             UNPAIR ;
                             CAR ;
                             DIG 8 ;
                             CDR ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP }
                           { DIG 2 ;
                             DROP ;
                             DIG 2 ;
                             DROP ;
                             DUG 2 ;
                             SENDER ;
                             PAIR ;
                             EXEC ;
                             DUP ;
                             GET 4 ;
                             DUG 2 ;
                             DUP ;
                             CAR ;
                             NIL operation ;
                             SWAP ;
                             ITER { CONS } ;
                             SWAP ;
                             GET 3 ;
                             IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; CAR ; CDR ; COMPARE ; EQ } ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             DUP 3 ;
                             GET 3 ;
                             CAR ;
                             DUP 3 ;
                             CAR ;
                             MEM ;
                             IF {}
                                { PUSH string "The staking option for this id does not exist" ; FAILWITH } ;
                             DIG 2 ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             DUP ;
                             DUP 7 ;
                             CAR ;
                             DUP ;
                             DUG 2 ;
                             GET ;
                             IF_NONE { PUSH int 183 ; FAILWITH } {} ;
                             DIG 7 ;
                             CDR ;
                             UPDATE 3 ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP } }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             SENDER ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SOME ;
                             UPDATE 8 }
                           { SENDER ;
                             PACK ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             PACK ;
                             COMPARE ;
                             EQ ;
                             IF {} { PUSH string "Access denied" ; FAILWITH } ;
                             SWAP ;
                             UNPAIR ;
                             UNPAIR ;
                             SWAP ;
                             UNPAIR ;
                             DUP 5 ;
                             CDR ;
                             SOME ;
                             DIG 5 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             PAIR } ;
                         NIL operation } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
