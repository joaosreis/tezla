{ parameter
    (or (or (or %checkerEntrypoint
               (or %lazyParams
                  (or (or (or (or (address %activate_burrow)
                                  (pair %add_liquidity (pair nat nat) (pair nat timestamp)))
                              (or (pair %burn_kit address nat) (pair %buy_kit (pair nat nat) timestamp)))
                          (or (or (int %cancel_liquidation_slice) (option %create_burrow key_hash))
                              (or (address %deactivate_burrow) (address %deposit_tez))))
                      (or (or (or (ticket %liquidation_auction_claim_win
                                     (pair nat (pair (int %auction_id) (pair %bid (address %address) (nat %kit)))))
                                  (nat %liquidation_auction_place_bid))
                              (or (ticket %liquidation_auction_reclaim_bid
                                     (pair nat (pair (int %auction_id) (pair %bid (address %address) (nat %kit)))))
                                  (address %mark_for_liquidation)))
                          (or (or (pair %mint_kit address nat) (nat %receive_price))
                              (or (unit %receive_slice_from_burrow)
                                  (pair %remove_liquidity (pair nat nat) (pair nat timestamp))))))
                  (or (or (or (pair %sell_kit (pair nat nat) timestamp)
                              (pair %set_burrow_delegate address (option key_hash)))
                          (or (unit %touch) (address %touch_burrow)))
                      (or (or (list %touch_liquidation_slices int)
                              (list %transfer
                                 (pair (address %from_)
                                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                          (or (list %update_operators
                                 (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                     (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))
                              (pair %withdraw_tez mutez address)))))
               (pair %strictParams
                  (list %requests (pair (address %owner) (nat %token_id)))
                  (contract %callback
                     (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
            (pair %deployFunction int bytes))
        (unit %sealContract)) ;
  storage
    (pair (pair (pair (pair (pair (big_map %burrows
                                     address
                                     (pair (pair (pair (pair (bool %active) (int %adjustment_index))
                                                       (pair (mutez %collateral) (mutez %collateral_at_auction)))
                                                 (pair (pair (option %delegate key_hash) (nat %excess_kit))
                                                       (pair (timestamp %last_touched) (nat %outstanding_kit))))
                                           (address %owner)))
                                  (pair %cfmm
                                     (pair (pair (nat %ctez) (nat %kit))
                                           (pair (pair %kit_in_ctez_in_prev_block (int %den) (int %num)) (nat %last_level)))
                                     (nat %lqt)))
                            (pair (pair %fa2_state
                                     (big_map %ledger (pair nat address) nat)
                                     (big_map %operators (pair address address) unit))
                                  (option %last_price nat)))
                      (pair (pair %liquidation_auctions
                               (pair (pair (pair %avl_storage
                                              (int %last_ptr)
                                              (big_map %mem
                                                 int
                                                 (or (or (pair %branch
                                                            (pair (pair (int %left) (int %left_height)) (pair (mutez %left_tez) (int %parent)))
                                                            (pair (pair (int %right) (int %right_height)) (mutez %right_tez)))
                                                         (pair %leaf
                                                            (int %parent)
                                                            (pair %value
                                                               (pair (pair %contents (pair (address %burrow) (nat %min_kit_for_unwarranted)) (mutez %tez))
                                                                     (option %older int))
                                                               (option %younger int))))
                                                     (pair %root
                                                        (option int)
                                                        (option
                                                           (pair (pair (option %older_auction int) (mutez %sold_tez))
                                                                 (pair (pair %winning_bid (address %address) (nat %kit))
                                                                       (option %younger_auction int))))))))
                                           (big_map %burrow_slices address (pair (int %oldest_slice) (int %youngest_slice))))
                                     (pair (option %completed_auctions (pair (int %oldest) (int %youngest)))
                                           (option %current_auction
                                              (pair (int %contents)
                                                    (or %state
                                                       (pair %ascending (pair (pair (address %address) (nat %kit)) timestamp) nat)
                                                       (pair %descending nat timestamp))))))
                               (int %queued_slices))
                            (pair %parameters
                               (pair (pair (pair (int %burrow_fee_index) (nat %circulating_kit))
                                           (pair (int %drift) (int %drift_derivative)))
                                     (pair (pair (int %imbalance_index) (mutez %index))
                                           (pair (timestamp %last_touched) (nat %outstanding_kit))))
                               (pair (pair (mutez %protected_index) (int %q)) (int %target)))))
                (big_map int bytes))
          (option address)) ;
  code { SELF_ADDRESS ;
         PUSH int 18446744073709551616 ;
         PUSH nat 1 ;
         LEVEL ;
         PUSH int 1 ;
         PUSH int 1 ;
         PAIR ;
         PAIR ;
         PUSH nat 1 ;
         PUSH nat 1 ;
         PAIR ;
         PAIR ;
         PAIR ;
         EMPTY_BIG_MAP (pair address address) unit ;
         EMPTY_BIG_MAP (pair nat address) nat ;
         PAIR ;
         EMPTY_BIG_MAP
           int
           (or (or (pair (pair (pair int int) (pair mutez int)) (pair (pair int int) mutez))
                   (pair int (pair (pair (pair (pair address nat) mutez) (option int)) (option int))))
               (pair (option int)
                     (option (pair (pair (option int) mutez) (pair (pair address nat) (option int)))))) ;
         PUSH int 0 ;
         PAIR ;
         NONE (pair (pair (option int) mutez) (pair (pair address nat) (option int))) ;
         NONE int ;
         PAIR ;
         RIGHT
           (or (pair (pair (pair int int) (pair mutez int)) (pair (pair int int) mutez))
               (pair int (pair (pair (pair (pair address nat) mutez) (option int)) (option int)))) ;
         SWAP ;
         UNPAIR ;
         PUSH int 1 ;
         ADD ;
         DUP ;
         DIG 2 ;
         DIG 3 ;
         SOME ;
         DUP 4 ;
         UPDATE ;
         DIG 2 ;
         PAIR ;
         SWAP ;
         NONE (pair int (or (pair (pair (pair address nat) timestamp) nat) (pair nat timestamp))) ;
         NONE (pair int int) ;
         PAIR ;
         EMPTY_BIG_MAP address (pair int int) ;
         DIG 3 ;
         PAIR ;
         PAIR ;
         PAIR ;
         DIG 3 ;
         DUP ;
         DUP ;
         DUG 5 ;
         PUSH mutez 1000000 ;
         PAIR ;
         PAIR ;
         PUSH nat 1 ;
         NOW ;
         PAIR ;
         PUSH mutez 1000000 ;
         DUP 7 ;
         PAIR ;
         PAIR ;
         PUSH int 0 ;
         PUSH int 0 ;
         PAIR ;
         PUSH nat 1 ;
         DIG 7 ;
         PAIR ;
         PAIR ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR ;
         NONE nat ;
         DIG 2 ;
         PAIR ;
         DIG 2 ;
         DROP 3 ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         UNPAIR ;
         DUP 3 ;
         IF_NONE
           { DIG 3 ;
             IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { IF_LEFT
                               { DIG 4 ;
                                 DROP ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { IF_LEFT { PACK ; PUSH int 6 ; PAIR } { PACK ; PUSH int 15 ; PAIR } }
                                       { IF_LEFT { PACK ; PUSH int 5 ; PAIR } { PACK ; PUSH int 13 ; PAIR } } }
                                   { IF_LEFT
                                       { IF_LEFT { PACK ; PUSH int 10 ; PAIR } { PACK ; PUSH int 1 ; PAIR } }
                                       { IF_LEFT { PACK ; PUSH int 7 ; PAIR } { PACK ; PUSH int 2 ; PAIR } } } }
                               { IF_LEFT
                                   { IF_LEFT
                                       { IF_LEFT
                                           { READ_TICKET ;
                                             SWAP ;
                                             DROP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             PUSH nat 1 ;
                                             DIG 3 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 3 ;
                                             DIG 2 ;
                                             COMPARE ;
                                             EQ ;
                                             DIG 7 ;
                                             DIG 4 ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             AND ;
                                             IF {} { DROP ; PUSH int 73 ; FAILWITH } ;
                                             PACK ;
                                             PUSH int 19 ;
                                             PAIR }
                                           { DIG 4 ; DROP ; PACK ; PUSH int 17 ; PAIR } }
                                       { IF_LEFT
                                           { READ_TICKET ;
                                             SWAP ;
                                             DROP ;
                                             UNPAIR ;
                                             SWAP ;
                                             UNPAIR ;
                                             UNPAIR ;
                                             PUSH nat 1 ;
                                             DIG 3 ;
                                             COMPARE ;
                                             EQ ;
                                             PUSH nat 3 ;
                                             DIG 2 ;
                                             COMPARE ;
                                             EQ ;
                                             DIG 7 ;
                                             DIG 4 ;
                                             COMPARE ;
                                             EQ ;
                                             AND ;
                                             AND ;
                                             IF {} { DROP ; PUSH int 73 ; FAILWITH } ;
                                             PACK ;
                                             PUSH int 18 ;
                                             PAIR }
                                           { DIG 4 ; DROP ; PACK ; PUSH int 8 ; PAIR } } }
                                   { DIG 4 ;
                                     DROP ;
                                     IF_LEFT
                                       { IF_LEFT { PACK ; PUSH int 4 ; PAIR } { PACK ; PUSH int 21 ; PAIR } }
                                       { IF_LEFT { PACK ; PUSH int 20 ; PAIR } { PACK ; PUSH int 16 ; PAIR } } } } }
                           { DIG 4 ;
                             DROP ;
                             IF_LEFT
                               { IF_LEFT
                                   { IF_LEFT { PACK ; PUSH int 14 ; PAIR } { PACK ; PUSH int 12 ; PAIR } }
                                   { IF_LEFT { PACK ; PUSH int 0 ; PAIR } { PACK ; PUSH int 11 ; PAIR } } }
                               { IF_LEFT
                                   { IF_LEFT { PACK ; PUSH int 9 ; PAIR } { PACK ; PUSH int 22 ; PAIR } }
                                   { IF_LEFT { PACK ; PUSH int 23 ; PAIR } { PACK ; PUSH int 3 ; PAIR } } } } ;
                         UNPAIR ;
                         SWAP ;
                         DIG 2 ;
                         PAIR ;
                         DUP 3 ;
                         DIG 2 ;
                         GET ;
                         IF_NONE
                           { PUSH string "lazy function missing" ; FAILWITH }
                           { UNPACK
                               (lambda
                                  (pair (pair (pair (pair (big_map %burrows
                                                             address
                                                             (pair (pair (pair (pair (bool %active) (int %adjustment_index))
                                                                               (pair (mutez %collateral) (mutez %collateral_at_auction)))
                                                                         (pair (pair (option %delegate key_hash) (nat %excess_kit))
                                                                               (pair (timestamp %last_touched) (nat %outstanding_kit))))
                                                                   (address %owner)))
                                                          (pair %cfmm
                                                             (pair (pair (nat %ctez) (nat %kit))
                                                                   (pair (pair %kit_in_ctez_in_prev_block (int %den) (int %num)) (nat %last_level)))
                                                             (nat %lqt)))
                                                    (pair (pair %fa2_state
                                                             (big_map %ledger (pair nat address) nat)
                                                             (big_map %operators (pair address address) unit))
                                                          (option %last_price nat)))
                                              (pair (pair %liquidation_auctions
                                                       (pair (pair (pair %avl_storage
                                                                      (int %last_ptr)
                                                                      (big_map %mem
                                                                         int
                                                                         (or (or (pair %branch
                                                                                    (pair (pair (int %left) (int %left_height)) (pair (mutez %left_tez) (int %parent)))
                                                                                    (pair (pair (int %right) (int %right_height)) (mutez %right_tez)))
                                                                                 (pair %leaf
                                                                                    (int %parent)
                                                                                    (pair %value
                                                                                       (pair (pair %contents (pair (address %burrow) (nat %min_kit_for_unwarranted)) (mutez %tez))
                                                                                             (option %older int))
                                                                                       (option %younger int))))
                                                                             (pair %root
                                                                                (option int)
                                                                                (option
                                                                                   (pair (pair (option %older_auction int) (mutez %sold_tez))
                                                                                         (pair (pair %winning_bid (address %address) (nat %kit))
                                                                                               (option %younger_auction int))))))))
                                                                   (big_map %burrow_slices address (pair (int %oldest_slice) (int %youngest_slice))))
                                                             (pair (option %completed_auctions (pair (int %oldest) (int %youngest)))
                                                                   (option %current_auction
                                                                      (pair (int %contents)
                                                                            (or %state
                                                                               (pair %ascending (pair (pair (address %address) (nat %kit)) timestamp) nat)
                                                                               (pair %descending nat timestamp))))))
                                                       (int %queued_slices))
                                                    (pair %parameters
                                                       (pair (pair (pair (int %burrow_fee_index) (nat %circulating_kit))
                                                                   (pair (int %drift) (int %drift_derivative)))
                                                             (pair (pair (int %imbalance_index) (mutez %index))
                                                                   (pair (timestamp %last_touched) (nat %outstanding_kit))))
                                                       (pair (pair (mutez %protected_index) (int %q)) (int %target)))))
                                        bytes)
                                  (pair (list operation)
                                        (pair (pair (pair (big_map %burrows
                                                             address
                                                             (pair (pair (pair (pair (bool %active) (int %adjustment_index))
                                                                               (pair (mutez %collateral) (mutez %collateral_at_auction)))
                                                                         (pair (pair (option %delegate key_hash) (nat %excess_kit))
                                                                               (pair (timestamp %last_touched) (nat %outstanding_kit))))
                                                                   (address %owner)))
                                                          (pair %cfmm
                                                             (pair (pair (nat %ctez) (nat %kit))
                                                                   (pair (pair %kit_in_ctez_in_prev_block (int %den) (int %num)) (nat %last_level)))
                                                             (nat %lqt)))
                                                    (pair (pair %fa2_state
                                                             (big_map %ledger (pair nat address) nat)
                                                             (big_map %operators (pair address address) unit))
                                                          (option %last_price nat)))
                                              (pair (pair %liquidation_auctions
                                                       (pair (pair (pair %avl_storage
                                                                      (int %last_ptr)
                                                                      (big_map %mem
                                                                         int
                                                                         (or (or (pair %branch
                                                                                    (pair (pair (int %left) (int %left_height)) (pair (mutez %left_tez) (int %parent)))
                                                                                    (pair (pair (int %right) (int %right_height)) (mutez %right_tez)))
                                                                                 (pair %leaf
                                                                                    (int %parent)
                                                                                    (pair %value
                                                                                       (pair (pair %contents (pair (address %burrow) (nat %min_kit_for_unwarranted)) (mutez %tez))
                                                                                             (option %older int))
                                                                                       (option %younger int))))
                                                                             (pair %root
                                                                                (option int)
                                                                                (option
                                                                                   (pair (pair (option %older_auction int) (mutez %sold_tez))
                                                                                         (pair (pair %winning_bid (address %address) (nat %kit))
                                                                                               (option %younger_auction int))))))))
                                                                   (big_map %burrow_slices address (pair (int %oldest_slice) (int %youngest_slice))))
                                                             (pair (option %completed_auctions (pair (int %oldest) (int %youngest)))
                                                                   (option %current_auction
                                                                      (pair (int %contents)
                                                                            (or %state
                                                                               (pair %ascending (pair (pair (address %address) (nat %kit)) timestamp) nat)
                                                                               (pair %descending nat timestamp))))))
                                                       (int %queued_slices))
                                                    (pair %parameters
                                                       (pair (pair (pair (int %burrow_fee_index) (nat %circulating_kit))
                                                                   (pair (int %drift) (int %drift_derivative)))
                                                             (pair (pair (int %imbalance_index) (mutez %index))
                                                                   (pair (timestamp %last_touched) (nat %outstanding_kit))))
                                                       (pair (pair (mutez %protected_index) (int %q)) (int %target))))))) ;
                             IF_NONE { PUSH string "lazy function unpack failure" ; FAILWITH } {} } ;
                         SWAP ;
                         EXEC }
                       { DIG 4 ;
                         DROP ;
                         UNPAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         MAP { DUP ;
                               CDR ;
                               PUSH nat 1 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               COMPARE ;
                               EQ ;
                               PUSH nat 0 ;
                               DIG 2 ;
                               COMPARE ;
                               EQ ;
                               OR ;
                               IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                               DUP ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               PAIR ;
                               DUP 3 ;
                               CAR ;
                               SWAP ;
                               GET ;
                               IF_NONE { PUSH nat 0 } {} ;
                               SWAP ;
                               PAIR } ;
                         SWAP ;
                         DROP ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { DROP 2 ; DIG 2 ; DROP ; PUSH int 135 ; FAILWITH } }
               { DROP 2 ; DIG 2 ; DROP ; PUSH int 135 ; FAILWITH } ;
             UNPAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DUG 2 ;
             PAIR ;
             PAIR }
           { DIG 3 ;
             DROP ;
             DIG 4 ;
             DROP ;
             DUP ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ;
                  IF_LEFT
                    { IF_LEFT
                        { DROP 2 ; SWAP ; DROP ; PUSH int 134 ; FAILWITH }
                        { UNPAIR ;
                          DIG 2 ;
                          SOME ;
                          DUP 5 ;
                          DUP 3 ;
                          GET ;
                          IF_NONE
                            { DIG 4 ; DIG 3 ; DIG 3 ; SWAP ; SOME ; SWAP ; UPDATE }
                            { DIG 5 ; DIG 4 ; DIG 2 ; CONCAT ; DIG 3 ; SWAP ; SOME ; SWAP ; UPDATE } ;
                          PAIR } }
                    { DROP 2 ; NONE address ; DIG 2 ; PAIR } }
                { DROP ; SWAP ; DROP ; SWAP ; DROP ; PUSH int 111 ; FAILWITH } ;
             SWAP ;
             NIL operation ;
             PAIR ;
             PAIR } ;
         UNPAIR ;
         UNPAIR ;
         DIG 2 ;
         UNPAIR ;
         DIG 3 ;
         PAIR ;
         PAIR ;
         SWAP ;
         PAIR } }
