{ storage
    (pair (pair (pair (address %administrator)
                      (pair %claims
                         (pair (pair (map %claimers address nat) (mutez %claiming_price))
                               (pair (nat %cur_claim_key) (nat %max_claims_per_period)))
                         (pair (pair (nat %max_free_claims_per_addr) (nat %max_paid_claims_per_addr))
                               (pair (int %period_len) (timestamp %period_start)))))
                (pair (address %distributor) (address %fa2)))
          (pair (pair (big_map %metadata string bytes) (bool %paused))
                (pair (map %series
                         nat
                         (pair (bool %claimable)
                               (pair (map %levels
                                        nat
                                        (pair (pair (nat %burned) (nat %minted))
                                              (pair (nat %rarity) (map %token_info string bytes))))
                                     (nat %series_id))))
                      (map %series_meta
                         nat
                         (pair (nat %cap) (pair (mutez %upgrade_cost) (nat %upgrade_req))))))) ;
  parameter
    (or (or (or (unit %claim)
                (or (pair %complete_upgrade (nat %nt_id) (pair (nat %token_id) (nat %upgrade_req)))
                    (list %create_series
                       (pair (bool %claimable)
                             (pair (map %levels
                                      nat
                                      (pair (pair (nat %burned) (nat %minted))
                                            (pair (nat %rarity) (map %token_info string bytes))))
                                   (nat %series_id))))))
            (or (pair %mint_in_series
                   (pair (address %address) (nat %amount))
                   (pair (nat %level_key) (nat %series_key)))
                (or (pair %mutez_transfer (mutez %amount) (address %destination))
                    (address %set_administrator))))
        (or (or (pair %set_claim_meta
                   (pair (mutez %claiming_price) (nat %max_claims_per_period))
                   (pair (nat %max_free_claims_per_addr)
                         (pair (nat %max_paid_claims_per_addr) (int %period_len))))
                (or (address %set_distributor) (address %set_fa2)))
            (or (or (bool %set_pause)
                    (map %set_series_meta
                       nat
                       (pair (nat %cap) (pair (mutez %upgrade_cost) (nat %upgrade_req)))))
                (or (pair %update_series_claimable (bool %claimable) (nat %series_id))
                    (nat %upgrade))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     PUSH int 0 ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     NOW ;
                     SUB ;
                     COMPARE ;
                     GT ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          CAR ;
                          NOW ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          UNPAIR ;
                          CDR ;
                          EMPTY_MAP address nat ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        {} ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     ITER { CDR ; ADD } ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LT ;
                     IF {}
                        { PUSH string
                               "WrongCondition: result.value < self.data.claims.max_claims_per_period" ;
                          FAILWITH } ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { DIG 2 ;
                          DUP ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          GET ;
                          IF_NONE { PUSH int 259 ; FAILWITH } {} ;
                          COMPARE ;
                          GE ;
                          IF { DIG 2 ;
                               DUP ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               ADD ;
                               DUP 4 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               SENDER ;
                               GET ;
                               IF_NONE { PUSH int 262 ; FAILWITH } {} ;
                               COMPARE ;
                               LT ;
                               IF {}
                                  { PUSH string
                                         "WrongCondition: self.data.claims.claimers[sp.sender] < (self.data.claims.max_free_claims_per_addr + self.data.claims.max_paid_claims_per_addr)" ;
                                    FAILWITH } ;
                               DUP 3 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               CDR ;
                               AMOUNT ;
                               COMPARE ;
                               EQ ;
                               IF {}
                                  { PUSH string "WrongCondition: sp.amount == self.data.claims.claiming_price" ;
                                    FAILWITH } ;
                               PUSH mutez 0 ;
                               AMOUNT ;
                               COMPARE ;
                               GT ;
                               IF { NIL operation ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CONTRACT %distribute unit ;
                                    IF_NONE { PUSH int 80 ; FAILWITH } {} ;
                                    AMOUNT ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS }
                                  { NIL operation } }
                             { PUSH mutez 0 ;
                               AMOUNT ;
                               COMPARE ;
                               GT ;
                               IF { NIL operation ;
                                    SENDER ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH int 267 ; FAILWITH } {} ;
                                    AMOUNT ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS }
                                  { NIL operation } } }
                        { PUSH mutez 0 ;
                          AMOUNT ;
                          COMPARE ;
                          GT ;
                          IF { NIL operation ;
                               SENDER ;
                               CONTRACT unit ;
                               IF_NONE { PUSH int 270 ; FAILWITH } {} ;
                               AMOUNT ;
                               UNIT ;
                               TRANSFER_TOKENS ;
                               CONS }
                             { NIL operation } } ;
                     PUSH bool False ;
                     DUP 5 ;
                     GET 5 ;
                     SIZE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NOT ;
                     LOOP { DUP ;
                            PUSH nat 0 ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH string "PP_CLAIMS_MAXED" ; FAILWITH } {} ;
                            DUP 6 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            PUSH bool False ;
                            DUP 8 ;
                            GET 5 ;
                            ITER { CAR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   IF { SWAP ; DROP ; SWAP ; DROP ; DUP ; PUSH bool False ; SWAP } {} ;
                                   DUP 3 ;
                                   COMPARE ;
                                   EQ ;
                                   IF { DROP ; PUSH bool True } {} } ;
                            DUP 8 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DUP 3 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP ;
                                 PUSH bool True ;
                                 DUP 8 ;
                                 GET 5 ;
                                 ITER { CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        IF { SWAP ; DROP ; SWAP ; DROP ; PUSH bool False } { DROP } } }
                               {} ;
                            DIG 7 ;
                            UNPAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            CDR ;
                            DUP 8 ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            DUP ;
                            GET 5 ;
                            SWAP ;
                            DUP ;
                            DUG 9 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            CDR ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 280 ; FAILWITH } {} ;
                            CAR ;
                            IF { DIG 3 ; DROP 3 ; PUSH bool True ; SWAP } { DROP 2 } ;
                            PUSH nat 1 ;
                            SWAP ;
                            SUB ;
                            ISNAT ;
                            IF_NONE { PUSH int 282 ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            NOT } ;
                     DROP 2 ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     PUSH nat 1000 ;
                     GET ;
                     IF_NONE { PUSH int 288 ; FAILWITH } {} ;
                     CAR ;
                     PUSH nat 1 ;
                     DIG 3 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 4 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     ADD ;
                     COMPARE ;
                     LE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (self.data.series[self.data.claims.cur_claim_key].levels[1000 + self.data.series[self.data.claims.cur_claim_key].series_id].minted + 1) <= self.data.series_meta[1000].cap" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 290 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DIG 10 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 12 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 290 ; FAILWITH } {} ;
                     UNPAIR ;
                     CAR ;
                     PUSH nat 1 ;
                     DIG 13 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 15 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 14 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CONTRACT %mint
                       (pair (pair (address %address) (nat %amount))
                             (pair (map %metadata string bytes) (nat %token_id))) ;
                     IF_NONE { PUSH int 371 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     DIG 4 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 5 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     GET 3 ;
                     ADD ;
                     DIG 4 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 5 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     GET 4 ;
                     PAIR %metadata %token_id ;
                     PUSH nat 1 ;
                     SENDER ;
                     PAIR %address %amount ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 6 ;
                     PUSH nat 1000 ;
                     GET ;
                     IF_NONE { PUSH int 298 ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 3 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          DUP ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 299 ; FAILWITH } {} ;
                          CDR ;
                          PUSH bool False ;
                          PAIR ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          SWAP }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 301 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 9 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 11 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 3 ;
                     DIG 10 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 12 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     GET ;
                     IF_NONE { PUSH int 286 ; FAILWITH } {} ;
                     SOME ;
                     DIG 10 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     GET 4 ;
                     PUSH nat 1000 ;
                     ADD ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 5 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 284 ; FAILWITH } {} ;
                     SOME ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          DUP ;
                          SENDER ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH int 305 ; FAILWITH } {} ;
                          PUSH nat 1 ;
                          ADD ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP }
                        { SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          PUSH (option nat) (Some 1) ;
                          SENDER ;
                          UPDATE ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          SWAP } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.fa2" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         PUSH nat 1000 ;
                         DUP 7 ;
                         GET 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 233 ; FAILWITH } { CDR } ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 10 ;
                         GET 3 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                         UNPAIR ;
                         CDR ;
                         DUP 12 ;
                         GET 4 ;
                         DIG 13 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 15 ;
                         GET 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 233 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 14 ;
                         GET 3 ;
                         GET ;
                         IF_NONE { PUSH int 234 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         PUSH nat 1000 ;
                         DUP 7 ;
                         GET 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 233 ; FAILWITH } { CDR } ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 10 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                         UNPAIR ;
                         CAR ;
                         PUSH nat 1 ;
                         DIG 13 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 15 ;
                         GET 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 233 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                         GET 3 ;
                         DIG 13 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 235 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { DUP ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CONTRACT %distribute unit ;
                              IF_NONE { PUSH int 80 ; FAILWITH } {} ;
                              NIL operation ;
                              SWAP ;
                              AMOUNT ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              CONS }
                            { NIL operation } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         DUP ;
                         ITER { DUP 3 ;
                                GET 5 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 4 ;
                                MEM ;
                                IF { PUSH string "PP_SERIES_UNDEFINED" ; FAILWITH } {} ;
                                DIG 2 ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                SWAP ;
                                UNPAIR ;
                                DIG 4 ;
                                DUP ;
                                SOME ;
                                SWAP ;
                                GET 4 ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } ;
                         DROP ;
                         NIL operation } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     MEM ;
                     IF {}
                        { PUSH string "WrongCondition: self.data.series.contains(params.series_key)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 132 ; FAILWITH } {} ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     MEM ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.series[params.series_key].levels.contains(params.level_key)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     GET 5 ;
                     DUP 3 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 3 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 138 ; FAILWITH } {} ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     GET 5 ;
                     DUP 4 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 4 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                     CAR ;
                     CDR ;
                     ADD ;
                     COMPARE ;
                     LE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: (self.data.series[params.series_key].levels[params.level_key].minted + params.amount) <= self.data.series_meta[self.data.series[params.series_key].levels[params.level_key].rarity].cap" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 6 ;
                     GET 4 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 10 ;
                     GET 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 141 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     DUP 13 ;
                     CAR ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CONTRACT %mint
                       (pair (pair (address %address) (nat %amount))
                             (pair (map %metadata string bytes) (nat %token_id))) ;
                     IF_NONE { PUSH int 371 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DUP 5 ;
                     GET 5 ;
                     DUP 5 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 4 ;
                     DUP 6 ;
                     GET 5 ;
                     DUP 6 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 6 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                     GET 3 ;
                     ADD ;
                     DUP 6 ;
                     GET 5 ;
                     DUP 6 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 6 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                     GET 4 ;
                     PAIR %metadata %token_id ;
                     DIG 4 ;
                     DUP ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     PAIR %address %amount ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DUP 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 7 ;
                     GET 4 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 147 ; FAILWITH } {} ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 10 ;
                     GET 5 ;
                     DUP 11 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     GET 3 ;
                     DUP 11 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { PUSH int 136 ; FAILWITH } {} ;
                     SOME ;
                     DUP 11 ;
                     GET 3 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUP ;
                     DUG 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 6 ;
                     GET 5 ;
                     DUP 7 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { PUSH int 135 ; FAILWITH } {} ;
                     SOME ;
                     DIG 6 ;
                     GET 4 ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         DUP ;
                         CDR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 342 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         DIG 2 ;
                         CAR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CDR ;
                     DUP 7 ;
                     GET 6 ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     DUP 6 ;
                     GET 3 ;
                     DUP 7 ;
                     GET 5 ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     CAR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         CAR ;
                         DUP 4 ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CONTRACT %set_pause bool ;
                         IF_NONE { PUSH int 61 ; FAILWITH } {} ;
                         AMOUNT ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {}
                            { PUSH string "WrongCondition: self.data.series.contains(params.series_id)" ;
                              FAILWITH } ;
                         DUP ;
                         CAR ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 6 ;
                              PUSH nat 1000 ;
                              GET ;
                              IF_NONE { PUSH int 162 ; FAILWITH } {} ;
                              CAR ;
                              DUP 3 ;
                              GET 5 ;
                              DUP 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                              GET 3 ;
                              DUP 3 ;
                              CDR ;
                              PUSH nat 1000 ;
                              ADD ;
                              GET ;
                              IF_NONE { PUSH int 160 ; FAILWITH } {} ;
                              CAR ;
                              CDR ;
                              COMPARE ;
                              LT ;
                              IF {}
                                 { PUSH string
                                        "WrongCondition: self.data.series[params.series_id].levels[1000 + params.series_id].minted < self.data.series_meta[1000].cap" ;
                                   FAILWITH } }
                            {} ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 6 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 164 ; FAILWITH } {} ;
                         CDR ;
                         DUP 7 ;
                         CAR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DIG 5 ;
                         GET 5 ;
                         DUP 6 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 158 ; FAILWITH } {} ;
                         SOME ;
                         DIG 5 ;
                         CDR ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         MEM ;
                         IF {} { PUSH string "PP_SERIES_UNDEFINED" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 3 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH nat 1000 ;
                         DUP 3 ;
                         ADD ;
                         MEM ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.series[params.token_id % 1000].levels.contains(params.token_id + 1000)" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 4 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH nat 1000 ;
                         DUP 4 ;
                         ADD ;
                         GET ;
                         IF_NONE { PUSH int 193 ; FAILWITH } {} ;
                         GET 3 ;
                         GET ;
                         IF_NONE { PUSH int 195 ; FAILWITH } {} ;
                         CAR ;
                         PUSH nat 1 ;
                         DUP 4 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 5 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH nat 1000 ;
                         DUP 5 ;
                         ADD ;
                         GET ;
                         IF_NONE { PUSH int 193 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         ADD ;
                         COMPARE ;
                         LE ;
                         IF {} { PUSH string "PP_TOKEN_CAPPED" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 4 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                         GET 3 ;
                         GET ;
                         IF_NONE { PUSH int 198 ; FAILWITH } {} ;
                         GET 3 ;
                         AMOUNT ;
                         COMPARE ;
                         GE ;
                         IF {} { PUSH string "PP_INSUFFICIENT_AMOUNT" ; FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CONTRACT %do_upgrade
                           (pair (pair (address %address) (nat %nt_id))
                                 (pair (map %nt_md string bytes) (pair (nat %token_id) (nat %upgrade_req)))) ;
                         IF_NONE { PUSH int 202 ; FAILWITH } {} ;
                         AMOUNT ;
                         DIG 4 ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 6 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 7 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 6 ;
                         GET ;
                         IF_NONE { PUSH int 190 ; FAILWITH } {} ;
                         GET 3 ;
                         GET ;
                         IF_NONE { PUSH int 213 ; FAILWITH } {} ;
                         GET 4 ;
                         DUP 5 ;
                         PAIR %token_id %upgrade_req ;
                         DUP 6 ;
                         GET 5 ;
                         PUSH nat 1000 ;
                         DUP 7 ;
                         EDIV ;
                         IF_NONE { PUSH int 186 ; FAILWITH } { CDR } ;
                         GET ;
                         IF_NONE { PUSH int 189 ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH nat 1000 ;
                         DUP 7 ;
                         ADD ;
                         GET ;
                         IF_NONE { PUSH int 193 ; FAILWITH } {} ;
                         GET 4 ;
                         PAIR %nt_md ;
                         PUSH nat 1000 ;
                         DIG 5 ;
                         ADD ;
                         SENDER ;
                         PAIR %address %nt_id ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         CONS } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
