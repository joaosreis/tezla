{ parameter
    (or (pair %getAdmin unit (contract address))
        (or (pair %getIssuer unit (contract address))
            (or (pair %getUser (address %user) (contract (option nat)))
                (or (list %assertReceivers address)
                    (or (list %assertTransfers (pair address (list address)))
                        (or (address %setAdmin)
                            (or (address %setIssuer)
                                (or (pair %updateUser (address %user) (option %transferlistId nat))
                                    (or (pair %updateTransferlist
                                           (nat %transferlistId)
                                           (option %v (pair bool (pair (list nat) (set nat)))))
                                        (pair %assertTransferlist
                                           (nat %transferlistId)
                                           (option %input (pair (bool %unrestricted) (set %allowedTransferlists nat))))))))))))) ;
  storage
    (pair (address %admin)
          (pair (address %issuer)
                (pair (big_map %users address nat)
                      (big_map %transferlists
                         nat
                         (pair (bool %unrestricted) (set %allowedTransferlists nat)))))) ;
  code { LAMBDA
           (pair (big_map nat (pair (bool %unrestricted) (set %allowedTransferlists nat)))
                 (pair (big_map address nat) address))
           bool
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH unit Unit ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             IF_NONE
               { PUSH bool False }
               { DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                 CAR ;
                 SWAP ;
                 DROP 1 } ;
             SWAP ;
             DROP 1 ;
             DUG 3 ;
             DROP 3 } ;
         NIL operation ;
         DIG 2 ;
         UNPAIR ;
         DIP 1 { UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP } ;
         IF_LEFT
           { UNPAIR ;
             DROP 1 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             AMOUNT ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP 1 { DIG 5 ; DROP 1 } ;
             DUG 5 ;
             DROP 1 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { UNPAIR ;
                 DROP 1 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 AMOUNT ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIP 1 { DIG 5 ; DROP 1 } ;
                 DUG 5 ;
                 DROP 1 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { UNPAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     AMOUNT ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     GET ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP 1 { DIG 6 ; DROP 1 } ;
                     DUG 6 ;
                     DROP 2 ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { DUP ;
                         ITER { DIG 7 ;
                                DUP ;
                                DUG 8 ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                DIG 5 ;
                                DUP ;
                                DUG 6 ;
                                PAIR ;
                                DIG 4 ;
                                DUP ;
                                DUG 5 ;
                                PAIR ;
                                EXEC ;
                                NOT ;
                                IF { PUSH string "error" ; FAILWITH } {} ;
                                DROP 1 } ;
                         DROP 1 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { IF_LEFT
                           { DUP ;
                             ITER { DUP ;
                                    CAR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    DUP ;
                                    ITER { DIG 7 ;
                                           DUP ;
                                           DUG 8 ;
                                           DIG 3 ;
                                           DUP ;
                                           DUG 4 ;
                                           COMPARE ;
                                           EQ ;
                                           IF { DIG 10 ;
                                                DUP ;
                                                DUG 11 ;
                                                DIG 1 ;
                                                DUP ;
                                                DUG 2 ;
                                                DIG 8 ;
                                                DUP ;
                                                DUG 9 ;
                                                PAIR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                PAIR ;
                                                EXEC ;
                                                NOT ;
                                                IF { PUSH string "error" ; FAILWITH } {} }
                                              { DIG 10 ;
                                                DUP ;
                                                DUG 11 ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                DIG 8 ;
                                                DUP ;
                                                DUG 9 ;
                                                PAIR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                PAIR ;
                                                EXEC ;
                                                NOT ;
                                                IF { PUSH string "error" ; FAILWITH } {} ;
                                                DIG 10 ;
                                                DUP ;
                                                DUG 11 ;
                                                DIG 1 ;
                                                DUP ;
                                                DUG 2 ;
                                                DIG 8 ;
                                                DUP ;
                                                DUG 9 ;
                                                PAIR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                PAIR ;
                                                EXEC ;
                                                NOT ;
                                                IF { PUSH string "error" ; FAILWITH } {} ;
                                                DIG 5 ;
                                                DUP ;
                                                DUG 6 ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                DIG 4 ;
                                                DUP ;
                                                DUG 5 ;
                                                GET ;
                                                IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                GET ;
                                                IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                CDR ;
                                                DIG 7 ;
                                                DUP ;
                                                DUG 8 ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                GET ;
                                                IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                MEM ;
                                                NOT ;
                                                IF { PUSH string "error" ; FAILWITH } {} } ;
                                           DROP 1 } ;
                                    DROP 3 } ;
                             DROP 1 ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             DIG 1 ;
                             PAIR }
                           { IF_LEFT
                               { DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 NOT ;
                                 IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                                 DUP ;
                                 DIP 1 { DIG 4 ; DROP 1 } ;
                                 DUG 4 ;
                                 DROP 1 ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DIG 1 ;
                                 PAIR }
                               { IF_LEFT
                                   { DIG 4 ;
                                     DUP ;
                                     DUG 5 ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     NOT ;
                                     IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                                     DUP ;
                                     DIP 1 { DIG 3 ; DROP 1 } ;
                                     DUG 3 ;
                                     DROP 1 ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     SWAP ;
                                     PAIR ;
                                     DIG 1 ;
                                     PAIR }
                                   { IF_LEFT
                                       { UNPAIR ;
                                         SWAP ;
                                         DIG 5 ;
                                         DUP ;
                                         DUG 6 ;
                                         SENDER ;
                                         COMPARE ;
                                         EQ ;
                                         NOT ;
                                         IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                                         DIG 1 ;
                                         DUP ;
                                         DUG 2 ;
                                         DIG 5 ;
                                         DUP ;
                                         DUG 6 ;
                                         COMPARE ;
                                         NEQ ;
                                         NOT ;
                                         IF { PUSH string "ISSUER_NOT_USER" ; FAILWITH } {} ;
                                         DUP ;
                                         IF_NONE
                                           { DIG 3 ; DUP ; DUG 4 ; NONE nat ; DIG 3 ; DUP ; DUG 4 ; UPDATE }
                                           { DIG 4 ;
                                             DUP ;
                                             DUG 5 ;
                                             DIG 1 ;
                                             DUP ;
                                             DUG 2 ;
                                             SOME ;
                                             DIG 4 ;
                                             DUP ;
                                             DUG 5 ;
                                             UPDATE ;
                                             SWAP ;
                                             DROP 1 } ;
                                         DIP 1 { DIG 3 ; DROP 1 } ;
                                         DUG 3 ;
                                         DROP 2 ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         DIG 1 ;
                                         PAIR }
                                       { IF_LEFT
                                           { UNPAIR ;
                                             SWAP ;
                                             DIG 5 ;
                                             DUP ;
                                             DUG 6 ;
                                             SENDER ;
                                             COMPARE ;
                                             EQ ;
                                             NOT ;
                                             IF { PUSH string "InvalidCaller" ; FAILWITH } {} ;
                                             DUP ;
                                             IF_NONE
                                               { DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 NONE (pair bool (set nat)) ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 UPDATE ;
                                                 DIP 1 { DIG 2 ; DROP 1 } ;
                                                 DUG 2 }
                                               { DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 GET ;
                                                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 CDR ;
                                                 CAR ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 CDR ;
                                                 CDR ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 UNPAIR ;
                                                 DROP 1 ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 PAIR ;
                                                 DIP 1 { DIG 3 ; DROP 1 } ;
                                                 DUG 3 ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 ITER { DIG 4 ;
                                                        DUP ;
                                                        DUG 5 ;
                                                        UNPAIR ;
                                                        SWAP ;
                                                        DROP 1 ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        PUSH bool False ;
                                                        DIG 3 ;
                                                        DUP ;
                                                        DUG 4 ;
                                                        UPDATE ;
                                                        SWAP ;
                                                        PAIR ;
                                                        DIP 1 { DIG 4 ; DROP 1 } ;
                                                        DUG 4 ;
                                                        DROP 1 } ;
                                                 DUP ;
                                                 ITER { DIG 4 ;
                                                        DUP ;
                                                        DUG 5 ;
                                                        UNPAIR ;
                                                        SWAP ;
                                                        DROP 1 ;
                                                        DIG 5 ;
                                                        DUP ;
                                                        DUG 6 ;
                                                        CDR ;
                                                        PUSH bool True ;
                                                        DIG 3 ;
                                                        DUP ;
                                                        DUG 4 ;
                                                        UPDATE ;
                                                        SWAP ;
                                                        PAIR ;
                                                        DIP 1 { DIG 4 ; DROP 1 } ;
                                                        DUG 4 ;
                                                        DROP 1 } ;
                                                 DIG 7 ;
                                                 DUP ;
                                                 DUG 8 ;
                                                 DIG 4 ;
                                                 DUP ;
                                                 DUG 5 ;
                                                 SOME ;
                                                 DIG 8 ;
                                                 DUP ;
                                                 DUG 9 ;
                                                 UPDATE ;
                                                 DIP 1 { DIG 7 ; DROP 1 } ;
                                                 DUG 7 ;
                                                 DROP 5 } ;
                                             DROP 2 ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIG 1 ;
                                             PAIR }
                                           { UNPAIR ;
                                             SWAP ;
                                             DUP ;
                                             IF_NONE
                                               { DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 MEM ;
                                                 IF { PUSH string "EXISTS_TR_ID" ; FAILWITH } {} }
                                               { DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 MEM ;
                                                 NOT ;
                                                 IF { PUSH string "TRANSFERLISTID_NOT_FOUNu" ; FAILWITH } {} ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 DIG 3 ;
                                                 DUP ;
                                                 DUG 4 ;
                                                 GET ;
                                                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CAR ;
                                                 COMPARE ;
                                                 EQ ;
                                                 NOT ;
                                                 IF { PUSH string "INVALID_UNRESTRICTED_STATE" ; FAILWITH } {} ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 ITER { DIG 1 ;
                                                        DUP ;
                                                        DUG 2 ;
                                                        CDR ;
                                                        DIG 1 ;
                                                        DUP ;
                                                        DUG 2 ;
                                                        MEM ;
                                                        NOT ;
                                                        IF { PUSH string "IS_NOT_SUBSET" ; FAILWITH } {} ;
                                                        DROP 1 } ;
                                                 DROP 2 } ;
                                             DROP 2 ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             SWAP ;
                                             PAIR ;
                                             DIG 1 ;
                                             PAIR } } } } } } } } } ;
         DIP 1 { DROP 1 } } }
