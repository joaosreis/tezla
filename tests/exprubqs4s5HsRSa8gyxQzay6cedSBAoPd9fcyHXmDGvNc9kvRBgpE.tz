{ parameter
    (or (or (pair %approve (address %ispender) (int %value))
            (pair %dotransfer (address %dest) (int %value)))
        (or (pair %dotransferfromsource (address %dest) (int %value))
            (pair %transferFrom (pair (address %from_) (address %to_)) (int %value)))) ;
  storage
    (pair (pair (map %allowance_assets address (pair (int %amount) (address %spender)))
                (map %tokenHolder_assets address int))
          (int %unit)) ;
  code { LAMBDA
           (pair (pair (pair (map address (pair int address)) (map address int)) int) address)
           (pair (pair address int) address)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PAIR ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (pair (map address (pair int address)) (map address int)) int) address)
           (pair address int)
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIP { DROP 3 } } ;
         LAMBDA
           (pair (pair (pair (map address (pair int address)) (map address int)) int)
                 (pair address int))
           (pair (pair (map address (pair int address)) (map address int)) int)
           { DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             MEM ;
             IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
             SWAP ;
             PAIR ;
             PAIR ;
             DIP { DROP 6 } } ;
         LAMBDA
           (pair (pair (pair (map address (pair int address)) (map address int)) int) address)
           bool
           { DUP ;
             CAR ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             MEM ;
             DIP { DROP } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SENDER ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 GE ;
                 NOT ;
                 IF { PUSH string "require d1 failed" ; FAILWITH } { PUSH unit Unit } ;
                 PUSH int 0 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 COMPARE ;
                 LE ;
                 IF { PUSH string "require f2 failed" ; FAILWITH } { PUSH unit Unit } ;
                 SENDER ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 MEM ;
                 DIP { DROP } ;
                 IF { SENDER ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      ADD ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      PAIR ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CAR ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 4 } }
                    { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      PUSH int 0 ;
                      ADD ;
                      SENDER ;
                      PAIR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      DUP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      MEM ;
                      IF { PUSH string "key already exists" ; FAILWITH } { PUSH unit Unit } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP 6 } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } } ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 8 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f0 failed" ; FAILWITH } { PUSH unit Unit } ;
                 SENDER ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f1 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SWAP ;
                 EXEC ;
                 IF { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      ADD ;
                      DIP { DROP } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 4 } }
                    { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      PUSH int 0 ;
                      ADD ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      SWAP ;
                      EXEC ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } } ;
                 SENDER ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SUB ;
                 DIP { DROP } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 11 } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PUSH int 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f00 failed" ; FAILWITH } { PUSH unit Unit } ;
                 SOURCE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f10 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 PAIR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SWAP ;
                 EXEC ;
                 IF { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      ADD ;
                      DIP { DROP } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 4 } }
                    { DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      PUSH int 0 ;
                      ADD ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      SWAP ;
                      EXEC ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } } ;
                 SOURCE ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SUB ;
                 DIP { DROP } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 11 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SWAP ;
                 EXEC ;
                 SENDER ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "require d2 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 PAIR ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 SWAP ;
                 EXEC ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GE ;
                 NOT ;
                 IF { PUSH string "require d3 failed" ; FAILWITH } { PUSH unit Unit } ;
                 PUSH int 0 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f3 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CAR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 PAIR ;
                 DIG 14 ;
                 DUP ;
                 DUG 15 ;
                 SWAP ;
                 EXEC ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "require f4 failed" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CAR ;
                 DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PUSH int 0 ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 DIG 11 ;
                 DUP ;
                 DUG 12 ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIG 17 ;
                 DUP ;
                 DUG 18 ;
                 SWAP ;
                 EXEC ;
                 IF { DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      CAR ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 16 ;
                      DUP ;
                      DUG 17 ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      ADD ;
                      DIP { DROP } ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 4 } }
                    { DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      CDR ;
                      PUSH int 0 ;
                      ADD ;
                      DIG 12 ;
                      DUP ;
                      DUG 13 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      PAIR ;
                      DIG 18 ;
                      DUP ;
                      DUG 19 ;
                      SWAP ;
                      EXEC ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DROP 2 } } ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 17 ;
                 DUP ;
                 DUG 18 ;
                 CDR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SUB ;
                 DIP { DROP } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 18 } } ;
             DIP { DROP } } ;
         DIP { DROP 6 } } }
