{ parameter
    (pair (pair (pair (address %admin) (int %amount_A))
                (pair (int %amount_B) (address %eventSinkContractAddress)))
          (pair (pair (timestamp %expiryTime) (address %publicAddress_A))
                (pair (address %publicAddress_B)
                      (pair (address %tokenAddress_A) (address %tokenAddress_B))))) ;
  storage
    (pair (set %_allEscrowAddresses address)
          (pair (big_map %_escrowAddressByParty address (set address)) (address %owner))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         { CDR ; CDR ; CDR ; CAR } ;
         PUSH (map string
                   (pair (int %amount) (pair (address %publicAddress) (address %tokenAddress))))
              {} ;
         SWAP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CDR ; CAR ; CDR } ;
         PAIR %publicAddress %tokenAddress ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CAR ; CAR ; CDR } ;
         PAIR %amount ;
         SOME ;
         PUSH string "party_A" ;
         UPDATE ;
         SWAP ;
         DUP ;
         DUG 2 ;
         { CDR ; CDR ; CDR ; CDR } ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CDR ; CDR ; CAR } ;
         PAIR %publicAddress %tokenAddress ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CAR ; CDR ; CAR } ;
         PAIR %amount ;
         SOME ;
         PUSH string "party_B" ;
         UPDATE ;
         SWAP ;
         DUP ;
         DUG 2 ;
         { CDR ; CAR ; CAR } ;
         PAIR %expiryTime %partyDetailsMap ;
         PUSH bool False ;
         PAIR %exchanged ;
         SWAP ;
         DUP ;
         DUG 2 ;
         { CAR ; CDR ; CDR } ;
         NOW ;
         PAIR %creationTime %eventSinkContractAddress ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         { CAR ; CAR ; CAR } ;
         PAIR %admin ;
         PAIR ;
         PUSH mutez 0 ;
         NONE key_hash ;
         CREATE_CONTRACT
           { parameter unit ;
             storage
               (pair (pair (address %admin)
                           (pair (timestamp %creationTime) (address %eventSinkContractAddress)))
                     (pair (bool %exchanged)
                           (pair (timestamp %expiryTime)
                                 (map %partyDetailsMap
                                    string
                                    (pair (int %amount) (pair (address %publicAddress) (address %tokenAddress))))))) ;
             code { DUP ;
                    CDR ;
                    SWAP ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    { CAR ; CAR } ;
                    SENDER ;
                    COMPARE ;
                    EQ ;
                    IF {} { PUSH string "01" ; FAILWITH } ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    { CDR ; CAR } ;
                    IF { PUSH string "Escrow already exchanged" ; FAILWITH } {} ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    { CDR ; CDR ; CAR } ;
                    NOW ;
                    COMPARE ;
                    LE ;
                    IF {} { PUSH string "Escrow already expired" ; FAILWITH } ;
                    DROP ;
                    DUP ;
                    { CDR ; CDR ; CDR } ;
                    NIL operation ;
                    SWAP ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:25" ; FAILWITH } {} } ;
                    { CDR ; CDR } ;
                    CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
                    { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                    PUSH mutez 0 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:19" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:19" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    PAIR %f %t ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:19" ; FAILWITH } {} } ;
                    CAR ;
                    PAIR %amount ;
                    TRANSFER_TOKENS ;
                    CONS ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:39" ; FAILWITH } {} } ;
                    { CDR ; CDR } ;
                    CONTRACT %transfer (pair (int %amount) (pair (address %f) (address %t))) ;
                    { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                    PUSH mutez 0 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    PAIR %f %t ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:33" ; FAILWITH } {} } ;
                    CAR ;
                    PAIR %amount ;
                    TRANSFER_TOKENS ;
                    CONS ;
                    SWAP ;
                    DUP ;
                    CAR ;
                    SWAP ;
                    { CDR ; CDR } ;
                    PUSH bool True ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    SWAP ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    { CAR ; CDR ; CDR } ;
                    CONTRACT %exchangeEvent
                      (pair (pair (address %DVPaddress) (int %amount_A))
                            (pair (int %amount_B) (pair (address %party_A) (address %party_B)))) ;
                    { IF_NONE { PUSH unit Unit ; FAILWITH } {} } ;
                    PUSH mutez 0 ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:53" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:53" ; FAILWITH } {} } ;
                    { CDR ; CAR } ;
                    PAIR %party_A %party_B ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_B" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:48" ; FAILWITH } {} } ;
                    CAR ;
                    PAIR %amount_B ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    { CDR ; CDR ; CDR } ;
                    PUSH string "party_A" ;
                    GET ;
                    { IF_NONE { PUSH string "Get-item:47" ; FAILWITH } {} } ;
                    CAR ;
                    SELF ;
                    ADDRESS ;
                    PAIR %DVPaddress %amount_A ;
                    PAIR ;
                    TRANSFER_TOKENS ;
                    CONS ;
                    NIL operation ;
                    SWAP ;
                    ITER { CONS } ;
                    PAIR } } ;
         PAIR ;
         DUP ;
         CAR ;
         NIL operation ;
         SWAP ;
         CONS ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         { CDR ; CAR } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         { CDR ; CAR ; CDR } ;
         MEM ;
         IF {}
            { DIG 3 ;
              DUP ;
              CAR ;
              SWAP ;
              CDR ;
              DUP ;
              CDR ;
              SWAP ;
              CAR ;
              PUSH (option (set address)) (Some {}) ;
              DIG 6 ;
              DUP ;
              DUG 7 ;
              { CDR ; CAR ; CDR } ;
              UPDATE ;
              PAIR ;
              SWAP ;
              PAIR ;
              DUG 3 } ;
         DIG 3 ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         { CDR ; CAR ; CDR } ;
         DUP ;
         DUG 2 ;
         GET ;
         { IF_NONE { PUSH string "set_in_top-nil-some" ; FAILWITH } {} } ;
         PUSH bool True ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR ;
         DUG 3 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         { CDR ; CAR } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         { CDR ; CDR ; CAR } ;
         MEM ;
         IF {}
            { DIG 3 ;
              DUP ;
              CAR ;
              SWAP ;
              CDR ;
              DUP ;
              CDR ;
              SWAP ;
              CAR ;
              PUSH (option (set address)) (Some {}) ;
              DIG 6 ;
              DUP ;
              DUG 7 ;
              { CDR ; CDR ; CAR } ;
              UPDATE ;
              PAIR ;
              SWAP ;
              PAIR ;
              DUG 3 } ;
         DIG 3 ;
         DUP ;
         CAR ;
         SWAP ;
         CDR ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         DIG 6 ;
         { CDR ; CDR ; CAR } ;
         DUP ;
         DUG 2 ;
         GET ;
         { IF_NONE { PUSH string "set_in_top-nil-some" ; FAILWITH } {} } ;
         PUSH bool True ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR ;
         DUG 2 ;
         DIG 2 ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH bool True ;
         DIG 4 ;
         CDR ;
         UPDATE ;
         PAIR ;
         SWAP ;
         PAIR } }
