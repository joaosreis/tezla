{ storage
    (pair (pair (pair (pair (list %ms (map string int)) (list %rs (pair (int %a) (int %b)))) (int %x))
                (map %xxs int (map int nat)))
          (map %xxxs int (map int (map int int)))) ;
  parameter
    (or (or (or (or (or (or (unit %ep1) (unit %ep2)) (unit %ep3)) (unit %ep4)) (unit %ep5))
            (unit %ep6))
        (unit %ep7)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { { IF_LEFT
                             { IF_LEFT
                                 { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     CAR ;
                                     PUSH int 0 ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 ;
                                     SWAP ;
                                     DROP ;
                                     PUSH (pair int int) (Pair 5 6) ;
                                     DUP ;
                                     PUSH (list (pair (int %a) (int %b))) {} ;
                                     SWAP ;
                                     CONS ;
                                     PUSH (pair int int) (Pair 2 3) ;
                                     CONS ;
                                     ITER { DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            CAR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            CAR ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            ADD ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 4 ;
                                            DROP ;
                                            DIG 2 ;
                                            DROP } ;
                                     PUSH int 7 ;
                                     DIG 3 ;
                                     DUP ;
                                     DUG 4 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     COMPARE ;
                                     EQ ;
                                     IF { {} }
                                        { { PUSH string "WrongCondition: self.data.x == 7" ; FAILWITH } } ;
                                     DROP ;
                                     DROP } }
                                 { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     SWAP ;
                                     CAR ;
                                     CAR ;
                                     PUSH int 2 ;
                                     SWAP ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     DUG 2 ;
                                     SWAP ;
                                     DROP ;
                                     PUSH (list int) {} ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CONS ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CONS ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     CONS ;
                                     ITER { DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            CAR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            ADD ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 3 ;
                                            DROP ;
                                            SWAP ;
                                            DROP } ;
                                     PUSH int 8 ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     COMPARE ;
                                     EQ ;
                                     IF { {} }
                                        { { PUSH string "WrongCondition: self.data.x == 8" ; FAILWITH } } ;
                                     DROP } } }
                             { { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 CAR ;
                                 PUSH (list (pair (int %a) (int %b))) { Pair 2 3 ; Pair 2 3 ; Pair 2 3 } ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 2 ;
                                 SWAP ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 MAP { DUP ; CDR ; PUSH int 0 ; PAIR ; SWAP ; DROP } ;
                                 SWAP ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 CAR ;
                                 CAR ;
                                 DIG 5 ;
                                 DUP ;
                                 DUG 6 ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 3 ;
                                 DROP ;
                                 DROP ;
                                 DROP } } ;
                           NIL operation } }
                       { { SWAP ;
                           DUP ;
                           DUG 2 ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           CAR ;
                           PUSH (map int (map int nat))
                                { Elt 0 { Elt 0 2 ; Elt 1 3 } ;
                                  Elt 1 { Elt 0 2 ; Elt 1 3 } ;
                                  Elt 2 { Elt 0 2 ; Elt 1 3 } } ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DUG 2 ;
                           SWAP ;
                           DROP ;
                           NIL operation ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           CDR ;
                           MAP { CDR ;
                                 DUP ;
                                 PUSH (option nat) (Some 0) ;
                                 PUSH int 0 ;
                                 UPDATE ;
                                 SWAP ;
                                 DROP ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 PUSH address "tz1PiDHTNJXhqpkbRUYNZEzmePNd21WcB8yB" ;
                                 CONTRACT unit ;
                                 IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                 PUSH mutez 1 ;
                                 DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 PUSH int 1 ;
                                 GET ;
                                 IF_NONE { { PUSH string "Get-item:43" ; FAILWITH } } {} ;
                                 MUL ;
                                 PUSH unit Unit ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUG 2 ;
                                 SWAP ;
                                 DROP } ;
                           SWAP ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           CAR ;
                           CAR ;
                           DIG 3 ;
                           DUP ;
                           DUG 4 ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DUG 4 ;
                           DIG 3 ;
                           DROP ;
                           SWAP ;
                           DROP ;
                           SWAP ;
                           DROP } } }
                   { { SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       PUSH int 0 ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       PUSH (map int (map int (map int int)))
                            { Elt 0 { Elt 0 { Elt 0 1 } } ; Elt 1 { Elt 0 { Elt 0 2 } } } ;
                       SWAP ;
                       PAIR ;
                       DUG 2 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       GET ;
                       IF_NONE { { PUSH string "Get-item:14" ; FAILWITH } } {} ;
                       MAP { CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             CAR ;
                             PUSH int 1 ;
                             SWAP ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DUG 3 ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             PUSH (option int) (Some 0) ;
                             PUSH int 0 ;
                             UPDATE ;
                             SWAP ;
                             DROP } ;
                       SWAP ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       DUP ;
                       CAR ;
                       SWAP ;
                       CDR ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       SOME ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       DUG 3 ;
                       DROP ;
                       DROP ;
                       DROP ;
                       NIL operation } } }
               { { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   PUSH (map int (map int (map int int)))
                        { Elt 0 { Elt 0 { Elt 0 0 } ; Elt 1 { Elt 0 10 } } ;
                          Elt 1 { Elt 0 { Elt 0 20 } ; Elt 1 { Elt 0 30 } } } ;
                   SWAP ;
                   PAIR ;
                   DUG 2 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   MAP { CDR ; DUP ; PUSH (option int) (Some 1) ; PUSH int 0 ; UPDATE ; SWAP ; DROP } ;
                   SWAP ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DUP ;
                   CAR ;
                   SWAP ;
                   CDR ;
                   DIG 3 ;
                   DUP ;
                   DUG 4 ;
                   SOME ;
                   DIG 5 ;
                   DUP ;
                   DUG 6 ;
                   CDR ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   PUSH int 0 ;
                   GET ;
                   IF_NONE { { PUSH string "Get-item:59" ; FAILWITH } } {} ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   DUG 3 ;
                   DROP ;
                   DROP ;
                   DROP ;
                   NIL operation } } }
           { { SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               CDR ;
               PUSH (list (map string int))
                    { { Elt "a" 97 ; Elt "b" 98 } ; { Elt "a" 0 ; Elt "b" 1 } } ;
               PAIR ;
               PAIR ;
               PAIR ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CAR ;
               CAR ;
               MAP { DUP ; NONE int ; PUSH string "a" ; UPDATE ; SWAP ; DROP } ;
               SWAP ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               CDR ;
               DIG 5 ;
               DUP ;
               DUG 6 ;
               PAIR ;
               PAIR ;
               PAIR ;
               PAIR ;
               DUG 3 ;
               DROP ;
               DROP ;
               DROP ;
               NIL operation } } ;
         PAIR } }
