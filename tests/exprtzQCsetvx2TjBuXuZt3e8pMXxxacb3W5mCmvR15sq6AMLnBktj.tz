{ storage (pair (list %l string) (int %result)) ;
  parameter string ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH nat 0 ;
         PUSH (list string) {} ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         SIZE ;
         PUSH nat 0 ;
         DUP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         GT ;
         LOOP { PUSH string " " ;
                DIG 5 ;
                DUP ;
                DUG 6 ;
                PUSH nat 1 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                SLICE ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                COMPARE ;
                EQ ;
                IF { { DIG 2 ;
                       DUP ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       DIG 5 ;
                       DUP ;
                       DUG 6 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       DIG 6 ;
                       DUP ;
                       DUG 7 ;
                       SLICE ;
                       IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                       CONS ;
                       SWAP ;
                       DROP ;
                       DUG 2 ;
                       DIG 3 ;
                       PUSH nat 1 ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       ADD ;
                       SWAP ;
                       DROP ;
                       DUG 3 } }
                   { {} } ;
                PUSH nat 1 ;
                ADD ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT } ;
         DROP ;
         DROP ;
         PUSH nat 0 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         SIZE ;
         COMPARE ;
         GT ;
         IF { { DUP ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                DIG 3 ;
                DUP ;
                DUG 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                SIZE ;
                SUB ;
                ISNAT ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                SLICE ;
                IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                CONS ;
                SWAP ;
                DROP } }
            { {} } ;
         DUP ;
         NIL string ;
         SWAP ;
         ITER { CONS } ;
         PUSH (list int) {} ;
         SWAP ;
         DUP ;
         DUG 2 ;
         ITER { DUP ;
                PUSH string "" ;
                COMPARE ;
                NEQ ;
                IF { { DUP ;
                       PUSH string "+" ;
                       COMPARE ;
                       EQ ;
                       IF { { SWAP ;
                              DUP ;
                              DUG 2 ;
                              IF_CONS
                                { { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    IF_CONS
                                      { { DIG 5 ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          SWAP ;
                                          DROP ;
                                          DUG 5 ;
                                          DIG 5 ;
                                          DUP ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          DIG 5 ;
                                          DUP ;
                                          DUG 6 ;
                                          ADD ;
                                          CONS ;
                                          SWAP ;
                                          DROP ;
                                          DUG 5 ;
                                          DROP ;
                                          DROP } }
                                      { {} } ;
                                    DROP ;
                                    DROP } }
                                { {} } } }
                          { { DUP ;
                              PUSH string "*" ;
                              COMPARE ;
                              EQ ;
                              IF { { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     IF_CONS
                                       { { SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           IF_CONS
                                             { { DIG 5 ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 SWAP ;
                                                 DROP ;
                                                 DUG 5 ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DIG 2 ;
                                                 DUP ;
                                                 DUG 3 ;
                                                 DIG 5 ;
                                                 DUP ;
                                                 DUG 6 ;
                                                 MUL ;
                                                 CONS ;
                                                 SWAP ;
                                                 DROP ;
                                                 DUG 5 ;
                                                 DROP ;
                                                 DROP } }
                                             { {} } ;
                                           DROP ;
                                           DROP } }
                                       { {} } } }
                                 { { PUSH int 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SIZE ;
                                     PUSH nat 0 ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     COMPARE ;
                                     GT ;
                                     LOOP { DIG 2 ;
                                            PUSH (map string int)
                                                 { Elt "0" 0 ;
                                                   Elt "1" 1 ;
                                                   Elt "2" 2 ;
                                                   Elt "3" 3 ;
                                                   Elt "4" 4 ;
                                                   Elt "5" 5 ;
                                                   Elt "6" 6 ;
                                                   Elt "7" 7 ;
                                                   Elt "8" 8 ;
                                                   Elt "9" 9 } ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            PUSH nat 1 ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            SLICE ;
                                            IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                                            GET ;
                                            IF_NONE { { PUSH string "Get-item:32" ; FAILWITH } } {} ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            PUSH int 10 ;
                                            MUL ;
                                            ADD ;
                                            SWAP ;
                                            DROP ;
                                            DUG 2 ;
                                            PUSH nat 1 ;
                                            ADD ;
                                            DUP ;
                                            DIG 2 ;
                                            DUP ;
                                            DUG 3 ;
                                            COMPARE ;
                                            GT } ;
                                     DROP ;
                                     DROP ;
                                     DUP ;
                                     DIG 3 ;
                                     DUP ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CONS ;
                                     SWAP ;
                                     DROP ;
                                     DUG 3 ;
                                     DROP ;
                                     DROP } } } } } }
                   { {} } ;
                DROP } ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         DUG 6 ;
         DIG 5 ;
         DROP ;
         DUP ;
         IF_CONS
           { { DIG 7 ;
               DUP ;
               DUG 8 ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 2 ;
               SWAP ;
               PAIR ;
               DUG 8 ;
               DROP ;
               DROP ;
               DIG 5 ;
               DROP } }
           { {} } ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         DROP ;
         NIL operation ;
         PAIR } }
