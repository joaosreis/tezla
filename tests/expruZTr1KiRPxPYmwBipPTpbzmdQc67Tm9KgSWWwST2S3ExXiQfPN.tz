{ parameter (list (pair (sapling_transaction %transaction 8) (option %key key_hash))) ;
  storage (pair (mutez %balance) (sapling_state %ledger 8)) ;
  code { UNPAIR ;
         DUP ;
         NIL operation ;
         SWAP ;
         ITER { DUP 4 ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                SAPLING_VERIFY_UPDATE ;
                { IF_NONE { PUSH int 21 ; FAILWITH } {} } ;
                DIG 4 ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                SWAP ;
                PAIR ;
                DUG 4 ;
                DUP ;
                CAR ;
                DUP ;
                ABS ;
                PUSH mutez 1 ;
                MUL ;
                DIG 6 ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                PAIR ;
                DUG 6 ;
                PUSH int 0 ;
                DUP 3 ;
                COMPARE ;
                GT ;
                IF { SWAP ;
                     DROP ;
                     SWAP ;
                     DROP ;
                     DUG 2 ;
                     CDR ;
                     { IF_NONE { PUSH int 28 ; FAILWITH } {} } ;
                     IMPLICIT_ACCOUNT ;
                     DIG 2 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     CDR ;
                     { IF_NONE
                         { SWAP ; DROP }
                         { PUSH string "WrongCondition: ~ operation.key.is_some()" ; FAILWITH } } ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.amount == amount_tez.value" ; FAILWITH } } } ;
         SWAP ;
         DROP ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         PAIR } }
