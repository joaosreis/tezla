{ parameter
    (or (or (or (or (pair %addGame
                       (address %gameAddress)
                       (pair (nat %entryPrice) (pair (bool %enabled) (bool %staged))))
                    (pair %approve (address %to) (nat %value)))
                (or (nat %burn)
                    (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))))
            (or (or (pair %getBalance (address %owner) (contract nat))
                    (pair %getTotalSupply unit (contract nat)))
                (or (pair %mint (address %to) (nat %value))
                    (pair %playGame (address %gameAddress) (list %guess nat)))))
        (pair %transfer (address %from) (pair (address %to) (nat %value)))) ;
  storage
    (pair (pair (pair (address %colateral_owner)
                      (big_map %games
                         address
                         (pair (pair (bool %enabled) (nat %entry_price)) (bool %staged))))
                (pair (big_map %ledger address (pair (map %allowances address nat) (nat %balance)))
                      (big_map %metadata string bytes)))
          (pair (pair (big_map %token_metadata
                         nat
                         (pair (pair (pair (nat %decimals) (map %extras string bytes))
                                     (pair (string %name) (string %symbol)))
                               (nat %token_id)))
                      (address %token_owner))
                (nat %totalSupply))) ;
  code { NIL operation ;
         LAMBDA
           (pair address
                 (pair (pair (pair address (big_map address (pair (pair bool nat) bool)))
                             (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)))
                       (pair (pair (big_map nat (pair (pair (pair nat (map string bytes)) (pair string string)) nat))
                                   address)
                             nat)))
           (pair (map address nat) nat)
           { { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 ; EMPTY_MAP address nat ; PAIR } {} } ;
         LAMBDA
           (pair (pair (map address nat) nat) address)
           nat
           { { { DUP ; CAR ; DIP { CDR } } } ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         CAR ;
                         DIG 2 ;
                         { { DUP ; CAR ; DIP { CDR } } } ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unauthorized" ; FAILWITH } {} ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DIG 6 ;
                         DIG 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { { { DUP ; CAR ; DIP { CDR } } } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 0 ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         COMPARE ;
                         GT ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         COMPARE ;
                         GT ;
                         AND ;
                         IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         DIG 6 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unauthorized" ; FAILWITH } {} ;
                         DUP ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "InsufficientSupply" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SUB ;
                         ABS ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         SUB ;
                         ABS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 4 ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         { { DUP ; CAR ; DIP { CDR } } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { { { DUP ; CAR ; DIP { CDR } } } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         NIL operation ;
                         DIG 3 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         NIL operation ;
                         DIG 2 ;
                         PUSH mutez 0 ;
                         DIG 4 ;
                         CDR ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { { { DUP ; CAR ; DIP { CDR } } } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Unauthorized" ; FAILWITH } {} ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DIG 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 3 ;
                         DROP ;
                         { { DUP ; CAR ; DIP { CDR } } } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SENDER ;
                         PAIR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         SWAP ;
                         EXEC ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE
                           { PUSH bool False ; PUSH nat 0 ; PUSH bool False ; PAIR ; PAIR }
                           {} ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         PUSH bool False ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         AND ;
                         IF { PUSH string "GameNotActive" ; FAILWITH }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              COMPARE ;
                              GT ;
                              IF { PUSH string "NotEnoughBalance" ; FAILWITH }
                                 { PUSH nat 0 ;
                                   { DIP 4 { DUP } ; DIG 5 } ;
                                   SIZE ;
                                   COMPARE ;
                                   EQ ;
                                   PUSH bool False ;
                                   { DIP 2 { DUP } ; DIG 3 } ;
                                   CDR ;
                                   COMPARE ;
                                   EQ ;
                                   AND ;
                                   IF { PUSH string "GameNeedsMoreGuessParams" ; FAILWITH } {} } } ;
                         DIG 4 ;
                         DUP ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 6 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CDR ;
                         SUB ;
                         ABS ;
                         DIG 3 ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CDR ;
                         ADD ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         { DIP 4 { DUP } ; DIG 5 } ;
                         CDR ;
                         { DIP 5 { DUP } ; DIG 6 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 6 { DUP } ; DIG 7 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CONTRACT (list nat) ;
                         IF_NONE { PUSH string "ContractNotFound" ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         DIG 6 ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         { DIP 2 { DUP } ; DIG 3 } ;
                         CAR ;
                         CDR ;
                         CDR ;
                         { DIP 3 { DUP } ; DIG 4 } ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         DIG 6 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } } }
           { DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             DIG 2 ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { DIP 3 { DUP } ; DIG 4 } ;
             PAIR ;
             { DIP 6 { DUP } ; DIG 7 } ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             SENDER ;
             { DIP 4 { DUP } ; DIG 5 } ;
             COMPARE ;
             NEQ ;
             IF { SENDER ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  PAIR ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  { DIP 2 { DUP } ; DIG 3 } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  { DIP 3 { DUP } ; DIG 4 } ;
                  DIG 3 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  SENDER ;
                  UPDATE ;
                  PAIR }
                { DIG 5 ; DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SUB ;
             ABS ;
             SWAP ;
             CAR ;
             PAIR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CDR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CDR ;
             CDR ;
             { DIP 4 { DUP } ; DIG 5 } ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DIG 6 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             { DIP 3 { DUP } ; DIG 4 } ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             ADD ;
             SWAP ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             { DIP 2 { DUP } ; DIG 3 } ;
             CAR ;
             CDR ;
             CDR ;
             { DIP 3 { DUP } ; DIG 4 } ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DIG 5 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }
