{ storage
    (map nat
         (pair (pair (pair (address %address) (nat %approverCount))
                     (pair (map %approvers address bool) (mutez %balance)))
               (pair (pair (string %description) (mutez %minimumAmount))
                     (pair (string %name)
                           (map %requests
                              nat
                              (pair (pair (nat %approvecount) (pair (map %approvers address bool) (bool %complete)))
                                    (pair (string %description) (pair (address %recipent) (mutez %value))))))))) ;
  parameter
    (or (or (pair %approve (nat %Rindex) (nat %index))
            (pair %createCampaign
               (string %description)
               (pair (mutez %minimumAmount) (string %name))))
        (or (pair %createRequest
               (pair (string %description) (nat %index))
               (pair (address %recipent) (mutez %value)))
            (or (nat %donate) (pair %finalizeRequest (nat %Rindex) (nat %index))))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 52 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 MEM ;
                 IF {}
                    { PUSH string
                           "WrongCondition: self.data.camps[params.index].approvers.contains(sp.sender)" ;
                      FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 53 ; FAILWITH } {} ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH int 53 ; FAILWITH } {} ;
                 CAR ;
                 GET 3 ;
                 SENDER ;
                 MEM ;
                 IF { PUSH string
                           "WrongCondition: ~ (self.data.camps[params.index].requests[params.Rindex].approvers.contains(sp.sender))" ;
                      FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUP 3 ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                 DUP ;
                 GET 6 ;
                 DUP ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 54 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 SWAP ;
                 UNPAIR ;
                 PUSH (option bool) (Some True) ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP ;
                 DUP 3 ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                 DUP ;
                 GET 6 ;
                 DUP ;
                 DIG 5 ;
                 CAR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 55 ; FAILWITH } {} ;
                 UNPAIR ;
                 UNPAIR ;
                 PUSH nat 1 ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 SOME ;
                 SWAP ;
                 UPDATE }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 EMPTY_MAP
                   nat
                   (pair (pair nat (pair (map address bool) bool)) (pair string (pair address mutez))) ;
                 DUP 3 ;
                 GET 4 ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 AMOUNT ;
                 EMPTY_MAP address bool ;
                 PAIR ;
                 PUSH nat 0 ;
                 SENDER ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 DIG 2 ;
                 SIZE ;
                 UPDATE } ;
             NIL operation }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 DUP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                 DUP ;
                 GET 6 ;
                 DIG 4 ;
                 DUP ;
                 GET 4 ;
                 SWAP ;
                 DUP ;
                 DUG 6 ;
                 GET 3 ;
                 PAIR ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PUSH (pair nat (pair (map address bool) bool)) (Pair 0 (Pair {} False)) ;
                 PAIR ;
                 SOME ;
                 DIG 6 ;
                 DIG 6 ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH int 45 ; FAILWITH } {} ;
                 GET 6 ;
                 SIZE ;
                 UPDATE ;
                 UPDATE 6 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 NIL operation }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     SIZE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LT ;
                     IF {}
                        { PUSH string "WrongCondition: params.index < sp.len(self.data.camps)" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 30 ; FAILWITH } {} ;
                     GET 3 ;
                     CDR ;
                     AMOUNT ;
                     COMPARE ;
                     GE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: sp.amount >= self.data.camps[params.index].minimumAmount" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUP 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 31 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     PUSH nat 1 ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DUP 3 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 32 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH (option bool) (Some True) ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 33 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     AMOUNT ;
                     ADD ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 62 ; FAILWITH } {} ;
                     GET 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 62 ; FAILWITH } {} ;
                     CAR ;
                     GET 4 ;
                     IF { PUSH string
                               "WrongCondition: ~ self.data.camps[params.index].requests[params.Rindex].complete" ;
                          FAILWITH }
                        {} ;
                     PUSH nat 2 ;
                     DUP 3 ;
                     DUP 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     CDR ;
                     EDIV ;
                     IF_NONE { PUSH int 63 ; FAILWITH } { CAR } ;
                     DUP 3 ;
                     DUP 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 63 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     IF {}
                        { PUSH string
                               "WrongCondition: self.data.camps[params.index].requests[params.Rindex].approvecount > (self.data.camps[params.index].approverCount // 2)" ;
                          FAILWITH } ;
                     NIL operation ;
                     DUP 3 ;
                     DUP 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     GET 6 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     GET 5 ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "Request processed" ; FAILWITH } {} ;
                     DUP 4 ;
                     DUP 4 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     GET 6 ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 66 ; FAILWITH } {} ;
                     GET 6 ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIG 2 ;
                     DUP ;
                     DUP 4 ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 67 ; FAILWITH } {} ;
                     DUP ;
                     GET 6 ;
                     DUP ;
                     DUP 7 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 67 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     CAR ;
                     PUSH bool True ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 6 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DUG 3 ;
                     DUP ;
                     DUP 4 ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 68 ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DIG 8 ;
                     DUP 9 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 68 ; FAILWITH } {} ;
                     GET 6 ;
                     DIG 8 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 68 ; FAILWITH } {} ;
                     GET 6 ;
                     SWAP ;
                     SUB ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP } } } ;
         PAIR } }
