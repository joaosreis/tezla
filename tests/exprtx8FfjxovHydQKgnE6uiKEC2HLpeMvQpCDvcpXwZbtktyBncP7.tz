{ parameter
    (or (or (or (address %changeAddressToPay) (pair %changeOwner address bool))
            (or (set %generateCardSequence int) (unit %participate)))
        (or (unit %provideFund) (unit %startGame))) ;
  storage
    (pair (pair (pair (address %addressToPay) (bool %available))
                (pair (mutez %bet) (set %cardSequence int)))
          (pair (pair (map %owners address bool) (address %player))
                (pair (int %playerHand) (bool %ready)))) ;
  code { NIL operation ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { FAILWITH } { DROP ; UNIT } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair bool string) unit)
                 (pair (pair (pair address bool) (pair mutez (set int)))
                       (pair (pair (map address bool) address) (pair int bool))))
           unit
           { UNPAIR ;
             SWAP ;
             CDR ;
             CAR ;
             CAR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "NOT OWNER" ; FAILWITH } {} ;
             PUSH string "Owner privilege Revoke" ;
             PUSH bool False ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             PAIR ;
             EXEC ;
             DROP ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 2 ;
                     DROP 2 ;
                     PUSH string "GAME ALREADY STARTED" ;
                     PUSH bool False ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND SEND TO CONTRACT" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DUP 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "NOT ENOUGH FUND IN CONTRACT TO PLAY" ;
                     PUSH nat 3 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     MUL ;
                     BALANCE ;
                     COMPARE ;
                     LT ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     PUSH bool False ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DROP 2 ;
                 PUSH string "YOU MUST SEND FUND" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 PAIR }
               { DROP ;
                 PUSH string "CARD SEQUENCE NOT SET BY THE ADMINISTRATOR" ;
                 PUSH bool False ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "NO ENOUGH FUND IN CONTRACT TO PLAY" ;
                 BALANCE ;
                 PUSH nat 3 ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 MUL ;
                 COMPARE ;
                 LE ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DUP ; DIG 2 ; SWAP ; EXEC } { SWAP ; DROP ; PUSH unit Unit } ;
                 DROP ;
                 DUP ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        PAIR ;
                        PUSH int 21 ;
                        DUP 4 ;
                        CDR ;
                        CDR ;
                        CAR ;
                        COMPARE ;
                        EQ ;
                        IF { DIG 3 ;
                             DROP ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             CONTRACT unit ;
                             IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                             PUSH nat 3 ;
                             DIG 4 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             MUL ;
                             UNIT ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             CDR ;
                             DUG 2 ;
                             CONS ;
                             PAIR }
                           { SWAP ;
                             DROP ;
                             PUSH int 21 ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             COMPARE ;
                             LT ;
                             IF { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  DIG 3 ;
                                  CDR ;
                                  DUP 4 ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  ADD ;
                                  PAIR ;
                                  DUP 3 ;
                                  CDR ;
                                  CAR ;
                                  PAIR ;
                                  DIG 2 ;
                                  CAR ;
                                  PAIR }
                                { DIG 2 ; DROP ; SWAP } ;
                             SWAP ;
                             CAR ;
                             PAIR } } ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PUSH bool True ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PUSH bool False ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR } } } }
