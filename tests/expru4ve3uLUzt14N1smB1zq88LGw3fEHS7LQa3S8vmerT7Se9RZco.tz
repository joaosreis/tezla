{ storage
    (pair (pair (pair (string %current) (int %played)) (list %rules string)) (int %verse)) ;
  parameter int ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         PUSH int 0 ;
         DUP ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         COMPARE ;
         GT ;
         LOOP { PUSH int 16 ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CDR ;
                COMPARE ;
                EQ ;
                IF { { DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       PUSH int 1 ;
                       DIG 7 ;
                       DUP ;
                       DUG 8 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 4 ;
                       DIG 3 ;
                       DROP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       PUSH string "" ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 4 ;
                       DIG 3 ;
                       DROP ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       PUSH int 0 ;
                       SWAP ;
                       PAIR ;
                       DUG 4 ;
                       DIG 3 ;
                       DROP } }
                   { {} } ;
                PUSH string "" ;
                DIG 4 ;
                DUP ;
                DUG 5 ;
                CAR ;
                CAR ;
                CAR ;
                COMPARE ;
                NEQ ;
                IF { { DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       PUSH string "\\n" ;
                       DIG 7 ;
                       DUP ;
                       DUG 8 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CONCAT ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DUG 4 ;
                       DIG 3 ;
                       DROP } }
                   { {} } ;
                PUSH int 1 ;
                ADD ;
                DUP ;
                DIG 2 ;
                DUP ;
                DUG 3 ;
                COMPARE ;
                GT } ;
         DROP ;
         DROP ;
         DROP ;
         NIL operation ;
         PAIR } }
