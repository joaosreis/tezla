{ storage (map int (pair (map %a string (map int int)) (mutez %b))) ;
  parameter int ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         SWAP ;
         PUSH (option (pair (map %a string (map int int)) (mutez %b))) (Some (Pair {} 0)) ;
         PUSH int 1 ;
         UPDATE ;
         SWAP ;
         SWAP ;
         DUP ;
         PUSH int 1 ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         CAR ;
         AMOUNT ;
         SWAP ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         SWAP ;
         DUP ;
         PUSH int 1 ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH (option (map int int)) (Some {}) ;
         PUSH string "for" ;
         UPDATE ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         SWAP ;
         DUP ;
         PUSH int 1 ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         PUSH (option (map int int)) (Some {}) ;
         PUSH string "against" ;
         UPDATE ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         SWAP ;
         DUP ;
         PUSH int 1 ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         PUSH string "for" ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         SOME ;
         PUSH int 1 ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         SWAP ;
         SWAP ;
         DUP ;
         PUSH int 1 ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         DUP ;
         PUSH string "against" ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE { { PUSH string "set_in_top-any" ; FAILWITH } } {} ;
         DIG 6 ;
         SOME ;
         PUSH int 1 ;
         UPDATE ;
         SOME ;
         SWAP ;
         UPDATE ;
         PAIR ;
         SOME ;
         SWAP ;
         UPDATE ;
         NIL operation ;
         PAIR } }
